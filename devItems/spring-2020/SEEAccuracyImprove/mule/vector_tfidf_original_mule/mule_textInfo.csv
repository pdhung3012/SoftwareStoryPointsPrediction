no,text
1,implement true multicast functionality for < all > processor . currently < all > processes messages sequentially . it could be an issue if message processors inside < all > take long time to respond ( e.g . multiple request-response endpoints ) . we discussed it with mikes and agreed that the behavior should be configurable ( e.g . < all multicast= '' true '' > ) - if set to true   < all > will spawn multiple threads inside . if one of the mps inside < all > throws an exception   it should return muleexceptionmessage which should be included in the response collection   then exception strategy should be invoked .
2,does mule support xa transaction on xa resources used by a spring object component ? . as you should know   a common use case is the bridge pattern : * read a message from an inbound endpoint ( from a jms queue or/and a database through jdbc ) . * writing the message to an outbound endpoint ( to a jms queue or/and a database through jdbc ) . { code : xml } < service name= '' mybridgeservice '' > < inbound > < jms : inbound-endpoint queue= '' /queue/inbox '' / > < /inbound > < outbound > < multicasting-router > < jms : outbound-endpoint queue= '' /queue/outbox '' / > < jdbc : outbound-endpoint querykey= '' insertmessagestmt '' / > < /multicasting-router > < /outbound > < /service > { code } what happens then if something goes wrong when writing the result to the outbound endpoint ( eg . jdbc endpoint ) ? if you do n't use xa transaction on inbound and outbound endpoints   the message will not be rollbacked to the inbound endpoint in case of an exception . so you will have to solve this issue by configuring < xa-transaction > on each endpoint with the appropriate transaction strategy . { code : xml } < service name= '' mybridgeservice '' > < inbound > < jms : inbound-endpoint queue= '' /queue/inbox '' > < xa-transaction action= '' always_begin '' / > < /jms : inbound-endpoint > < /inbound > < outbound > < multicasting-router > < jms : outbound-endpoint queue= '' /queue/outbox '' > < xa-transaction action= '' always_join '' / > < /jms : outbound-endpoint > < jdbc : outbound-endpoint querykey= '' insertmessagestmt '' > < xa-transaction action= '' always_join '' / > < /jdbc : outbound-endpoint > < /multicasting-router > < /outbound > < /service > { code } but what happens now if you have a component between inbound and outbound enpoints ? { code : xml } < service name= '' mydaoservice '' > < inbound > < jms : inbound-endpoint queue= '' /queue/inbox '' > < xa-transaction action= '' always_begin '' / > < /jms : inbound-endpoint > < /inbound > < component > < spring-object bean= '' messagedao '' / > < /component > < outbound > < multicasting-router > < jms : outbound-endpoint queue= '' /queue/outbox '' > < xa-transaction action= '' always_join '' / > < /jms : outbound-endpoint > < jdbc : outbound-endpoint querykey= '' insertmessagestmt '' > < xa-transaction action= '' always_join '' / > < /jdbc : outbound-endpoint > < /multicasting-router > < /outbound > < /service > { code } in most cases   the spring object component ( eg . messsagedao ) will execute complicated business operations ( from a currently existing business api ) and also use a datasource to execute several sql select and update statements before returning a result to the outbound . these jdbc operations will be handled likely by spring jdbctemplate or even hibernatetemplate . as far as i understand   mule is fully responsible to handle enlistment/delistment and close of xa resources ( see _org.mule.transaction.xatransaction_ ) . so by default   xa resources used by a spring object component will not be handled by mule and will not participate in the xa transaction started from mule . for completeness ... i 've also found a unit test for this usecase in mule distribution under mule_home/src/mule-3.1.2-src.zip/org/mule/test/integration/transaction/xatransactionswithspringdao.java . when you execute this test   you will have a successful result but the xa resource used by the dao bean is not enlisted nor delisted in/from the transaction started from mule .
3,include validation module in mule core distribution . emiliano created a validation module   something that 's missing inside mule . validation module support built-in validators . also it supports different types of exceptions for each validation allowing to generate a different response for each kind of exception . module : http : //mulesoft.github.com/mule-module-validation/
4,until-successful should set exception payload with last exception received before sending to dlq . the title says it all ... see this thread for discussions : http : //forum.mulesoft.org/mulesoft/topics/until_successful_exceptions_handling deprecate dlq ( includes doc changes )
5,until-successful should support synchronous use cases . imagine a simple synchronous http proxy use case   e.g . : < flow > < http : inbound-endpoint ... / > < http : outbound-endpoint ... / > < /flow > if outbound endpoint is wrapped in until-successful   the flow wo n't work anymore . until-successful must support synchronous scenarios as well .
6,upgrade apache-commons-pool . since error handling in current version of apache commons-pool is buggy ( borrowconnection method throws a nosuchelementexception losing the original cause ) we may need to update the library . version 1.6 does not fix the issue . however   current code in trunk tackles the issue ( we 'll have to wait for a new release ) .
7,add a default object store for non internal usages . current version provides object stores default ( persistent/in memory ) to use while processing events internally but there is no object store which could be used by users as default .
8,soapversion ignored on cxf proxy . invoking this proxy with a soap 1.2 message fails with a warning in the logs and a soap fault for the caller : { code : xml } < soap : envelope xmlns : soap= '' http : //www.w3.org/2003/05/soap-envelope '' > < soap : body > < soap : fault > < faultcode xmlns : ns1= '' http : //schemas.xmlsoap.org/soap/envelope/ '' > ns1 : versionmismatch < /faultcode > < faultstring > a soap 1.2 message is not valid when sent to a soap 1.1 only endpoint. < /faultstring > < /soap : fault > < /soap : body > < /soap : envelope > { code } nb . removing the soapversion attribute and invoking the same proxy with a soap 1.1 message works with intense happiness .
9,ftp inbound endpoint fails when reading empty file . put an empty file into ftp inbound path
10,outbound endpoint with scheduled dispatch job delivers messages again and again . if you send test messages to vm : //test.in ( say every second with a different payload for ex 1 2 3 ... ) you 'll notice that what 's delivered to vm : //accumulatedmessagehandler is : { { 1 2 3 4 5 } } then { { 1 2 3 4 5 6 7 8 9 10 } } then { { 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 } } ( in a random order but the idea is here )
11,inconsistent behaviour of foreach with inside flowvar . the index of the foreach inside the flow of the flowref is not consistent . it seems that there is a lack of atomicity with the invocation variables causing as a result jump of indexes of the iteration and overwrite of invocation variables . in the example below my payload is the result of a sql query so an arraylist < caseinsensitivehashmap > . i save the value of each row in a flow variable to make it always available in next operations ( the original project has more flowref ) . the problem comes out because in the contained flow accessed by the flowref   the invocation variable carrying the index of the iteration and also the name of the element that i saved is not consistent during each iteration . sometimes some idexes are jumped and also the element of my array tooks more time the same value .
12,messages generated from http-messages.properties should be escaped when returned to the client as http response . currently if you send the the following http request : { code } get /unionstation/ens/form http/1.1 accept : * / * accept-language : en-us ua-cpu : x86 user-agent : mozilla/4.0 ( compatible ; msie 7.0 ; windows nt 5.1 ; sv1 ; .net clr 1.1.4322 ) host : staging-unionstation.optuminsight.com authorization : < script > alert ( 88585 ) < /script > pragma : no-cache referer : https : //staging-unionstation.optuminsight.com:443/unionstation/ens/form x-scan-memo : category= '' audit '' ; function= '' createstaterequestfromattackdefinition '' ; sid= '' cf1b85d9856fc7300be04e08ae969344 '' ; psid= '' 1d12ad7b110413debb8e6634539f76cf '' ; sessiontype= '' auditattack '' ; crawltype= '' none '' ; attacktype= '' headerparammanipulation '' ; originatingengineid= '' 1354e211- 9d7d-4cc1-80e6-4de3fd128002 '' ; attacksequence= '' 3 '' ; attackparamdesc= '' authorization '' ; attackparamindex= '' 6 '' ; attackparamsubindex= '' 0 '' ; checkid= '' ( null ) '' ; engine= '' cross+site+scripting '' ; retry= '' false '' ; smartmode= '' nonserverspecificonly '' ; attackstring= '' % 3cscript % 3ealert ( 88585 ) % 3c % 2fscript % 3e '' ; attackstringprops= '' attack '' ; connection : keep-alive cookie : customcookie=webinspect76158zx7b636566555940d48015fd4b8fb9c0f6y76af unitedhealth group 5report date : 9/28/2012 vulnerability ( legacy ) { code } you will receive the following response : { code } http/1.1 403 forbidden date : thu   27 sep 2012 07:55:26 gmt server : mule core/3.3.0 http.status : 403 x-mule_encoding : utf-8 www-authenticate : basic realm= '' x12files '' content-type : text/plain ; charset=utf-8 content-length : 116 connection : close http basic filter doesnt know how to handle header < script > alert ( 88585 ) < /script > . message payload is of type : string { code } containing potential malicious javascript code that the browser will run . anytime a message is returned to the client the inputs should be parsed to prevent this kind of problems
13,default exception strategy is not being called . i have the following flow : { code : xml } < flow name= '' storeuser '' doc : name= '' storeuser '' > < http : inbound-endpoint exchange-pattern= '' request-response '' host= '' localhost '' port= '' 8081 '' path= '' save '' doc : name= '' http '' / > < objectstore : store config-ref= '' objectstore '' key= '' # [ json : user ] '' value-ref= '' # [ payload ] '' doc : name= '' storing the user '' / > < async doc : name= '' async '' > < scripting : component doc : name= '' groovy '' > < scripting : script engine= '' groovy '' > < scripting : text > < ! [ cdata [ thread.sleep ( 10000 ) ] ] > < /scripting : text > < /scripting : script > < /scripting : component > < vm : outbound-endpoint exchange-pattern= '' one-way '' address= '' vm : //sendmail '' doc : name= '' vm '' / > < /async > < tracking : custom-event event-name= '' stored user '' doc : name= '' stored user info '' > < tracking : meta-data key= '' user '' value= '' # [ json : user ] '' / > < /tracking : custom-event > < catch-exception-strategy > < set-payload value= '' # [ string : could not store the user ] '' doc : name= '' an exception ocurred .... '' / > < /catch-exception-strategy > < /flow > { code } when i post with an invalid json   the return is `` could not store the user '' however when i do : { code : xml } < flow name= '' storeuser '' doc : name= '' storeuser '' > < http : inbound-endpoint exchange-pattern= '' request-response '' host= '' localhost '' port= '' 8081 '' path= '' save '' doc : name= '' http '' / > < objectstore : store config-ref= '' objectstore '' key= '' # [ json : user ] '' value-ref= '' # [ payload ] '' doc : name= '' storing the user '' / > < async doc : name= '' async '' > < scripting : component doc : name= '' groovy '' > < scripting : script engine= '' groovy '' > < scripting : text > < ! [ cdata [ thread.sleep ( 10000 ) ] ] > < /scripting : text > < /scripting : script > < /scripting : component > < vm : outbound-endpoint exchange-pattern= '' one-way '' address= '' vm : //sendmail '' doc : name= '' vm '' / > < /async > < tracking : custom-event event-name= '' stored user '' doc : name= '' stored user info '' > < tracking : meta-data key= '' user '' value= '' # [ json : user ] '' / > < /tracking : custom-event > < default-exception-strategy > < set-payload value= '' # [ string : could not store the user ] '' doc : name= '' an exception ocurred .... '' / > < /default-exception-strategy > < /flow > { code } the exception is not handled
14,xslttransformer forcefully evaluate expressions in context-property into strings . this arbitrary limitation prevents passing dom nodes as xsl parameters : ( it comes from the fact the xsl transformer uses the deprecated { { parse } } method in : { code : java } protected object evaluatetransformparameter ( string key   object value   mulemessage message ) throws transformerexception { if ( value instanceof string ) { return mulecontext.getexpressionmanager ( ) .parse ( value.tostring ( )   message ) ; } return value ; } { code }
15,mulemessagetohttpresponse.createresponse should n't use simpledateformat . we should use jodatime 's datetimeformatter since it is thread-safe ( we can use one static instance ) and faster than creating a new one each time .
16,per app classloader should clean all native libraries from the classloader on redeploy . case example : sap application in mule with all libraries ( jco + jco native lib + sap transport lib ) in the application 's lib directory on redeploy the jvm aborts with error : invalid memory access of location 0x1f3c7d10 eip=0x1f3c7d10 the problem seems to be that the native library was n't properly unloaded and when the jco jar tries to load it again the jvm aborts execution .
17,upgrade jackson to 1.9.11 . this version works with 1.8.0 and there are some deprecated methods in 1.9.11   so there is a need for an upgrade .
18,should be able to replace log4j for another logging implementation . http : //www.mulesoft.org/documentation/display/mule3user/configuring+logging says in the section titled `` i do n't want to use log4j '' that the log4j jar can be removed so long as slf4j is wired to another logging implementation . removing the log4j jar results in wrappermanager error : error in wrapperlistener.start callback . java.lang.noclassdeffounderror : org/apache/log4j/spi/repositoryselector wrappermanager error : java.lang.noclassdeffounderror : org/apache/log4j/spi/repositoryselector wrappermanager error : at java.lang.class.getdeclaredconstructors0 ( native method ) wrappermanager error : at java.lang.class.privategetdeclaredconstructors ( class.java:2389 ) wrappermanager error : at java.lang.class.getconstructor0 ( class.java:2699 ) wrappermanager error : at java.lang.class.getconstructor ( class.java:1657 ) wrappermanager error : at org.mule.module.reboot.mulecontainerwrapper.start ( mulecontainerwrapper.java:53 ) wrappermanager error : at org.tanukisoftware.wrapper.wrappermanager $ 12.run ( wrappermanager.java:3925 ) wrappermanager error : caused by : java.lang.classnotfoundexception : org.apache.log4j.spi.repositoryselector wrappermanager error : at java.net.urlclassloader $ 1.run ( urlclassloader.java:202 ) wrappermanager error : at java.security.accesscontroller.doprivileged ( native method ) wrappermanager error : at java.net.urlclassloader.findclass ( urlclassloader.java:190 ) wrappermanager error : at java.lang.classloader.loadclass ( classloader.java:306 ) wrappermanager error : at java.lang.classloader.loadclass ( classloader.java:247 ) wrappermanager error : ... 6 more this is due to the patch done to fix mule-5264 which causes mulecontainer to have a direct reference to log4j 's repositoryselector . simply moving the reference and the call to setrepositoryselector to some other class which is not accessed via a static reference should solve the problem .
19,rest document resource definition . http : //corp.wiki.mulesource.com/display/wp/simplified+rest+service+creation
20,rest swagger definition generation . http : //corp.wiki.mulesource.com/display/wp/simplified+rest+service+creation
21,rest browsable web ui generation . http : //corp.wiki.mulesource.com/display/wp/simplified+rest+service+creation
22,remove all examples   except the new hello world and existing loan broker   from esb stand-alone distribution . * packaged examples should be modified as per the following plan : https : //docs.google.com/a/mulesoft.com/spreadsheet/ccc ? key=0arwrjmcfhowwddncdnjyeldhcdi5m0dyatrswuwxd2c # gid=2 * this requires the following additional work : - creation of the two new identified examples . - modification of target examples to use latest 3.4 features . beyond specifics identified on spreadsheet this includes adding in-studio documentation for all examples . - modification of documentation for target examples . - removal of examples tagged as archive from studio . - modification of docs to reflect an archived examples section . - placement of all examples in git and tagging as active versus archived . - from the esb stand-alone distribution point of view : remove all examples except the new hello world and existing loan broker .
23,addition of db2 and ms sql server to the list of databases on studio jdbc connector configuration window - esb work . today we show mysql   derby   and oracle . however   ms sql and db2 are rdbms 's with very large footprints . as such   we should add these two databases to the set that shows up on the jdbc connector 's configuration screen .
24,nio and websocket completion . as a mule esb user   i would like to be able to turn on the use of the nio stack through a deploy.properties toggle . as a mule esb user   i would like to be able to use the new websocket components within my flows .
25,testing mule 3.4 pairing with ga registry . as a mule user   i would like to configure my mule instance to be paired with my registry account through my registry key so that i may be able to manage my esb instance 's endpoints with the registry . user should be configure the registry key for their registry account for an esb instance . from there on : the http endpoints of all apps deployed to the esb instance should be manageable with the paired registry instance . detailed specs described here : http : //corp.wiki.mulesource.com/display/prodmgmt/registry+interaction+and+license+management+support
26,testing - mule 3.4 dynamic lookup with ga registry . as a mule user   i would like to use the dynamic lookup component within my flows . detailed specs defined here : http : //corp.wiki.mulesource.com/display/wp/dynamic+router+ % 28supports+registry+dynamic+endpoint+resolution % 29
27,update spring version used in mule to 3.2 . update the version of spring we are using to 3.2
28,intercepting are not generating message processor path . this is currently breaking debugger   since all mp that executes after an intercepting mp are not being executed .
29,mule-common dependency should be on a fixed version . we should be on a fixed version rather than a snapshot . mule-common is at 0.11.0-snapshot so we 'll go with 0.11.0 .
30,rest representations definition . multiple representation support for apikit
31,apikit example application . create an example application to showcase apikit functionality
32,github migration . - svn repo migration to github - bamboo plans update
33,apikit rest controller resource . rest controller resource
34,apikit tech debt . apikit tech debt
35,deprecate services ( and anything else we can ) . deprecate services ( and anything else we can )
36,when setting a basic authorization filter if no authorizations headers are set in the request   an exception is thrown and there is no request from the browser to add the keys . . when setting a basic authorization filter if no authorizations headers are set in the request   an exception is thrown and there is no request from the browser to add the keys . steps to reproduce : deploy app in a 3.4.0-rc2 mule instance . in a browser go to http : //localhost:4567/authenticate expected : a pop-up requesting for authentication should appear . actual : the response is `` registered authentication is set to org.mule.transport.http.filters.httpbasicauthenticationfilter but there was no security context on the session . authentication denied on endpoint http : //localhost:4567/authenticate . message payload is of type : string ''
37,restarting a mule app cause loss of jms messages even when using transactions . # start a local activemq instance listening on port 61616 with in and out queues # deploy transactional-jms.zip # ab -n 1000 -c 10 http : //localhost:8080/help # wait for messages to be put to in queue # restart mule app expected : all messages are copied from in queue to out queue actual : about 100 messages are lost
38,http ( s ) transport generates everlasting temporary files . when doing a multipart upload it may create a temporary file . it will remain on the disk drive because the file is not being deleted once the outputstream is closed . a deleteonexit flag would not be effective for never-closing applications . this eventually leads to `` java.io.ioexception : no space left on device '' . the location where this file is being created may be seen at https : //github.com/mulesoft/mule/blob/mule-3.x/transports/http/src/main/java/org/mule/transport/http/multipart/multipartinputstream.java # l135
39,update license.txt     and 3rd party list . * as a developer i want to be able to read accurate content of the license.txt file bundled with mule esb standalone .
40,fix the 3.x site build . javadoc generation is failing . check log here : http : //bamboo.mulesoft.org/browse/mule3x-mule3xsite-site
41,replytohandlers do not work with dynamic outbound endpoints . replytohandler in the case of ajax ( ajaxreplytohandler ) depends on the messagesourceuri to actually send the message back to the caller . if a dynamic outbound endpoint is introduced in the middle which replaces the event 's messagesourceuri it breaks the replyto . see the following flow ( modified version of the order processing example shipped with studio ) : { code } < flow name= '' orderproxy '' doc : name= '' orderproxy '' > < ajax : inbound-endpoint channel= '' /orders/soap '' responsetimeout= '' 10000 '' connector-ref= '' ajaxserver '' doc : name= '' /orders/soap '' / > < outbound-endpoint exchange-pattern= '' request-response '' address= '' http : // # [ string:0.0.0.0:1080/orders ] '' connector-ref= '' httpconnector '' doc : name= '' generic '' / > < object-to-string-transformer doc : name= '' object to string '' / > < /flow > { code } produces the following error : { code } { `` timestamp '' : '' wed   20 mar 2013 00:03:58 gmt ''   '' id '' : '' 370 ''   '' data '' : { }   '' channel '' : '' /orders/soap ''   '' clientid '' : '' k9lc8wpz6dr1fsvppi '' } java.lang.reflect.invocationtargetexception sun.reflect.nativemethodaccessorimpl.invoke0 ( native method ) sun.reflect.nativemethodaccessorimpl.invoke ( nativemethodaccessorimpl.java:39 ) sun.reflect.delegatingmethodaccessorimpl.invoke ( delegatingmethodaccessorimpl.java:25 ) java.lang.reflect.method.invoke ( method.java:597 ) org.mortbay.cometd.bayeuxservice.doinvoke ( bayeuxservice.java:357 ) org.mortbay.cometd.bayeuxservice.invoke ( bayeuxservice.java:309 ) org.mortbay.cometd.bayeuxservice.access $ 400 ( bayeuxservice.java:59 ) org.mortbay.cometd.bayeuxservice $ asynclisten.deliver ( bayeuxservice.java:393 ) org.mortbay.cometd.clientimpl.notifymessagelistener ( clientimpl.java:214 ) org.mortbay.cometd.clientimpl.dodelivery ( clientimpl.java:194 ) org.mortbay.cometd.channelimpl.delivertosubscriber ( channelimpl.java:502 ) org.mortbay.cometd.channelimpl.dodelivery ( channelimpl.java:464 ) org.mortbay.cometd.channelimpl.dodelivery ( channelimpl.java:494 ) org.mortbay.cometd.channelimpl.dodelivery ( channelimpl.java:494 ) org.mortbay.cometd.abstractbayeux $ publishhandler.handle ( abstractbayeux.java:1293 ) org.mortbay.cometd.abstractbayeux.handle ( abstractbayeux.java:287 ) org.mortbay.cometd.continuation.continuationcometdservlet.service ( continuationcometdservlet.java:171 ) org.mule.transport.ajax.container.muleajaxservlet.service ( muleajaxservlet.java:107 ) org.mortbay.cometd.abstractcometdservlet.service ( abstractcometdservlet.java:265 ) org.mortbay.jetty.servlet.servletholder.handle ( servletholder.java:511 ) org.mortbay.jetty.servlet.servlethandler.handle ( servlethandler.java:401 ) org.mortbay.jetty.handler.contexthandler.handle ( contexthandler.java:766 ) org.mortbay.jetty.handler.contexthandlercollection.handle ( contexthandlercollection.java:230 ) org.mortbay.jetty.handler.handlerwrapper.handle ( handlerwrapper.java:152 ) org.mortbay.jetty.server.handle ( server.java:326 ) org.mortbay.jetty.httpconnection.handlerequest ( httpconnection.java:542 ) org.mortbay.jetty.httpconnection $ requesthandler.content ( httpconnection.java:945 ) org.mortbay.jetty.httpparser.parsenext ( httpparser.java:756 ) org.mortbay.jetty.httpparser.parseavailable ( httpparser.java:218 ) org.mortbay.jetty.httpconnection.handle ( httpconnection.java:404 ) org.mortbay.io.nio.selectchannelendpoint.run ( selectchannelendpoint.java:410 ) org.mortbay.thread.queuedthreadpool $ poolthread.run ( queuedthreadpool.java:582 ) caused by : org.mule.api.messagingexception : endpoint scheme must be compatible with the connector scheme . connector is : `` ajax ''   endpoint is `` http : //0.0.0.0:1080/orders '' ( java.lang.illegalargumentexception ) . message payload is of type : string org.mule.execution.exceptiontomessagingexceptionexecutioninterceptor.execute ( exceptiontomessagingexceptionexecutioninterceptor.java:35 ) org.mule.execution.messageprocessornotificationexecutioninterceptor.execute ( messageprocessornotificationexecutioninterceptor.java:46 ) org.mule.execution.messageprocessorexecutiontemplate.execute ( messageprocessorexecutiontemplate.java:43 ) org.mule.processor.chain.defaultmessageprocessorchain.doprocess ( defaultmessageprocessorchain.java:93 ) org.mule.processor.chain.abstractmessageprocessorchain.process ( abstractmessageprocessorchain.java:66 ) org.mule.execution.exceptiontomessagingexceptionexecutioninterceptor.execute ( exceptiontomessagingexceptionexecutioninterceptor.java:27 ) org.mule.execution.messageprocessorexecutiontemplate.execute ( messageprocessorexecutiontemplate.java:43 ) org.mule.processor.abstractinterceptingmessageprocessorbase.processnext ( abstractinterceptingmessageprocessorbase.java:105 ) org.mule.processor.asyncinterceptingmessageprocessor.process ( asyncinterceptingmessageprocessor.java:98 ) org.mule.execution.exceptiontomessagingexceptionexecutioninterceptor.execute ( exceptiontomessagingexceptionexecutioninterceptor.java:27 ) org.mule.execution.messageprocessornotificationexecutioninterceptor.execute ( messageprocessornotificationexecutioninterceptor.java:46 ) org.mule.execution.messageprocessorexecutiontemplate.execute ( messageprocessorexecutiontemplate.java:43 ) org.mule.processor.chain.defaultmessageprocessorchain.doprocess ( defaultmessageprocessorchain.java:93 ) org.mule.processor.chain.abstractmessageprocessorchain.process ( abstractmessageprocessorchain.java:66 ) org.mule.execution.exceptiontomessagingexceptionexecutioninterceptor.execute ( exceptiontomessagingexceptionexecutioninterceptor.java:27 ) org.mule.execution.messageprocessorexecutiontemplate.execute ( messageprocessorexecutiontemplate.java:43 ) org.mule.processor.abstractinterceptingmessageprocessorbase.processnext ( abstractinterceptingmessageprocessorbase.java:105 ) org.mule.interceptor.abstractenvelopeinterceptor.process ( abstractenvelopeinterceptor.java:55 ) org.mule.execution.exceptiontomessagingexceptionexecutioninterceptor.execute ( exceptiontomessagingexceptionexecutioninterceptor.java:27 ) org.mule.execution.messageprocessornotificationexecutioninterceptor.execute ( messageprocessornotificationexecutioninterceptor.java:46 ) org.mule.execution.messageprocessorexecutiontemplate.execute ( messageprocessorexecutiontemplate.java:43 ) org.mule.processor.abstractinterceptingmessageprocessorbase.processnext ( abstractinterceptingmessageprocessorbase.java:105 ) org.mule.processor.abstractfilteringmessageprocessor.process ( abstractfilteringmessageprocessor.java:44 ) org.mule.execution.exceptiontomessagingexceptionexecutioninterceptor.execute ( exceptiontomessagingexceptionexecutioninterceptor.java:27 ) org.mule.execution.messageprocessornotificationexecutioninterceptor.execute ( messageprocessornotificationexecutioninterceptor.java:46 ) org.mule.execution.messageprocessorexecutiontemplate.execute ( messageprocessorexecutiontemplate.java:43 ) org.mule.processor.abstractinterceptingmessageprocessorbase.processnext ( abstractinterceptingmessageprocessorbase.java:105 ) org.mule.construct.abstractpipeline $ 1.process ( abstractpipeline.java:102 ) org.mule.execution.exceptiontomessagingexceptionexecutioninterceptor.execute ( exceptiontomessagingexceptionexecutioninterceptor.java:27 ) org.mule.execution.messageprocessornotificationexecutioninterceptor.execute ( messageprocessornotificationexecutioninterceptor.java:46 ) org.mule.execution.messageprocessorexecutiontemplate.execute ( messageprocessorexecutiontemplate.java:43 ) org.mule.processor.chain.defaultmessageprocessorchain.doprocess ( defaultmessageprocessorchain.java:93 ) org.mule.processor.chain.abstractmessageprocessorchain.process ( abstractmessageprocessorchain.java:66 ) org.mule.processor.chain.interceptingchainlifecyclewrapper.doprocess ( interceptingchainlifecyclewrapper.java:57 ) org.mule.processor.chain.abstractmessageprocessorchain.process ( abstractmessageprocessorchain.java:66 ) org.mule.processor.chain.interceptingchainlifecyclewrapper.access $ 001 ( interceptingchainlifecyclewrapper.java:29 ) org.mule.processor.chain.interceptingchainlifecyclewrapper $ 1.process ( interceptingchainlifecyclewrapper.java:90 ) org.mule.execution.exceptiontomessagingexceptionexecutioninterceptor.execute ( exceptiontomessagingexceptionexecutioninterceptor.java:27 ) org.mule.execution.messageprocessornotificationexecutioninterceptor.execute ( messageprocessornotificationexecutioninterceptor.java:46 ) org.mule.execution.messageprocessorexecutiontemplate.execute ( messageprocessorexecutiontemplate.java:43 ) org.mule.processor.chain.interceptingchainlifecyclewrapper.process ( interceptingchainlifecyclewrapper.java:85 ) org.mule.construct.abstractpipeline $ 3.process ( abstractpipeline.java:194 ) org.mule.execution.exceptiontomessagingexceptionexecutioninterceptor.execute ( exceptiontomessagingexceptionexecutioninterceptor.java:27 ) org.mule.execution.messageprocessornotificationexecutioninterceptor.execute ( messageprocessornotificationexecutioninterceptor.java:46 ) org.mule.execution.messageprocessorexecutiontemplate.execute ( messageprocessorexecutiontemplate.java:43 ) org.mule.processor.chain.defaultmessageprocessorchain.doprocess ( defaultmessageprocessorchain.java:93 ) org.mule.processor.chain.abstractmessageprocessorchain.process ( abstractmessageprocessorchain.java:66 ) org.mule.processor.chain.interceptingchainlifecyclewrapper.doprocess ( interceptingchainlifecyclewrapper.java:57 ) org.mule.processor.chain.abstractmessageprocessorchain.process ( abstractmessageprocessorchain.java:66 ) org.mule.processor.chain.interceptingchainlifecyclewrapper.access $ 001 ( interceptingchainlifecyclewrapper.java:29 ) org.mule.processor.chain.interceptingchainlifecyclewrapper $ 1.process ( interceptingchainlifecyclewrapper.java:90 ) org.mule.execution.exceptiontomessagingexceptionexecutioninterceptor.execute ( exceptiontomessagingexceptionexecutioninterceptor.java:27 ) org.mule.execution.messageprocessornotificationexecutioninterceptor.execute ( messageprocessornotificationexecutioninterceptor.java:46 ) org.mule.execution.messageprocessorexecutiontemplate.execute ( messageprocessorexecutiontemplate.java:43 ) org.mule.processor.chain.interceptingchainlifecyclewrapper.process ( interceptingchainlifecyclewrapper.java:85 ) org.mule.execution.exceptiontomessagingexceptionexecutioninterceptor.execute ( exceptiontomessagingexceptionexecutioninterceptor.java:27 ) org.mule.execution.messageprocessornotificationexecutioninterceptor.execute ( messageprocessornotificationexecutioninterceptor.java:46 ) org.mule.execution.messageprocessorexecutiontemplate.execute ( messageprocessorexecutiontemplate.java:43 ) org.mule.processor.chain.simplemessageprocessorchain.doprocess ( simplemessageprocessorchain.java:47 ) org.mule.processor.chain.abstractmessageprocessorchain.process ( abstractmessageprocessorchain.java:66 ) org.mule.processor.chain.interceptingchainlifecyclewrapper.doprocess ( interceptingchainlifecyclewrapper.java:57 ) org.mule.processor.chain.abstractmessageprocessorchain.process ( abstractmessageprocessorchain.java:66 ) org.mule.processor.chain.interceptingchainlifecyclewrapper.access $ 001 ( interceptingchainlifecyclewrapper.java:29 ) org.mule.processor.chain.interceptingchainlifecyclewrapper $ 1.process ( interceptingchainlifecyclewrapper.java:90 ) org.mule.execution.exceptiontomessagingexceptionexecutioninterceptor.execute ( exceptiontomessagingexceptionexecutioninterceptor.java:27 ) org.mule.execution.messageprocessornotificationexecutioninterceptor.execute ( messageprocessornotificationexecutioninterceptor.java:46 ) org.mule.execution.messageprocessorexecutiontemplate.execute ( messageprocessorexecutiontemplate.java:43 ) org.mule.processor.chain.interceptingchainlifecyclewrapper.process ( interceptingchainlifecyclewrapper.java:85 ) org.mule.transport.abstractmessagereceiver.routemessage ( abstractmessagereceiver.java:220 ) org.mule.transport.abstractmessagereceiver.routemessage ( abstractmessagereceiver.java:202 ) org.mule.transport.abstractmessagereceiver.routemessage ( abstractmessagereceiver.java:194 ) org.mule.transport.abstractmessagereceiver.routemessage ( abstractmessagereceiver.java:181 ) org.mule.transport.ajax.ajaxmessagereceiver $ receiverservice.route ( ajaxmessagereceiver.java:76 ) ... 32 more caused by : java.lang.illegalargumentexception : endpoint scheme must be compatible with the connector scheme . connector is : `` ajax ''   endpoint is `` http : //0.0.0.0:1080/orders '' org.mule.endpoint.abstractendpointbuilder.dobuildoutboundendpoint ( abstractendpointbuilder.java:254 ) org.mule.endpoint.abstractendpointbuilder.buildoutboundendpoint ( abstractendpointbuilder.java:122 ) com.mulesoft.habitat.agent.endpoint.anypointenabledendpointfactory.getoutboundendpoint ( anypointenabledendpointfactory.java:44 ) org.mule.transport.ajax.ajaxreplytohandler.processreplyto ( ajaxreplytohandler.java:66 ) org.mule.routing.requestreply.abstractreplytopropertyrequestreplyreplier.processreplyto ( abstractreplytopropertyrequestreplyreplier.java:69 ) org.mule.routing.requestreply.abstractreplytopropertyrequestreplyreplier.process ( abstractreplytopropertyrequestreplyreplier.java:45 ) org.mule.execution.exceptiontomessagingexceptionexecutioninterceptor.execute ( exceptiontomessagingexceptionexecutioninterceptor.java:27 ) ... 104 more { code }
42,http dispatcher thread leak . there is a leak of http message dispatcher threads . steps to reproduce : 1 ) copy hello example app to < mule_home > apps folder 2 ) start mule 3 ) send a request : http : //localhost:8888/ ? name=ross 4 ) remove the hello example app 's anchor file and wait for the app to be undeployed 5 ) obtain a thread dump of the mule process expected result : no hello app related threads are in the list of live threads actual result : there are two : a ) one named xxx.processing.time.monitor which is related to mule-5276 b ) one named http-request-dispatch-xxx ( which is only created if previous point 3 is executed ) the number of b ) threads is increased every time you repeat the deploy/exercise/undeploy steps note : http-request-dispatch-xxx should be named using the name of the application   ie something like hello-http-request-dispatch-xxx
43,processorchain and subflows are intercepting when they should n't . currently processorchain and sublflows are intercepting this affects debugger because notifications are generated wrong .
44,chaining more than one http outbound endpoint will use the http method of the first one . if i have a config file as follows : { code } < flow ... > ... < http : outbound-endpoint method= '' get '' ... / > < http : outbound-endpoint method= '' post '' ... / > < http : outbound-endpoint method= '' get '' ... / > ... < /flow > { code } the second outbound-endpoint will always do a get because if the input payload is of type httpmethod   then it takes the value from there .
45,upgrade cxf to 2.5.9 . we should upgrade cxf to get the latest security patches .
46,nullpointerexception during jms reconnect attempt . if you configure an xa enabled connector to a jms broker and the jms broker goes down   the following exception get thrown : { code } debug 2013-02-19 10:34:55 584 [ muleserver.2 ] org.mule.retry.notifiers.connectnotifier : java.lang.nullpointerexception at org.mule.transport.abstractpollingmessagereceiver.schedule ( abstractpollingmessagereceiver.java:97 ) at org.mule.transport.abstractpollingmessagereceiver.dostart ( abstractpollingmessagereceiver.java:62 ) at org.mule.transport.transactedpollingmessagereceiver.dostart ( transactedpollingmessagereceiver.java:102 ) at org.mule.transport.abstracttransportmessagehandler $ 3.ontransition ( abstracttransportmessagehandler.java:316 ) at org.mule.lifecycle.abstractlifecyclemanager.invokephase ( abstractlifecyclemanager.java:141 ) at org.mule.transport.connectablelifecyclemanager.firestartphase ( connectablelifecyclemanager.java:51 ) at org.mule.transport.abstracttransportmessagehandler.start ( abstracttransportmessagehandler.java:312 ) at org.mule.transport.abstractconnector $ 5.dowork ( abstractconnector.java:1579 ) at org.mule.retry.policies.abstractpolicytemplate.execute ( abstractpolicytemplate.java:67 ) at com.mulesoft.mule.retry.async.retryworker.run ( retryworker.java:74 ) at org.mule.work.workercontext.run ( workercontext.java:310 ) at edu.emory.mathcs.backport.java.util.concurrent.threadpoolexecutor.runworker ( threadpoolexecutor.java:1061 ) at edu.emory.mathcs.backport.java.util.concurrent.threadpoolexecutor $ worker.run ( threadpoolexecutor.java:575 ) at java.lang.thread.run ( thread.java:662 ) { code } step to reproduce : * run the attached config * tear down the activemq broker and start it again
47,allow mel expressions in cxf : property of cxf : ws-config . it would be nice to be able to use mel expressions for the values of properties in the ws-config so we can set properties based upon the message being processed .
48,write initial draft of shared ports spec . we are having a number of critical users requests for being able to deploy multiple apps on the same mule instance using the same ip/port endpoint . this story is to do some analysis to identify the possible solutions for addressing this problem space .
49,thread leak on mule redeployments for embedded . when mule is running embedded in a container   after redeploying an application   there is a thread which still lives from the previous deployment and gets created again with the new one : mule.log.slf4j.ref.handler . steps to reproduce : 1. deploy a mule embedded app in tomcat ( bookstore-admin.war from the examples   for instance ) . 2. check the thread count and look for the mentioned thread 3. re-deploy the app 4. check the thread count   it should have gone up by 1 and there should be 2 threads called mule.log.slf4j.ref.handler
50,fix flaky unit test : datetimetestcase . datetimetestcase has many test that are flaky because they depend on the current system time . for example : { code } @ test public void seconds ( ) { assertequals ( calendar.getinstance ( timezone.gettimezone ( `` utc '' ) ) .get ( calendar.second )   now.getseconds ( ) ) ; } { code } problem is that there are two different calls to obtain the current second   so they could obtain different values from time to time . same problem exist in many tests   but as they are checking for minutes   hours   days   weeks   etc they less probable to fail   but they are still flaky in theory .
51,cxf_operation is wrong when using proxy-client of a soap 1.1 request . when processing a soap 1.1 request   the org.apache.cxf.binding.soap.interceptor.soapactionininterceptor looks for the soap action in soapmessage.get ( message.protocol_headers ) .get ( soapbindingconstants.soap_action ) . if mule does n't set this beforehand   cxf does n't find it . this is a problem because the soapactionininterceptor will then fail to set the bindingoperationinfo for the request and thus the staxdatabindinginterceptor will not know which bindingoperationinfo to use so it just picks the first one of its list ( which is probably wrong ! ) and bam ! we 're executing the wrong operation . processing soap 1.2 requests ( which is much more prevalent ) does n't have this problem .
52,applications deleted when deployment fails . when mule starts and a application fails to deploy   both zip and app 's folder are deleted . to reproduce : copy the attached app to the apps folder and start mule . after the app is deployed with failure the app zip and folder should be deleted after some seconds ( 5 by default ) .
53,move oauth from devkit to esb . * move generated devkit code to esb and expose an interface that devkit can use * improve user experience when trying to configure an oauth connector http : //corp.wiki.mulesource.com/display/wp/making+oauth+user+experience+smoother
54,connector auto-paging . see here : http : //corp.wiki.mulesource.com/pages/viewpage.action ? pageid=27132117 this will require some in-iteration investigation .
55,define polling watermarks . right now   when a poll needs to deal with updated objects   we use watermarks as an approach to filter out elements that were already processed . the only way to do that right now is to implement the logic manually which forces the user to deal with object stores   default values   repeated logic   dev time dependencies   etc . this story is a container of all the features required for watermark
56,define filter   split   aggregate and route record level data strategy . basic requirements : http : //corp.wiki.mulesource.com/pages/viewpage.action ? pageid=27132117
57,replytodestination is not properly configured in some scenarios . replytoparameterprocessor which is used to move the replytodestination info from the message to the event is not always invoked before other processing occurs . this causes that the message processed inside the flow is not sent back to the client .
58,default object store for until-successful . until-successful needs to be configured with an objectstore by default so it works out of the box very easily .
59,filename-wildcard filter to fails with sftp . mule-6743 modified the scope of originalfilename property : originally it was stored in the outbound scope   but it was changed to inbound . filename wildcard filter was also changed to read that property from the inbound scope . however the sftp transport is still storing the property in the outbound scope   making the filter to work incorrectly ( not processing file that should be processed ) . after the mentioned changes   file transport is storing the property in inbound and outbound   ftp is storing it in inbound   and sftp is doing it only in outbound .
60,watermark / binding object store items to flow variables . h1 . watermarking right now   when a poll needs to deal with updated objects   we use watermarks as an approach to filter out elements that were already processed . watermarks require a value to be persisted across flow invocations . typically   this value will have a default the first time used   and will be used as part of a query or outbound request . based on how the flow processes the results   the value may be updated . this can be done using several steps : - fetch a value form a persistent object store and save it as a flow variable - refer to the flow variable when doing a query / outbound request - update the variable based ( either once - i.e . the watermark is the date of the query   or per record - i.e . the watermark is the highest id from an object ) - at the end of the processing   persist the value to the persistent object store this pattern is very common in synchronisation flows . enough common to deserve better support . to make this easier out of the box we will add a new optional parameter to < poll > that will provide the watermarking variable persistence out of the box . watermark example : { code : xml } < flow name= '' pollsalesforce '' > < poll frequency= '' 10m '' > < watermark key= '' lastmodifieddate '' default-expression= '' # [ lastyear ( ) ] '' object-store-ref= '' myos '' / > < sfdc : search query= '' select id   name from account where lastmodifieddate > = # [ flowvars [ 'lastmodifieddate ' ] ] '' / > < foreach > < set-variable name= '' accountlastmodified '' value= '' max ( payload [ 'lastmodifieddate ' ] ]   flowvars [ 'accountlastmodified ' ] ) '' / > < /foreach > ..... < /flow > { code } h2 . watermark properties * variable ( required ) : this attribute signals both the object store key that will be used to store this watermark as also the name of the flowvar in which its value will be exposed to the user . * default-expression ( required ) : in case that the key above ca n't be found on the object store   the default expression is used to generate a value . this is useful for the first run of the flow * update-expression ( optional ) : the result of this expression will be used to update the watermark once the execution is finished . it defaults to the value of the variable parameter . * objectstore-ref ( optional ) : a reference to the object store you wish to use to store the watermarks . if not provided   the default user object store will be used h2 . watermark behaviour * it is bound to the poll * it is bound to synchronous flows only . if not then it execution must fail * when executed   it goes to the configured object store looking for a value of the given key . if found   that value is exposed through a flowvar using the same key . * if no value is found for that key in the object store   then the default-expression is executed and that value is exposed through the flowvar . * watermark will also fire a notification interceptable by the event tracking module . the underlaying tracking event will be enriched with the watermark value . * the message processors will be executed . * if the flow was correctly executed   then the watermark will be updated . * after updating the object store   another notification is fired to the event tracking system so that the new value can also be recorded there * if the intercepted processors throw any exceptions   then the watermark will not be updated . since the watermark is stored in the object store   the user can always use a exception strategy to put a custom value in case of failure . * in case the watermark value is not serializable then fail the store of the watermark in the object store
61,sftp : jsch issue in java 1.7 and kerberos . there is a known issue with jsch running in java 1.7 and connecting to a server with kerberos enabled . when trying to connect to that server   it will request the password to be manually entered . the issue is described in the following page : https : //issues.apache.org/bugzilla/show_bug.cgi ? id=53437 setting `` preferredauthentications '' property to `` publickey   password   keyboard-interactive '' in the sftpclient solves the problem .
62,upgrade to groovy 2.3.6 . upgrade mule 's groovy dependency to groovy 2.3.6 .
63,ability to handle record level errors in for-each . as an user   i want to catch exceptions at a record level in a for-each/batch element so i can continue processing and put my individual records on a dlq .
64,poll 2.0 . for studio   we want to be able to start   stop and execute polls via an api .
65,aggregator improvements . should be possible to not use mulemessage collection should be possible to use multiple aggregators tbd in more detail by pablo
66,concurrent modification exception when using the async message proccessor inside a foreach . it 's getting more usual in iapps that we get a collection of elements   and we want to process each element asynchronously . for that reason   we are using the `` for-each '' message processor   and inside it   we throw an `` async '' with a `` flow-ref '' to the flow that process each element . the problem is that it 's seems to be a bug that randomly ( let 's say 4 our of 10 ) throws a java.util.concurrentmodificationexception . as you can see in the log output   this exception is thrown while the async is copying the event to create a new one to fire a new thread . the exact error is located at defaultmuleevent.java:938   where it says : message.getinvocationpropertynames ( ) . so   what i guess it 's happening here is that when creating a new event   the copy is saving some kind of reference to the same maps instead of creating a new ones . then   if some new flow var is created in the process item flow   while the async is still firing new thread ( that means   copy new events )   they are getting mixed up and crash . i 'm attached a simple studio 3.4 ga based project where you can reproduce the bug . just run the app   and you will see the exception in the console . if you see the following log : `` tenant id : merlo - running - waiting for : 1 '' and you do n't see any exception   please turn down and run the app again . as i said   it does n't happen 100 % of times .
67,split collection processor . spec tbd
68,create mule api to inject poll a different scheduler . poll elements have a single scheduler strategy ( it uses sheduledwithfixdelay ) we want users to be able to determine a different scheduler strategy as part of the story mule-6872
69,provide an api to stop/start and execute schedulers . we need external systems to be able to stop/start and execute schedulers at any given time .
70,change poll schema to accept a scheduler strategy . new poll schema will accept scheduler strategies : < poll > < schedulers : simple frequency= '' 1000 '' / > < /poll >
71,untilsuccessful does n't correctly validate payload is serializable . when ensuring that the message payload is serializable   the validation is not property done when the message is a defaultmulemessage and the payload is n't consumable
72,add utility methods to execute flows in functionaltestcase . right now functionaltestcase only provides one testflow ( ) method which does't really fit all use cases . functionaltestcase could be improve adding the runflow ( ) family of methods that devkit generates when archetyping a cloudconnector . this would be better for a user testing their applications and would also help the effort of moving code from devkit to mule
73,add dynamic round robin routing support . related to mule-6653 where support for dynamic router was implemented for 'first successful ' and 'all ' strategies . a new strategy should be added for round robin . the new dynamic-round-robin will round robin through the routes to dispatch the message   maintaining a state to keep track of the next message processor that needs to be processed . the state should be maintained based on a route resolver identifier   the goal behind it is to keep track of the iteration for each configuration of the router . by default it should assume the route resolver has no state if it does not implement an identifiabledynamicrouteresolver ( which is an interface that extends dynamicrouteresolver )
74,race condition on startup of mule context . if you start 2 mulecontexts in two threads in parallel   you might run into a race condition . on startup   mule verifies the jdk version . it reads the `` supported jdk versions '' from the manifest.mf file . this is not thread-safe and one mule context can fail to start because it thinks that there are `` null '' supported jdks . workaround is to synchronize the starts of the two mule contexts externally .
75,merge 3.4.1 changes from asr from dynamic round robin . merge the pull request from eva needed for asr .
76,watermark - unable to access default user object store instance . * steps * with this flow { code } < poll frequency= '' 1000 '' doc : name= '' poll '' > < watermark variable= '' watermarkkey '' default-expression= '' initialized '' update-expression= '' # [ payload ] '' / > < /poll > { code } watermark does not access the default user object store
77,race condition creating mvelexpressionlanguage instances . constructor of mvelexpressionlanguage is updating the expression language configured in the defaultexpressionmanager . this creates a reace condition when there are more than one instance created and multiple threads using the expression manager . in those cases   some threads can get a npe . this is a problem using data mapper as they extend the mvelexpressionlanguage . there is a second problem having mvelexpressionlanguage constructor setting the expression language : after a dm component   the expression language use in the app will continue to be the expression language from dm   not the original mvel
78,allow poll execution with properties . mule should provide an api to execute polls with inbound properties .
79,erro during mule message serialization when using byte array as payload . attached configuration works well on standalone mode   but when switch to cluster mode i got this exception : info 2013-06-18 16:04:26 722 [ [ pepe ] .connector.file.mule.default.receiver.01 ] org.mule.transport.file.filemessagereceiver : lock obtained on file : /private/tmp/test/file.txt error 2013-06-18 16:04:26 904 [ [ pepe ] .inputflow.stage1.01 ] org.mule.exception.defaultsystemexceptionstrategy : caught exception in exception strategy : java.lang.string can not be cast to org.mule.api.muleevent java.lang.classcastexception : java.lang.string can not be cast to org.mule.api.muleevent org.mule.processor.sedastageinterceptingmessageprocessor.dequeue ( sedastageinterceptingmessageprocessor.java:134 ) org.mule.processor.sedastageinterceptingmessageprocessor.run ( sedastageinterceptingmessageprocessor.java:209 ) org.mule.work.workercontext.run ( workercontext.java:311 ) java.util.concurrent.threadpoolexecutor $ worker.runtask ( threadpoolexecutor.java:895 ) java.util.concurrent.threadpoolexecutor $ worker.run ( threadpoolexecutor.java:918 )
80,http endpoint with path= '' '' or path= '' / '' do not attend requests at root level . enpoints # 2 and # 3 behave differently than # 1 that shows the correct behavior . 1 ) < http : inbound-endpoint port= '' 8000 '' host= '' localhost '' > 2 ) < http : inbound-endpoint port= '' 8000 '' host= '' localhost '' path= '' '' > 3 ) < http : inbound-endpoint port= '' 8000 '' host= '' localhost '' path= '' / '' > only # 1 answers requests to http : //localhost:8000/ # 2 and # 3 throw the following error : can not bind to address `` http : //localhost:8000/ '' no component registered on that endpoint
81,jackson-xc wrong version . mule comes with jackson libraries for json support . however jackson-xc is the wrong version . if you check in $ mule_home/opt you will find most jackson libraries are version 1.9.11 : lib/opt/jackson-core-asl-1.9.11.jar lib/opt/jackson-jaxrs-1.9.11.jar lib/opt/jackson-mapper-asl-1.9.11.jar but jackson-xc is version 1.7.1 lib/opt/jackson-xc-1.7.1.jar this makes mule behave very weirdly when using json . when some class from jackson-xc is used   some methods may not match the signatures and the flow just stops . no exception is logged   no information displayed   nothing ... of course its easy to put the correct version in lib\user   but would be better if the ootb installation just works .
82,http : static-resource-handler fails when request path is '/ ' . given a http : inbound-endpoint with no context path   and a http : static-resource-handler with a resourcebase set   expect that visiting http : //server : port should redirect or service http : //server : port/index.html . noted the following issues : 1 ) server actually sends a 302 redirect to '// '   which is not handled well by modern browsers ( chrome ) 2 ) visiting http : //server : port// actually returns the contents of index.html 3 ) as a side-issue   visiting http : //server : port/index.html if resourcebase does not have a trailing slash results in a file not found error ( does not add the necessary slash ) looking at the source here : https : //github.com/mulesoft/mule/blob/8de5e6b1de40e8d5f792e8e0f0b9d1de7506c2d8/transports/http/src/main/java/org/mule/transport/http/components/staticresourcemessageprocessor.java the issue is that the request path is stripped back from '/ ' to `` here : { code } string path = event.getmessage ( ) .getinboundproperty ( httpconnector.http_request_path_property ) ; string contextpath = event.getmessage ( ) .getinboundproperty ( httpconnector.http_context_path_property ) ; // remove the contextpath from the endpoint from the request as this is n't part of the path . path = path.substring ( contextpath.length ( ) ) ; { code } and so the following code fails to match on 'path.endswith ' : { code } if ( file.isdirectory ( ) & & path.endswith ( `` / '' ) ) { file = new file ( resourcebase + path + defaultfile ) ; } { code } and the subsequent code block to redirect is used . the functional test cases do n't catch this because the context path is not the same as the request path .
83,the jetty transport does not have an option to configure the number of acceptor threads . the jetty transport does not have an option to configure the number of acceptor threads it should be configurable at connector level in an xml app .
84,incorrect maven dependency for drools . drools ( mule-module-drools ) needs the jasper-jdt jar   but does not declare a dependency for it . for a drools project to work   you also need to declare a dependency for mule-transport-ajax . mule-transport-ajax declares a dependency for org.apache.tomcat : jasper : jar which will also bring in jorg.apache.tomcat : jasper-jdt : jar but mule-transport-ajax should n't be required for using drools with mule .
85,add support for ee 's batch module . implement a new module that allows processing of large data sets at a record level . specification available in issue di-4 ( http : //corp.wiki.mulesource.com/display/wp/batch+module )
86,servernotification completing work after listener failure . as a user i register a notification listener in the servernotificationmanager   if that listener throws an exception   then the servernotificationmanager finishes   causing that we do n't have any notification anymore . this is the error that mule is showing : error 2013-09-05 13:05:44 935 [ [ notification-server-down ] .mule.01 ] org.mule.work.defaultworklistener : work caused exception on 'workcompleted ' . work being executed was : org.mule.context.notification.servernotificationmanager @ 59fe1da2
87,http/https outbound endpoints ignore the keep-alive attribute . the http outbound endpoint has an attribute keep-alive that controls the use of persistent http outbound connections . this attribute is currently ignored . an endpoint configured with exchange-pattern= '' one-way '' always keeps outbound connections alive . if the request-response exchange pattern is used   a new connection is created in each request . this behavior should depend on the keep-alive attribute of the endpoint . in the following example the keep-alive attribute is set to false but the endpoint keeps alive the connection : { code } < flow name= '' test '' > < vm : inbound-endpoint path= '' doget '' exchange-pattern= '' one-way '' / > < http : outbound-endpoint address= '' http : //localhost:8080/ '' method= '' get '' keep-alive= '' false '' exchange-pattern= '' one-way '' / > < /flow > { code }
88,deprecate keepsendsocketopen attribute in http connector . the http connector has an attribute 'keepsendsocketopen ' that is inherited from the tcp connector . this attribute is a tcp setting that should not exist in the http connector ( to keep outbound connections open the keep-alive attribute in the outbound endpoint should be used ) . add documentation for this change .
89,add nexus profile to distributions pom . . add nexus profile to distributions pom .
90,expiringgroupmonitoringthread must process event groups only when the node is primary . expiringgroupmonitoringthread is used on the eventcorrelator to detect eventgroup that expired and must be deleted . this thread is always started as part of the eventcorrelator and that means that in a cluster environment   every node will have a thread running . this causes problems when different nodes try to process the same event group simultaneously .
91,several exceptions thrown when pooling in the objectstore . -create an app at box.com with a folder -configure the app with the corresponding client id and client secret from the box app - deploy the app in mule and hit https : //localhost:10090/auth to do the oauth dance -go to the logs expected : info 2013-09-20 16:07:35 209 [ [ mule-6992 ] .boxcall.stage1.09 ] org.mule.api.processor.loggermessageprocessor : operation success info 2013-09-20 16:07:35 322 [ [ mule-6992 ] .boxcall.stage1.15 ] org.mule.api.processor.loggermessageprocessor : operation success info 2013-09-20 16:07:35 342 [ [ mule-6992 ] .boxcall.stage1.01 ] org.mule.api.processor.loggermessageprocessor : operation success info 2013-09-20 16:07:35 673 [ [ mule-6992 ] .boxcall.stage1.11 ] org.mule.api.processor.loggermessageprocessor : operation success info 2013-09-20 16:07:35 687 [ [ mule-6992 ] .boxcall.stage1.06 ] org.mule.api.processor.loggermessageprocessor : operation success info 2013-09-20 16:07:35 720 [ [ mule-6992 ] .boxcall.stage1.07 ] org.mule.api.processor.loggermessageprocessor : operation success info 2013-09-20 16:07:35 746 [ [ mule-6992 ] .boxcall.stage1.16 ] org.mule.api.processor.loggermessageprocessor : operation success info 2013-09-20 16:07:35 791 [ [ mule-6992 ] .boxcall.stage1.04 ] org.mule.api.processor.loggermessageprocessor : operation success info 2013-09-20 16:07:35 823 [ [ mule-6992 ] .boxcall.stage1.12 ] org.mule.api.processor.loggermessageprocessor : operation success info 2013-09-20 16:07:36 111 [ [ mule-6992 ] .dostuff.stage1.03 ] org.mule.api.processor.loggermessageprocessor : operation success info 2013-09-20 16:07:36 127 [ [ mule-6992 ] .boxcall.stage1.08 ] org.mule.api.processor.loggermessageprocessor : operation success what is happening : go to the logs and some exceptions like the ones listed below will appear
92,need to support xpath 3.0 in the xpath filter . xpath 2.0 is supported in the xslt transformers but not in filters right now . this will only apply for xpath expressions not jxpath according to [ ~philip.parker ] afaik we only support xpath version 1.0 in flows using mel   it seems we may support version 2.0 in xslt transformation   in dm i think we support version 3.0. all of these really should be aligned to the same version . since xpath 2.0 came out in 2007 i think we should be using that as a minimum   if not we should be using 3.0 to take advantage of the newer functions . as we move onto the bigger customers and soap ws   they may well want to use xml .
93,add getobjectstoremanager ( ) in mulecontext . add a method in the mulecontext for easy access to the objectstoremanager
94,can not put a foreach after an oauth authorize . creating a simple flow that do the authorization and calls get-contacts and iterate through the payload . info 2013-09-23 18:12:12 291 [ [ google-contacts-paged-test ] .connector.http.mule.default.receiver.02 ] org.mule.api.processor.loggermessageprocessor : authorized ... error 2013-09-23 18:16:09 797 [ [ google-contacts-paged-test ] .connector.http.mule.default.receiver.02 ] org.mule.exception.defaultmessagingexceptionstrategy : * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * message : object `` org.mule.modules.google.contact.wrappers.googlecontactentry '' not of correct type . it must be of type `` { interface java.lang.iterable   interface java.util.iterator   interface org.mule.routing.messagesequence   interface java.util.collection } '' ( java.lang.illegalargumentexception ) . message payload is of type : googlecontactentry code : mule_error -- 2 -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- exception stack is : 1. object `` org.mule.modules.google.contact.wrappers.googlecontactentry '' not of correct type . it must be of type `` { interface java.lang.iterable   interface java.util.iterator   interface org.mule.routing.messagesequence   interface java.util.collection } '' ( java.lang.illegalargumentexception ) org.mule.util.collection.eventtomessagesequencesplittingstrategy:61 ( null ) 2. object `` org.mule.modules.google.contact.wrappers.googlecontactentry '' not of correct type . it must be of type `` { interface java.lang.iterable   interface java.util.iterator   interface org.mule.routing.messagesequence   interface java.util.collection } '' ( java.lang.illegalargumentexception ) . message payload is of type : googlecontactentry ( org.mule.api.messagingexception ) org.mule.execution.exceptiontomessagingexceptionexecutioninterceptor:35 ( http : //www.mulesoft.org/docs/site/current3/apidocs/org/mule/api/messagingexception.html ) -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- root exception stack trace : java.lang.illegalargumentexception : object `` org.mule.modules.google.contact.wrappers.googlecontactentry '' not of correct type . it must be of type `` { interface java.lang.iterable   interface java.util.iterator   interface org.mule.routing.messagesequence   interface java.util.collection } '' at org.mule.util.collection.eventtomessagesequencesplittingstrategy.split ( eventtomessagesequencesplittingstrategy.java:61 ) at org.mule.util.collection.eventtomessagesequencesplittingstrategy.split ( eventtomessagesequencesplittingstrategy.java:26 ) at org.mule.routing.collectionsplitter.splitmessageintosequence ( collectionsplitter.java:33 ) + 3 more ( set debug level logging or '-dmule.verbose.exceptions=true ' for everything ) * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
95,make poll schedulers part of the same namespace . when poll was enhanced to support different schedulers in andes   the simple scheduler ended up being defined in the mule schema   and the cron scheduler ended up being part of the schedulers schema . in order to improve consistency   we want to have all the schedulers distributed by the esb in the same schema . move the default scheduler bean definition to the scheduler namespace .
96,create bitronix transaction manager module and integrate with existent transports . create a module to use bitronix transaction manager in mule . integrate the module with existent mule transports
97,finalize shared resources spec + create tasks to implement feature . the initial draft of the shared resources spec is here : https : //docs.google.com/a/mulesoft.com/document/d/15pt1n4ylouxk-nfiafatfnoiqyyn5fnjn4x3ijtf9ti/edit ? usp=drive_web now that sufficient time has passed   we should finalize the specification   and scope out the amount of work it takes to implement the feature in mule . acceptance criteria for this jira is that more jiras are created with story points allocated to implement the feature .
98,it is not possible to send outbound attachments over http . it is not possible to send an attachment over an outbound http   as before the endpoint sends out the data   it fails with : error 2013-10-17 16:15:06 384 [ [ rubbish-attachments ] .connector.http.mule.default.receiver.03 ] org.mule.exception.defaultmessagingexceptionstrategy : * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * message : name must not be null ( java.lang.illegalargumentexception ) code : mule_error -- 2 -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- exception stack is : 1. name must not be null ( java.lang.illegalargumentexception ) org.apache.commons.httpclient.methods.multipart.partbase:64 ( null ) 2. name must not be null ( java.lang.illegalargumentexception ) ( org.mule.api.transformer.transformerexception ) org.mule.transport.http.transformers.objecttohttpclientmethodrequest:372 ( http : //www.mulesoft.org/docs/site/current3/apidocs/org/mule/api/transformer/transformerexception.html ) -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- root exception stack trace : java.lang.illegalargumentexception : name must not be null org.apache.commons.httpclient.methods.multipart.partbase. < init > ( partbase.java:64 ) org.apache.commons.httpclient.methods.multipart.filepart. < init > ( filepart.java:93 ) org.mule.transport.http.transformers.objecttohttpclientmethodrequest.createmultipart ( objecttohttpclientmethodrequest.java:478 ) + 3 more ( set debug level logging or '-dmule.verbose.exceptions=true ' for everything ) * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
99,add spring security ldap to mule distribution . add spring security ldap dependency to the standalone distribution .
100,improve the way webapps are deployed in the jetty transport . remove the webappdeployer class   use webappprovider from newer jetty versions instead .
101,update cometd version in ajax transport . the current cometd version used in the ajax transport uses jetty 6. update cometd in order to remove all references to jetty 6 and use jetty 8. update ajax tests that use old jetty version .
102,test servlet api 3.0 support in jetty transport . jetty 8 supports servlet api 3.0. test that webapps developed with this api can be correctly deployed in mule using the jetty transport .
103,update mule-jetty.xsd that contains references to old jetty classes in its comments . the mule-jetty.xsd file still contains references to old jetty clases ( org.mortbay ) in the comments . update this file .
104,evaluate mule 's gaps to work on a fips 140-2 compatible environment . as part of the fips 140 analysis   it was found that mule hardcodes the security providers used for ssl configuration . create the set of tasks and acceptance criteria needed to address this .
105,need a way to add message properties other thread . dm needs to be able to add flowvars in a asynch way to the message . see https : //www.mulesoft.org/jira/browse/ee-3479
106,create api for record level partial error handling . both batch module   connectors   devkit and advanced applications will need some common ground to make partial error handling work : devkit and connectors will need classes that return bulk operation status on a record per record basis batch module will need to read partial error classes and treat them accordingly for marking record level errors . advanced applications may define their own components that may return partial error information . munit   debugger   batch module and advanced applications will also need to work on a uniform definition of record : munit to provide means to set record level variables or assert record state debugger to provide information about record state batch module to register mel extensions accessing the record   and in general to provide record level scopes . advanced applications may eventually define custom steps ( this extension is not planned on the initial release )   needing to tap into the record scope objects . a small api maven module has to be introduced   so that it may be used as a dependency on the other projects as needed . this module should have the -api suffix   and have a version scheme independent from mule .
107,implement new summary module for calculating aggregation functions over streams . implement new module according to spec at https : //github.com/mulesoft/mule/wiki/ % 5b3.5.-m3 % 5d-summarizers
108,deprecate dev.ee repository in favour of repository.mulesoft.org . change distribution management repositories to : https : //repository-aster.mulesoft.org/nexus/content/repositories/ and build repositories to : https : //repository.mulesoft.org/nexus/content/repositories/
109,improve the way mime types are registered for outbound http attachments . the http transport uses javax.activation to handle outbound attachments . mime types are registered by the email transport ( through a static initialization block in the class defaultdatacontenthandlerfactory ) . therefore   if this class is not loaded   there are no mime types available and there is an error when sending outbound attachments through http ( for example : javax.activation.unsupporteddatatypeexception : no object dch for mime type text/plain ) . in the normal use of mule this problem does n't happen because all transports are in the classpath   but there should not be a dependency between the http transport and the email transport . see httpoutboundattachmentfunctionaltestcase . if the mule-transport-email dependency is removed from the http transport pom   this test fails .
110,write spec for new summarizer feature . write a spec for a new feature that is compliant with the following story : add a new message processor that would allow to totalise element attributes over a collection or stream . the element should be able to extract a value based on an expression   and then calculate on these summarizer functions : add   average   count   max   min over the value . the result should be saved into a flow variable also defined in the element . this processor should work with streams like auto paging collections . for these cases   the options are to lazily calculate the elements as the stream is consumed or to consume the whole stream . the former should be he default   and there should be an attribute allowing to change the behaviour .
111,make mule rely on platform configured jce provider instead of fixing on a predefined version . tlsconfiguration gets defaults for several properties using an autodiscoverysecurityproviderfactory   which in turn provides defaults based on the jvm flavour in use . in particular   it sets the default jce provider to use   the jce provider implementation class   the default keystore type   and the default ssl protocol type being use . this has several problems : * it does n't allow to properly setup jce providers as part of the platform configuration   something required to use a fips 140-2 compliant jce provider * it fixes on old versions of the providers and does n't leverage improvements made in the platforms   like ibm 's improved jce driver ( currently we use a jce provider that is 6+ years old on ibm jvms ) * it fixes the ssl/tls versions supported   which causes ssl endpoints to support ssl3 ( considered deprecated ) but no tls the java platform provides sensible defaults for all these   which get updated as the security landscape evolves   and which can be defined as part of the jvm configuration . remove the `` discovery '' of defaults   and use platform defaults for operations in and depending on tlsconfiguration . acceptance criteria : it should be possible to use any jce provider defined in the jvm environment in order to support fips compliant providers . endpoints should rely on the registered jce provider for ssl and use the default ssl type instead of hardcoding one ( as fips providers will disable several modes and only allow tls 1.0+ ) .
112,illegalstateexception when doing oauth dance with inmemoryobjectstore . oauth dance works fine with persistentobjectstores but when using in-memory ones this error is obtained : * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * message : failed to invoke fetch-access-token . message payload is of type : string code : mule_error -- 2 -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- exception stack is : 1. only owner thread can write to message : thread [ [ splunkfulfillmentqa ] .connector.http.mule.default.receiver.02 5   main ] /thread [ [ splunkfulfillmentqa ] .httpscon.receiver.02 5   main ] ( java.lang.illegalstateexception ) org.mule.defaultmulemessage:1626 ( null ) 2. failed to invoke fetch-access-token . message payload is of type : string ( org.mule.api.messagingexception ) org.mule.devkit.processor.devkitbasedmessageprocessor:134 ( http : //www.mulesoft.org/docs/site/current3/apidocs/org/mule/api/messagingexception.html ) -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- root exception stack trace : java.lang.illegalstateexception : only owner thread can write to message : thread [ [ splunkfulfillmentqa ] .connector.http.mule.default.receiver.02 5   main ] /thread [ [ splunkfulfillmentqa ] .httpscon.receiver.02 5   main ] at org.mule.defaultmulemessage.newexception ( defaultmulemessage.java:1626 ) at org.mule.defaultmulemessage.checkmutable ( defaultmulemessage.java:1612 ) at org.mule.defaultmulemessage.assertaccess ( defaultmulemessage.java:1541 ) + 3 more ( set debug level logging or '-dmule.verbose.exceptions=true ' for everything ) * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
113,provide a way to specify valid cipher specs for ssl on transports that support the protocol . ssl/tls negotiate the actual cryptographic functions used on a session by session basis . in strict environments   it 's necessary to remove older and weaker variants of many algorithms . it should be possible to setup the list of cipher specs allowed on secure connections . this setup should happen at server or at least application level   and the default should be to use whatever the cipher specs defined by default by the current provider . note that this should affect not only https   but any other transport using tis   like pops   imaps   etc .
114,create automated test cases for xa transaction recovery . create automated test cases for xa transaction recovery .
115,add pool configuration elements for jms and jdbc in bitronix . it must be possible to configure a jms connectionfactory pool and jdbc datasource pool explicitly through xml configuration .
116,add support for specifying as a system property   fips compliant security model . add a system property mule.security.model that when used may alter the security setup of mule and it 's modules . the default value should be 'default '   and should result in the actual behaviour . using a value that is not recognised should result in a fatal error preventing mule to be successfully initialised . the second supported value should be 'fips140-2 '   and should result in : * the pgp module being disabled - that is   using php module constructs should raise an error * any tls cipher suite not defined in the following list should be disabled : ( note that the provider may not support all the suites described below - if it does n't support any of these   an error should be raised ) . list of approved suites for fips : ssl_rsa_with_3des_ede_cbc_sha ssl_dhe_rsa_with_3des_ede_cbc_sha tls_rsa_with_aes_128_cbc_sha tls_dhe_dss_with_aes_128_cbc_sha tls_dhe_rsa_with_aes_128_cbc_sha tls_rsa_with_aes_256_cbc_sha tls_dhe_dss_with_aes_256_cbc_sha tls_dhe_rsa_with_aes_256_cbc_sha tls_ecdh_ecdsa_with_3des_ede_cbc_sha tls_ecdh_ecdsa_with_aes_128_cbc_sha tls_ecdh_ecdsa_with_aes_256_cbc_sha tls_ecdhe_ecdsa_with_3des_ede_cbc_sha tls_ecdhe_ecdsa_with_aes_128_cbc_sha tls_ecdhe_ecdsa_with_aes_256_cbc_sha tls_ecdh_rsa_with_3des_ede_cbc_sha tls_ecdh_rsa_with_aes_128_cbc_sha tls_ecdh_rsa_with_aes_256_cbc_sha tls_ecdhe_rsa_with_3des_ede_cbc_sha tls_ecdhe_rsa_with_aes_128_cbc_sha tls_ecdhe_rsa_with_aes_256_cbc_sha
117,need to decouple pipeline interface from messageprocessorpath generation . in order to be able to implement ee-3510 need to fix this issue .
118,allow each until-successful processor to have its own threading profile . it is using the mule common work manager . so the behaviour of it is affected by other threads in mule that are not related to until successful . it also makes hard to customise the threading profile for the until successful . each until successful should have it own threading profile . this is a subset related to mule-7035
119,add selectors functionality on watermark . implement selectors functionality on watermark as described in https : //github.com/mulesoft/mule/wiki/ % 5b3.5-m1 % 5d-watermark
120,mel datetime is not serializable . datetimes should be serializable so that they can work with watermark .
121,oauth support throws raw exception when authorization code not found . when receiving the oauth callback an exception of type java.lang.exception is thrown if no authorization code is found on the response ( which is often the case when the user denys authorization ) . because the exception is a raw type   there 's no way to catch it and take a specific action . a new exception type should be created to that purpose and that exception should be thrown
122,muleexceptions are not all serializable . the exception interface is serializable   however some implementations of muleexception contain non-serializabe fields which violates the exception contract and causes errors when trying to persist the exception in an objectstore . all non-serializable fields in any implementation of muleexception should be marked as transient
123,need to support short lived queues . so far   all queues in mule start and stop with the mule context   meaning that once a queue is created it remains active until the owning application stops . this model does not fit the batch module   which creates queues when a job instance is started and then needs to discard it when the job instance finishes . the clear ( ) method that was added in 3.5.0-me allows reclaiming the storage but the queuemanager still keeps in-memory resources that are never freed . therefore the queuemanager interface needs to add the following method : void disposequeue ( queue ) ; this method frees all resources currently held by the queue including the storage ( meaning that queue.clear ( ) will be invoked automatically ) additionally   another common need when dealing with short lived queues is the ability to easily create/retrieve queues with custom configurations . to do that   the queuesession interface will gain the following method : queue getqueue ( string name   queueconfiguration queueconfiguration ) ;
124,defaultmessageprocessor chain needs to decouple from pipeline . defaultmessageprocessorchain decides how to handle voidmuleevent on whether the flowconstruct is a service or a flow . this is done by testing the flowconstruct to be an instance of pipeline . now that the batch module has been introduced   we have a new type of flowconstruct which is not a service but not a pipeline either   which causes errors when one-way outbound endpoints are used in batch . defaultmessageprocessorchain should be changed so that it takes decisions based on the flowconstruct being an instance of service only
125,create domain concept in mule   basic resource sharing   and domain deployment feature . this task includes : - add domain concept within mule code base . - behaviour of domain deployment / undeployment / redeployment including notifications - class loading changes for domain class loader - create resource based on a domain configuration file - add logging functionality so domain resources log in their own file
126,create mule domain + domain applications project creation using maven artifact . . this should be kind of an extension of mule-7138 but should also allow to have a multi module project where one of the project is defined as the domain and the other projects are mule applications that belong to that domain . this artifact should create a package containing the domain + the apps that during deployment it will first create the domain and then deploy the applications .
127,redeploy domain when domain config resource is updated . when the domain configuration file gets updated   then the domain must be redeploy . domain redeploy must also include redeployment of the applications of the domain . the sequence should be : - acknowledge domain resources has changed . - undeploy domain applications - undeploy domain - redeploy using the updated configuration - redeploy domain applications
128,queueproducer should have a variable generic type . queueproducer class is tied to serializable as a generic type . it should allow any t
129,allow creating consumeriterator instances without selecting a consumer . in 3.5.0-m3   consumeriterator has only one constructor which receives a consumer . it can be confusing for a dev to choose the right consumer implementations besides of generating unnecessary coupling between the streaming framework and whichever component using it . it 'd be great for a developer to be able to only provide the producer and let the system choose which consumer implementation is a best fit
130,add support for http connector sharing . allow an http connector to be shared using it as a shared resources in a domain configuration .
131,request body is not closed in the httpmessagereceiver . with the changes made in http in 3.4 there 's an issue were from time to time a request is accepted but the sockets gets unexpectedly closed . this does n't happen with the oldhttpmessagereceiver class . we found that the difference on how the response is handled between both implementation is that in the oldhttpmessagereceiver the request 's body if closed after successfully sending the response ( something that the new receiver is not doing ) . after we added this code to the new receiver the issue was solved . unfortunately we were n't able to reproduce this issue in our side   so we can not create a test case to confirm the fix . the code we need to add is found in the line 210 of the org.mule.transport.http.oldhttpmessagereceiver class : if ( request.getbody ( ) ! = null ) { request.getbody ( ) .close ( ) ; }
132,analyze proper solution to mule-6432 ( true asynchronous < all > . we should decide the proper approach for implementing a truly asynchronous < all > message processor .
133,integrate the current web services component to mule . in order to run user testing we need to integrate the current component to mule .
134,defaultmulemessage should instantiate transient fields when deserealized . we 're working in a new serialization mechanism for mule that will not require objects to implement serializable or to provide a default constructor . this relies on asm   objenesis and other non standard instantiaton methods that have as a side effects that transient fields initialized in line not being initialized . for example : private transient map < string   datahandler > inboundattachments = new concurrenthashmap < string   datahandler > ( ) ; when the mulemessage is initialized through objenesis   inboundattachments will be null since a new constructor is added via asm which ignores the transient fields . since this constructor will only be used when serializing and defaultmulemessage implements the deserializationpostinitialisable interface   the initafterdeserialisation method should instantiate these fields if they are null
135,collectionsplitter uses wrong type of list . collectionsplitter uses a linkedlist to split payloads of type collection . an arraylist would be way more efficient since the size of the collection is known .
136,improper handling of unknownhostexception in outbound tcp . the problem is that when a hostname can not be resolved ( bad hostname is provided   or dns is down   etc )   mule 's connection pooling system will interpret it as localhost . in the case where the local host happens to be listening on the same port   it can result in messages being routed to the wrong place   whereas they should have failed to connect due to the bad hostname . this is caused by : 1. in the constructor of org.mule.transport.tcp.tcpsocketkey   an inetsocketaddress is constructed . if host resolution fails   the object is created anyway . 2. in org.mule.transport.tcp.tcpsocketfactory   'getaddress ( ) ' is called on the socket key and passed directly into socket.connect ( ... ) . 3. in the case that step ( 1 ) failed   'getaddress ( ) ' will return null . socket.connect ( ... ) interprets null to be localhost .
137,producer interface should not be tied to list < t > . the producer interface has a return type of list < t > for the produce ( ) method . this was fine for its original intent but as its uses keep growing we need something more generic . the method signature should change to simple t produce ( ) and replace t with a list when necessary
138,build fails due to error downloading dependencies of jbpm module . . when attempting to build running `` mvn clean install -dskiptests '' all downloads required for the jbpm module fail . tested renaming the jbpm4 folder in my local maven repository to force the download . attaching logs . build was successful after changing url of the atlassian repository in the pom file for the module to https ( the current url uses http ) .
139,remove installer specific behaviour from switchversion script . remove installer code from this file : https : //github.com/mulesoft/mule/blob/mule-3.x/buildtools/scripts/switchversion.groovy
140,move ws-proxy from patterns/core into a new web services module . the new web services component will use the `` ws '' namespace . this namespace is already used by the patterns-core module ( it is deprecated   replaced by the `` patterns '' namespace   they both support defining a web service proxy ) . before adding the code of the web services consumer   we need to : - create the ws module   and move the web service proxy implementation into it . - make patterns-core depend on ws so that we still support defining a web service proxy through the `` pattern '' namespace . - deprecate the web service proxy from the pattern namespace   suggesting to use the one from the ws namespace . - use the ws namespace in the new ws module ( move the xsd and namespace handler from patterns-core ) .
141,race condition when compiling mel expressions . mvel requires using a different parsecontext on each thread when executed concurrently . in order to accommodate that   mvelexpressionlanguage creates a canonical parsecontext   which is copied on each execution . the problem is that mvelexpressionexecutor compiles mvel expressions using the canonical parsecontext   leading to a concurrentmodificationexception   that triggered sometimes on mvelexpressionlanguagetestcase.testconcurrentevaluation .
142,review maven configuration to avoid executing test that depend on external services . doing a clone of the mule projects and then a mvn clean install should always work . no matter the environment were i 'm running it .
143,analyse the changes to have mule_home and mule_base . we need to review the cost and the impact of making the change for mule-7182 to have studio starting their apps in the same way mule starts them
144,create scatter-gather component for parallel multicasting . the < all > router currently in mule makes a good job at doing message multicasting . however   since its processing is sequential   it 's not a good fit for some use cases . implement a scatter-gather component as described in https : //github.com/mulesoft/mule/wiki/ % 5bmule-3.5-february-2014 % 5d-scatter-gather for parallel multicasting
145,outbound endpoint fails to route when sending form-data to an endpoint that uses https protocol . the https outbound endpoint when sending a request with headers doing a post   it throws a timeout . this issue does not happen with the runtime mule 3.4.1 steps to reproduce : - run the attached app - send a post to the following endpoint http : //localhost:8081/oauth2/token   adding a header to it   for example key : hello   value : world expected result : mule sends the request without problems   showing this result : { code } { `` error '' : `` invalid_client ''   `` error_description '' : `` the client credentials are invalid '' } { code } actual result : mule fails when sending the request through the outbound endpoint   sending the following response to the client : { code } failed to route event via endpoint : defaultoutboundendpoint { endpointuri=https : //api.box.com/oauth2/token   connector=httpsconnector { name=http_https lifecycle=start this=62170429 numberofconcurrenttransactedreceivers=4 createmultipletransactedreceivers=true connected=true supportedprotocols= [ https ] serviceoverrides= < none > }   name='endpoint.https.api.box.com.oauth2.token '   mep=request_response   properties= { }   transactionconfig=transaction { factory=null   action=indifferent   timeout=0 }   deleteunacceptedmessages=false   initialstate=started   responsetimeout=10000   endpointencoding=utf-8   disabletransporttransformer=false } . message payload is of type : postmethod { code } stacktrace : { code } error 2014-01-03 19:32:27 481 [ [ restproxy350december ] .connector.http.mule.default.receiver.05 ] org.mule.exception.defaultmessagingexceptionstrategy : * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * message : failed to route event via endpoint : defaultoutboundendpoint { endpointuri=https : //api.box.com/2.0/folders/0   connector=httpsconnector { name=http_https lifecycle=start this=62170429 numberofconcurrenttransactedreceivers=4 createmultipletransactedreceivers=true connected=true supportedprotocols= [ https ] serviceoverrides= < none > }   name='endpoint.https.api.box.com.2.0.folders.0 '   mep=request_response   properties= { }   transactionconfig=transaction { factory=null   action=indifferent   timeout=0 }   deleteunacceptedmessages=false   initialstate=started   responsetimeout=10000   endpointencoding=utf-8   disabletransporttransformer=false } . message payload is of type : postmethod code : mule_error -- 2 -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- exception stack is : 1. read timed out ( java.net.sockettimeoutexception ) java.net.socketinputstream : -2 ( null ) 2. failed to route event via endpoint : defaultoutboundendpoint { endpointuri=https : //api.box.com/2.0/folders/0   connector=httpsconnector { name=http_https lifecycle=start this=62170429 numberofconcurrenttransactedreceivers=4 createmultipletransactedreceivers=true connected=true supportedprotocols= [ https ] serviceoverrides= < none > }   name='endpoint.https.api.box.com.2.0.folders.0 '   mep=request_response   properties= { }   transactionconfig=transaction { factory=null   action=indifferent   timeout=0 }   deleteunacceptedmessages=false   initialstate=started   responsetimeout=10000   endpointencoding=utf-8   disabletransporttransformer=false } . message payload is of type : postmethod ( org.mule.api.transport.dispatchexception ) org.mule.transport.http.httpclientmessagedispatcher:151 ( http : //www.mulesoft.org/docs/site/current3/apidocs/org/mule/api/transport/dispatchexception.html ) -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- root exception stack trace : java.net.sockettimeoutexception : read timed out java.net.socketinputstream.socketread0 ( native method ) java.net.socketinputstream.read ( socketinputstream.java:150 ) java.net.socketinputstream.read ( socketinputstream.java:121 ) + 3 more ( set debug level logging or '-dmule.verbose.exceptions=true ' for everything ) { code }
146,fix flaky tests in mule . epic to track fixing of flaky tests in mule
147,mvel version upgrade . as a user of mule 3.5.0   i would like mule to depend on the latest version of mvel ( used for datamapper and mvel ) to stay up-to-date with the latest mvel bug fixes/enhancements . the latest version seems to be 2.1.8
148,add oracle configuration for database connector . add oracle configuration for database connector
149,migrated tests to new web services consumer module . migrated tests to new web services consumer module
150,get soap action working correctly . today the soap action works for .net ws . this has to work across all technologies .
151,configure exchange pattern based on wsdl operation mep . configure exchange pattern based on wsdl operation mep
152,use an expression for the service address . use an expression for the service address so that dynamically invoke different services - e.g . in different locations . ( different env 's ) .
153,should be able to add custom soap headers . should be able to add custom soap headers
154,an exception to be thrown when a soapfault is returned . an exception to be thrown when a soapfault is returned so that i can handle it using exception strategies
155,confusing log message in eventprocessingthread . eventprocessingthread has confusing log messages like : logger.debug ( `` stopping expiring group monitoring '' ) ; logger.debug ( `` expiring group monitoring fully stopped '' ) ; since this is an abstract class with different types of uses   those messages are confusing and should be changed to something that gives information about the actual thread that 's executing
156,changes in httpmulemessagefactory and abstractmulemessagefactory breaks 3.4.x devkit 's generated code . changes introduced in httpmulemessagefactory and abstractmulemessagefactory are affecting 3.4.x devkit 's generated code   where the constructor of httpmulemessagefactory was using the mulecontext as a parameter . the old behaviour should remain as a connector built in 3.4.x would n't work in a new ( 3.5 ) mule version . as a side note : from now on ( 3.5.0-dolomite ) devkit will use the new way of creating the factory .
157,define a global configuration element for the web service consumer . currently the web service consumer receives all its properties as attributes in the message processor . we need to define a global configuration element with some of these attributes   that may can be referenced by the message processor   to avoid repeating xml code in mule applications where more than one ws or operation within the same ws is consumed .
158,add support for attachments in web service consumer . it should be possible to add mtom attachments to a soap request   and also to extract attachments from the response and add them to the mule message .
159,implement security timestamp in web service consumer . add support for ws-security timestamp in the web service consumer component .
160,implement security username token profile in web service consumer . add support for ws-security username token profile in the web service consumer component .
161,loader.override being ignored in 3.5.0-cascade - cloudhub ( dec 2013 ) runtime . the connector is using cxf 2.6.0 dependencies   and it has defined a plugin.properties with the follow line loader.override=org.apache.cxf   org.apache.ws   org.apache.xml in 3.5 with cloudhub ( dec 2013 ) runtime environment the same application fails because is invoking one operation that is not defined in cxf 2.5.9. the same application is working correctly on mule studio 3.4. the demo application can be found in here ( https : //docs.google.com/a/mulesoft.com/file/d/0b9ow2z2e_0ymotllsurndmwxzxfdcfm4mu4wodb0vllycjfz/edit ) . the connector version that is working can be located in here ( https : //github.com/mulesoft/ms-dynamics-crm-connector/tree/mule-module-ms-dynamics-crm-1.7.1 )
162,add support for inline named parameters inside database message processors . add support for named parameters inside database message processors . ( select   insert   etc ) example : { code } < db : select > < db : parameterized-sql > select * from test where id = : id < /db : parameterized-sql > < db : in-param name= '' id '' value= '' # [ payload.id ] '' / > < /db : select > { code }
163,define the type of the payload of the web service consumer . currently the web service consumer adds an autotransformer so that the payload in the response is set as a string . ideally the payload should be an xmlstreamreader but this does n't work with datamapper . using the transformer and converting to a string may cause performance issues . if the payload is xmlstreamreader   a transformer can be added after the wsconsumer but this breaks data sense . define the correct approach .
164,restart applications automatically even after failure . when using studio   it saves my changes to disk and mule restarts my application automatically - which is wonderful   because i can rapidly prototype my application . however   if i make a syntax error   mule will cease to redeploy my application after that   forcing me to restart mule completely . mule should auto-redeploy applications   even if the last deployment failed . ( if we ca n't make that the default for 3.5   we should add a flag to support this in studio )
165,allow btm to configure username and password for jms . the bitronix connection factory should be able to receive a username and password to be used for jms connections .
166,release mule-mvel2 v2.1.8-mule001 . release a new version of mule-mvel2   and upload it to codehaus repos . version is tagged with label : mule-mvel2-2.1.8-mule001 in the git repository . besides   we need to create build plan in bamboo ce
167,ws consumer throws nullpointerexception when defining an empty security element . when defining a global configuration element for ws consumer that has an empty security element ( defined but empty )   a null pointer is thrown upon initialisation . < ws : consumer-config ... > < ws : security > < /ws : security > < /ws : consumer-config >
168,request reply does not work when using specific connector . when the inbound endpoint of a request-reply router uses an specific connector   different to the default one for that transport   then it does not work since it can not find the endpoint . < request-reply > < vm : outbound-endpoint path= '' persistentqueue '' connector-ref= '' sharedpersistentvmconnector '' / > < vm : inbound-endpoint path= '' persistentqueueresponse '' connector-ref= '' sharedpersistentvmconnector '' / > < /request-reply > adding the connector as attribute of the path makes it work : < request-reply > < vm : outbound-endpoint path= '' persistentqueue '' connector-ref= '' sharedpersistentvmconnector '' / > < vm : inbound-endpoint path= '' persistentqueueresponse ? connector=sharedpersistentvmconnector '' connector-ref= '' sharedpersistentvmconnector '' / > < /request-reply > to solve this problem the replyto property must be generated with the specific connector if available .
169,move scatter-gather config elements to the top . scatter-gather component has two config elements : threading-profile and custom-aggregation-strategy . right now   those share a sequence with the inner message processors in which its defined that these elements go on the bottom . for consistency with other components   they should be moved to the top   so that what used to be : < scatter-gather timeout= '' 5000 '' > < flow-ref name= '' a '' / > < vm : outbound-endpoint path= '' foo '' / > < sfdc : upsert ..... / > < custom-aggregation-strategy [ class= '' org.my.customaggregationstrategy '' | ref= '' beanreference '' ] / > < threading-profile maxthreadsactive= '' 5 '' / > < /scatter-gather > should now be : < scatter-gather timeout= '' 5000 '' > < custom-aggregation-strategy [ class= '' org.my.customaggregationstrategy '' | ref= '' beanreference '' ] / > < threading-profile maxthreadsactive= '' 5 '' / > < flow-ref name= '' a '' / > < vm : outbound-endpoint path= '' foo '' / > < sfdc : upsert ..... / > < /scatter-gather >
170,add support for domain bundle zip file deployment . add support for deploying a mule domain bundle file . domain bundle includes not only the domain but the apps to deploy in that domain .
171,mule_remote_client_address variable gets the wrong value when http requests are proxied . if an http request is proxied   the mule_remote_client_address will have the address of the proxy instead of the client address . the x-forwarded-for header contains a comma separated list of addresses   the first of which is the original client . mule should look if the http headers contain an x-forwarded-for header   and in such case populate the mule_remote_client_address from it 's first element if such element is a valid ip address . additionally   when this situation is detected   add a new inbound property called mule_proxy_address that contains the proxy address
172,devkitsupport module should use apache commons stringutils instead of spring . replace usage of org.springframework.util.stringutils for org.apache.commons.lang.stringutils to prevent class loading issues when older projects are using prior versions of spring
173,review flaky tests in 3.x builds . . most of the slow test builds are failing because of flaky tests . we need to review them   test them locally and ignore them if necessary   saving the logs from the failures to later fix them .
174,ws consumer returns an invalid xml document when the payload contains multiple namespaces . if a soap envelope contains a body which uses at least two different namespaces   and one of those is not used in the top element   the resulting xml document does n't declare all the namespaces   and thus is not valid . example response that is not processed correctly : < soapenv : envelope xmlns : soapenv= '' http : //schemas.xmlsoap.org/soap/envelope/ '' xmlns= '' urn : enterprise.soap.xxxx '' xmlns : xsi= '' http : //www.w3.org/2001/xmlschema-instance '' > < soapenv : body > < loginresponse > < result > ... < passwordexpired > false < /passwordexpired > < sandbox > false < /sandbox > ... < roleid xsi : nil= '' true '' / > ... < /result > < /loginresponse > < /soapenv : body > < /soapenv : envelope > fails because it 's returned as : < ? xml version= '' 1.0 '' encoding= '' utf-8 '' ? > < loginresponse xmlns= '' urn : enterprise.soap.sforce.com '' > < result > ... < passwordexpired > false < /passwordexpired > < sandbox > false < /sandbox > ... < roleid xsi : nil= '' true '' / > ... < /result > < /loginresponse > note that the xsi namespace is not imported .
175,proxy service does not rewrite schema locations in the wsdl . when proxying a web service   the proxy service will publish the final service wsdl rewriting the port locations . that 's been addressed in the jira mule-7152 . however   the schema location is not rewritten   and even if it is   the proxy needs to handle proxying a request that is not a soap request . attached is an application with a proxy and a web service which wsdl has an import schema .
176,anchor file is created before application gets deployed . anchor file is created after application unzip but application is still not initialized . problem is in artifactarchiveinstaller # installartifact to reproduce : # create a zipped app with the below configuration . # copy zipped file to $ { mule_home } /apps # start mule using this command { { bin/mule start ; if [ -f $ { mule_home } /apps/application-name-anchor.txt ] ; then curl http : //127.0.0.1:8811/in ; fi } } you should receive and { { in } } message in the console but you get { { curl : ( 7 ) could n't connect to host } }
177,upgrade schema versions to 3.5 . upgrade the schema version to 3.5
178,avoid hung threads on tests cases . currently there are several tests that left running threads once they ends . these threads consume resources and could interfere with other tests . this task aims to add checks at top level tests hierarchy in order to detect those tests leaving running threads   and then correct the them .
179,if an error occurs while configuring a just created mule context   inside defaultmulecontextfactory   this context is not disposed . several methods inside defaultmulecontextfactory class create mulecontext objects and then configure them . if the configuration phase raises an exception   the created mule context is not returned and the could not be disposed .
180,the class eventcorrelator.expiringgroupmonitoringthread has an expirymonitor member that is not disposed at dispose phase . . the dispose method of the eventcorrelator class is not taking into account the expiry monitor inside its inner class expiringgroupmonitoringthread .
181,allow new db module config to be share between applications . allow the new db config elements to be shared between applications using them as a domain resource . this will allow to share datasource connections between applications .
182,when trying to deploy app with to non existent domain nullpointerexception is logged instead of an error . try to deploy the attached application or any application to a non existent domain .
183,it should n't be allowed to deploy an application to more than one domain . try to deploy an application to more than one domain by putting this lines into mule-deploy.properties : { noformat } domain=default domain=default2 { noformat }
184,disposing a domain do not undeploy application . # deploy an application to a domain # delete domain anchor file expected : application gets undeployed actual : application remains deployed
185,should n't share an http connector without specifying it inside domain . to share a connector it should be mandatory to declare it in mule-domain-config.xml and reference it from the endpoint in connector-ref . consider the attached applications and domain .
186,transientregistry does not dispose all registered objects on dispose . . when the dispose method is called on a transientregistry instance   the current registered objects are not disposed . also   if different objects are registered using the same key   just the last object is kept and previous ones are lost . they should also be disposed at dispose phase .
187,modifying path of http inbound endpoint when sharing connector makes other application to fail . steps : # copy domain to mule installation # deploy both applications # curl http : //127.0.0.1/in/loco succeeds ( first app ) # curl http : //127.0.0.1/in2/loco succeeds ( second app ) # change path of first application from in to in1 # curl http : //127.0.0.1/in2/loco expected : curl succeed actual : curl fails
188,domain initialization result ( failure or success ) should be shown in a box at the end of the log when starting . currently   domain initialization status is shown in the logs when performed . but   in the same way that applications   it should be shown in a summary box at the end of server start .
189,nullpointerexception when tyring to override a class with loader.override . when trying o override a class with loader.override=-com.mulesoft.test.dummy get a nullpointerexception . deploy the attached application in mule standalone using bin/mule -m-dhttp.port=xxxx
190,initial preparations for the mule 4 development branch . this task will track changes made in the mule-4.x branch in order to accomodate code cleanup tasks . the scope includes : - upgrading minimum jdk to 7 - removing any jdk 6 specific code or modules - get a full maven build to run out of scope ( to be tracked in other tasks ) - removing classes and methods deprecated in mule-3.x
191,default domain should n't be configurable . you should n't be able to configure default domain by adding alibrary or putting mule-domain-config.xml inside it . to reproduce unzip the attached domains.zip file in mule_home and run bin/mule .
192,application using the same socket but not sharing connectors deploys but fails to receive requests . deployed two apps sharing an http connector and one not sharing but with an inbound endpoint listening in the same socket than the two others . the three applications get deployed but only the first two can listen for requests . # copy attached applications to apps directory # copy attached domain to domains directory # start mule by running bin/mule -m-dhttp.port=xxxx # curl http : //127.0.0.1 : xxxx/in1/loco ( success ) # curl http : //127.0.0.1 : xxxx/in2/loco ( success ) # curl http : //127.0.0.1 : xxxx/in3/loco ( fails ) < - third application
193,http inbound endpoints listen for requests in a different path . when http inbound endpoint listens to * in * path   if you send a request to path * inxxx * it receives it . to reproduce deploy this configuration using bin/mule -m-dhttp.port=yyyy and run curl http : //127.0.0.1 : yyyy/inxxx { code : xml } < ? xml version= '' 1.0 '' encoding= '' utf-8 '' ? > < mule xmlns= '' http : //www.mulesoft.org/schema/mule/core '' xmlns : xsi= '' http : //www.w3.org/2001/xmlschema-instance '' xmlns : spring= '' http : //www.springframework.org/schema/beans '' xmlns : test= '' http : //www.mulesoft.org/schema/mule/test '' xmlns : http= '' http : //www.mulesoft.org/schema/mule/http '' xmlns : vm= '' http : //www.mulesoft.org/schema/mule/vm '' xsi : schemalocation= '' http : //www.mulesoft.org/schema/mule/core http : //www.mulesoft.org/schema/mule/core/current/mule.xsd http : //www.mulesoft.org/schema/mule/test http : //www.mulesoft.org/schema/mule/test/current/mule-test.xsd http : //www.mulesoft.org/schema/mule/http http : //www.mulesoft.org/schema/mule/http/current/mule-http.xsd http : //www.mulesoft.org/schema/mule/vm http : //www.mulesoft.org/schema/mule/vm/current/mule-vm.xsd http : //www.springframework.org/schema/beans http : //www.springframework.org/schema/beans/spring-beans-3.1.xsd '' > < flow name= '' main '' > < http : inbound-endpoint host= '' 127.0.0.1 '' port= '' $ { http.port } '' path= '' in '' / > < test : component appendstring= '' received 2 '' / > < /flow > < /mule > { code }
194,ws-consumer wsdl does n't allow resource paths . the web service consumer requires the location of a wsdl file as part of it 's configuration . the location is parsed as a url and if not valid   it is parsed as a file path . the convention in mule is to treat these fields as resource paths   which would allow urls   absolute files   but will also look for resource files ( relative to the current classpath   and possibly inside a jar ) . change the behavior so that the wsdl location is treated as a reouce location .
195,disallow multiple transaction manager to be used within an application . currently if multiple transaction manager are configured in mule   as mule only supports one   it will just peek the first one . to avoid confusion to users we must not allow users to configure multiple transaction managers .
196,lack of synchronization causes multiple expiration requests on aggregator groups . the test eventcorrelatortestcase.processesexpiredgroupinprimarynode fails intermitently due to a lack of synchronization in the access to an object store between different threads   that sporadically leads to a group expiry being triggered several times . this may be a problem if the correlation is setup to process the group at expiration instead of giving an error . the problem is mitigated when using persistent object stores as i/o synchronisation is creating an adhoc happens-after causality .
197,jersey version upgrade . mule is using old jersey libraries ( 1.6 ) that would need to be upgraded to latest to develop new agent . dependent on this library are : - current agent - some example and test classes - mule-module-jersey in ce
198,oauth2 authorize messageprocessor enters a loop if it 's the last processor in the flow . consider the following flow : < flow name= '' authorizeflow '' > < http : inbound-endpoint path= '' authorize '' port= '' 8081 '' exchange-pattern= '' request-response '' > < google-calendars : authorize / > < /flow > that results in google 's oauth login screen showing up . after authorization   the browser is continuously redirected to the same page over and over again . however   if the flow is changed to this : < flow name= '' authorizeflow '' > < http : inbound-endpoint path= '' authorize '' port= '' 8081 '' exchange-pattern= '' request-response '' > < google-calendars : authorize / > < logger message= '' authorized ! '' / > < /flow > it starts to work perfectly after any message processor is placed after the authorization one . this is probably and issue due to the fact that authorize mp 's are intercepting but in the first example there 's nothing to intercept .
199,poll : watermark gives a wrong warning message when no results are returned from the query inside the poll . when polling salesforce to retrieve data using the watermark feature   a warning message saying that the watermark is null appears if the query does not bring back any data . for example   the following salesforce query : select email   firstname   lastname   lastmodifieddate from contact where lastmodifieddate > # [ flowvars [ 'timestamp ' ] ] then the following warning appears even though the watermark value is not null : warn watermark [ pool-13-thread-1 ] : watermark value is null and will be ignored
200,make the pgp module work on a fips environment . as part of making mule fips 140-2 compliant   users should be able to allow the pgp module to be fips-compliant . we should investigate the possibility of using platform 's cryptography provider instead of bouncy castle for pgp module . if it is easy to do   we should execute the task of removing bouncy castle dependencies ( create another jira first ) . setting fips mode on in mule should allow the pgp module to use only fips-compliant modules .
201,fix flaky flowsyncasyncprocessingstrategytestcase . . this is a flaky that was ignored .
202,cxf : make proxy-service and proxy-client handle multiple ports to support soap 1.1 and 1.2 messages in the same flow . nowadays   if you want to create a proxy   you have to specify the port name and the soapversion for each binding . this information is provided by the wsdl   so it should n't be required   the proxies should detect them automatically . as a consequence   if you have an api with multiple ports   one of them receiving a soap 1.1 envelope   and other one receiving a soap 1.2 envelope   and if you do n't specify the port and the soapversion in both proxies ( service and client ) you will not be able to send a soap 1.2 message . this means that a simple proxy can not be used with both types of soap versions .
203,new database module streaming feature is not working with large queries . when the streaming option of the new database module is activated   there is an error with large queries . additionally   no error message is shown and no results are returned . config : < poll doc : name= '' poll '' > < fixed-frequency-scheduler frequency= '' 1000 '' timeunit= '' minutes '' / > < watermark variable= '' timestampdb '' default-expression= '' # [ '2010-02-11 14:25:12 ' ] '' selector= '' max '' selector-expression= '' # [ payload.last_modified ] '' / > < db : select config-ref= '' mysql_config '' doc : name= '' query database '' > < db : parameterized-query > < ! [ cdata [ select first_name   last_name   email   last_modified from contact where last_modified > `` # [ flowvars [ 'timestampdb ' ] ] '' ] ] > < /db : parameterized-query > < /db : select > < /poll > same configuration without watermark was also tested and same behavior resulted .
204,deprecate < all > in favor of < scatther-gather > . now that we have an implementation of the scatter gather pattern   deprecate the < all > element in favor of it . there is a slight variation in functionality   but for most cases scatter-gather will be prefered   and the advanced cases were you need to evaluate the same payload sequentially   yet fail at the first failure   can be accomplished using wire-taps . this task requires : - issuing a warning when parsing < all > in an xml definition . - changing mule schema 's documentation to flag the deprecation in doc - deprecate class implementing the all router .
205,muleapplicationcontext renamed to muleartifactcontext breaks backwards compatibility . on mule 3.5-m4   muleapplicationcontext was renamed to muleartifactcontext . this class is used in other projects   and will break them . provide a deprecated muleapplicationcontext to avoid breaking these apps .
206,expressionsplitterxpathtestcase has wrong assertions . expressionsplitterxpathtestcase has tests which are broken but   as the assertions are not ok   they seem to pass . lines : xmlunit.comparexml ( expected_message_1   results.get ( 0 ) .tostring ( ) ) ; xmlunit.comparexml ( expected_message_2   results.get ( 1 ) .tostring ( ) ) ; should be : asserttrue ( xmlunit.comparexml ( expected_message_1   results.get ( 0 ) .tostring ( ) ) .identical ( ) ) ; asserttrue ( xmlunit.comparexml ( expected_message_2   results.get ( 1 ) .tostring ( ) ) .identical ( ) ) ;
207,ca n't use webservice consumer with operation without parameters . consider the documentation attached : the endpoint localhost:8081/ consumes a web services that takes a zip as an input parameter . that operation works perfectly . however   in localhost:8081/test i 'm trying to consume an operation which does n't take any parameters . there 's no way to make this work because : 1 ) ws consumer is expecting me to generate the soap envelope using datamapper   however   i do n't have a payload to transform so i 'm forced to create a dummy map 2 ) because the operation is expecting no parameters   the xml that datamapper generates looks like this : < ? xml version= '' 1.0 '' encoding= '' utf-8 '' ? > 3 ) the above results in ws consumer returning this error   basically because there 's no envelope to consume : org.mule.api.transport.dispatchexception : could_not_read_xml_stream . failed to route event via endpoint : org.mule.module.cxf.cxfoutboundmessageprocessor . message payload is of type : postmethod error put aside   it does n't make sense to me that : * it seems like the only easy way to generate the soap envelopes is through datamapper   which is not a ce feature like ws consumer is * how do i create a valid envelope when the operation takes no parameters ? * because envelope generation depends on datamapper   i have to drop the ws consumer box in the canvas before the datamapper one . it 's not natural for the developer to think the flow from right to left . * should n't ws consumer be capable of auto generating the envelope   at least when it requires no parameters ?
208,ca n't use ws consumer with message properties . consider the attached configuration in which i 'm trying to receive a zip as an http query param and then use that zip to invoke a weather web service . it is impossible to do so unless i use that message property to create a map in the payload and then use datamapper to create the invocation body . i should have to be forced to create completely artificial set-payload and datamapper message processors for doing something as simple as asking for the weather of a zip number . i should't have to write the soap body myself either . any of these two options defeat the purpose of the component . i should be able to just pass the ws : consumer whatever attributes the invocation takes and it should be able to construct the body .
209,number of jms consumers decreases to 1 after reconnection . after reconnection the number of jms consumers goes from 4 to 1 ( in fact to 0   but goes to 1 after queueing a message ) . steps : # install the attached mule-config.xml # start an activemq broker # copy activemq-all-5.9.0.jar to lib/user # bin/mule -m-dhttp.port=8811 # wait for deployment # go to activemq console and verify that there are 4 consumers on queue * in * # verify that application works running : curl http : //127.0.0.1:8811/jms1 and seeing that one message is queued in queue * out * # restart activemq broker # wait for console to be up # # expected : 4 consumers on queue in # # actual : 0 consumers # bin/mule -m-dhttp.port=8811 # # expected : 4 consumers on queue in # # actual : 1 consumers i 've tried setting { { numberofconsumers= '' 4 '' } } in the connector but works in the same way it 's a regression since in 3.4.1 and before works as expected tried to load the application with 1000 requests and the consumer 's number remains the same mule-config :
210,jms inbound do not reconnect to queue after broker restart . when restarting activemq a jms inbound endpoint do not reconnect . to reproduce : # install the attached mule-config.xml # start an activemq broker # copy activemq-all-5.9.0.jar to lib/user # bin/mule -m-dhttp.port=8811 # wait for deployment # verify that application works running : curl http : //127.0.0.1:8811/jms1 and seeing that one message is queued in queue out # restart activemq broker # curl http : //127.0.0.1:8811/jms1 # # expected : one message is queued on queue out # # actual : out queue has no message besides the one before restarting
211,transformer resolution in typebasedtransformerresolver fails depending on which order transformers are found . typebasedtransformerresolver uses registry to lookup all the transformers that are compatible with a given transformation . then it searches on the obtained list of transformers looking for the best match to execute the transformation . problem its that the transformers are not ordered   so the best match calculation fails to obtain a transformer when the two first transformers have the same weight but different implementation classes . in this case   if the best transformer is a third one   then it wo n't be found because the resolution will fail on the previous ones .
212,avoid transformer lookup inside registry to improve performance . transformer resolution inside muleregistryhelper implies two different lookup operations : one for transformerresolver and another for transformers . both lookup operations have a high cost as they imply that prototype beans will be created during the search process . performance can be improved   in particular avoiding high contention on the application classloader   if the mentioned lookup are not executed .
213,new database message processor : template tag is not accepting dynamic-query as a child element . steps to reproduce : 1.- execute the followed mule config : { code : xml } < ? xml version= '' 1.0 '' encoding= '' utf-8 '' ? > < mule xmlns : jdbc-ee= '' http : //www.mulesoft.org/schema/mule/ee/jdbc '' xmlns : context= '' http : //www.springframework.org/schema/context '' xmlns : db= '' http : //www.mulesoft.org/schema/mule/db '' xmlns= '' http : //www.mulesoft.org/schema/mule/core '' xmlns : doc= '' http : //www.mulesoft.org/schema/mule/documentation '' xmlns : spring= '' http : //www.springframework.org/schema/beans '' version= '' ee-3.5.0 '' xmlns : xsi= '' http : //www.w3.org/2001/xmlschema-instance '' xsi : schemalocation= '' http : //www.mulesoft.org/schema/mule/ee/jdbc http : //www.mulesoft.org/schema/mule/ee/jdbc/current/mule-jdbc-ee.xsd http : //www.springframework.org/schema/beans http : //www.springframework.org/schema/beans/spring-beans-current.xsd http : //www.mulesoft.org/schema/mule/core http : //www.mulesoft.org/schema/mule/core/current/mule.xsd http : //www.mulesoft.org/schema/mule/db http : //www.mulesoft.org/schema/mule/db/current/mule-db.xsd http : //www.springframework.org/schema/context http : //www.springframework.org/schema/context/spring-context-current.xsd '' > < db : generic-config name= '' mysql_generic_config_usingds '' url= '' jdbc : mysql : //172.16.20.163:3306/studio ? user=root & amp ; password= * * * * * '' driverclassname= '' com.mysql.jdbc.driver '' doc : name= '' generic config '' / > < db : template-query name= '' template_query '' doc : name= '' template query '' > < db : dynamic-query > < ! [ cdata [ select * from users ] ] > < /db : dynamic-query > < /db : template-query > < flow name= '' select-ft '' doc : name= '' select-ft '' > < logger level= '' info '' doc : name= '' logger '' / > < db : select config-ref= '' mysql_generic_config_usingds '' doc : name= '' database '' > < db : template-query-ref name= '' template_query '' / > < /db : select > < logger level= '' info '' doc : name= '' logger '' / > < /flow > < /mule > { code } issue : you get the followed saxparserexception { code } caused by : org.xml.sax.saxparseexception : cvc-complex-type.2.4.a : invalid content was found starting with element 'db : dynamic-query ' . one of ' { `` http : //www.mulesoft.org/schema/mule/core '' : annotations   `` http : //www.mulesoft.org/schema/mule/db '' : parameterized-query   `` http : //www.mulesoft.org/schema/mule/db '' : template-query-ref   `` http : //www.mulesoft.org/schema/mule/db '' : in-param } ' is expected . at org.apache.xerces.util.errorhandlerwrapper.createsaxparseexception ( unknown source ) at org.apache.xerces.util.errorhandlerwrapper.error ( unknown source ) at org.apache.xerces.impl.xmlerrorreporter.reporterror ( unknown source ) at org.apache.xerces.impl.xmlerrorreporter.reporterror ( unknown source ) at org.apache.xerces.impl.xmlerrorreporter.reporterror ( unknown source ) at org.apache.xerces.impl.xs.xmlschemavalidator $ xsierrorreporter.reporterror ( unknown source ) at org.apache.xerces.impl.xs.xmlschemavalidator.reportschemaerror ( unknown source ) at org.apache.xerces.impl.xs.xmlschemavalidator.handlestartelement ( unknown source ) at org.apache.xerces.impl.xs.xmlschemavalidator.startelement ( unknown source ) at org.apache.xerces.impl.xmlnsdocumentscannerimpl.scanstartelement ( unknown source ) at org.apache.xerces.impl.xmldocumentfragmentscannerimpl $ fragmentcontentdispatcher.dispatch ( unknown source ) at org.apache.xerces.impl.xmldocumentfragmentscannerimpl.scandocument ( unknown source ) at org.apache.xerces.parsers.xml11configuration.parse ( unknown source ) at org.apache.xerces.parsers.xml11configuration.parse ( unknown source ) at org.apache.xerces.parsers.xmlparser.parse ( unknown source ) at org.apache.xerces.parsers.domparser.parse ( unknown source ) at org.apache.xerces.jaxp.documentbuilderimpl.parse ( unknown source ) at org.springframework.beans.factory.xml.defaultdocumentloader.loaddocument ( defaultdocumentloader.java:75 ) at org.springframework.beans.factory.xml.xmlbeandefinitionreader.doloadbeandefinitions ( xmlbeandefinitionreader.java:388 ) ... 24 more { code }
214,new database messsage processor : rename < db : output-param / > to < db : out-param / > . to be consistent with the db : in-param   the output parameter should be named db : out-param . studio is already generating the xml as < db : out-param / >
215,fail to expand properties when using property placeholder shared in a domain . steps : # deploy the below application and domain # put domain.properties in domain root dir # bin/mule * expected : mule starts and flow listens on 127.0.0.1:8811/in1 and 127.0.0.1:8811/in2 * actual : mule fails to start because $ [ http.port ] is an invalid value for port * note : i put domain.properties file in domain root directory because in domain/classes it is not found
216,new database message processor : npe when parsing queries in templates . steps to reproduce : 1.- create and run the followed mule config : { code : xml } < ? xml version= '' 1.0 '' encoding= '' utf-8 '' ? > < mule xmlns : http= '' http : //www.mulesoft.org/schema/mule/http '' xmlns : context= '' http : //www.springframework.org/schema/context '' xmlns : db= '' http : //www.mulesoft.org/schema/mule/db '' xmlns= '' http : //www.mulesoft.org/schema/mule/core '' xmlns : doc= '' http : //www.mulesoft.org/schema/mule/documentation '' xmlns : spring= '' http : //www.springframework.org/schema/beans '' version= '' ee-3.5.0 '' xmlns : xsi= '' http : //www.w3.org/2001/xmlschema-instance '' xsi : schemalocation= '' http : //www.mulesoft.org/schema/mule/db http : //www.mulesoft.org/schema/mule/db/current/mule-db.xsd http : //www.springframework.org/schema/context http : //www.springframework.org/schema/context/spring-context-current.xsd http : //www.springframework.org/schema/beans http : //www.springframework.org/schema/beans/spring-beans-current.xsd http : //www.mulesoft.org/schema/mule/core http : //www.mulesoft.org/schema/mule/core/current/mule.xsd http : //www.mulesoft.org/schema/mule/http http : //www.mulesoft.org/schema/mule/http/current/mule-http.xsd '' > < db : mysql-config name= '' mysql_config_usingds '' host= '' 172.16.20.163 '' port= '' 3036 '' user= '' root '' password= '' mulemanishere '' database= '' studio '' doc : name= '' mysql config '' / > < db : template-query name= '' template_delete '' doc : name= '' template query '' doc : description= '' with doc here '' > < db : parameterized-query > < ! [ cdata [ delete from customers where customername='alfreds futterkiste ' and contactname='maria anders ' ; ] ] > < /db : parameterized-query > < db : in-param name= '' mydeleteparmeter '' defaultvalue= '' # [ flowvars [ 'hola ' ] ] '' / > < /db : template-query > < db : template-query name= '' template_select '' doc : name= '' template query '' > < db : parameterized-query > < ! [ cdata [ select * from users ] ] > < /db : parameterized-query > < db : in-param name= '' myparameter1 '' defaultvalue= '' lala '' / > < db : in-param name= '' myparameter2 '' defaultvalue= '' # [ payload.parameter2 ] '' / > < /db : template-query > < db : template-query name= '' template_store_procedure '' doc : name= '' template query '' > < db : parameterized-query > < ! [ cdata [ use adventureworks2012 ; go exec sp_procoption @ procname = ' < procedure name > '   @ optionname = ] 'startup '   @ optionvalue = 'on ' ; ] ] > < /db : parameterized-query > < db : in-param name= '' myparameter '' defaultvalue= '' storeprocedure '' / > < db : in-param name= '' myparameter2 '' defaultvalue= '' storeprocedure2 '' / > < /db : template-query > < db : template-query name= '' template_update '' doc : name= '' template query '' > < ! -- < db : dynamic-query > < ! [ cdata [ update customers set contactname='alfred schmidt '   city='hamburg ' where customername='alfreds futterkiste ' ; ] ] > < /db : dynamic-query > -- > < /db : template-query > < flow name= '' select-ft '' doc : name= '' select-ft '' > < logger level= '' info '' doc : name= '' logger '' / > < db : select config-ref= '' mysql_config_usingds '' doc : name= '' database '' > < db : template-query-ref name= '' template_select '' / > < db : in-param name= '' myparameter3 '' value= '' bla3 '' / > < db : in-param name= '' myparameter4 '' value= '' # [ message.payload.ble4 ] '' / > < /db : select > < logger level= '' info '' doc : name= '' logger '' / > < /flow > < /mule > { code } issue : when running the application you get the followed npe { code } info 2014-02-18 12:37:34 663 [ main ] org.mule.module.db.sqlexecutor.parser.simplesqlcommandparser : parsing sql : delete from customers where customername='alfreds futterkiste ' and contactname='maria anders ' ; info 2014-02-18 12:37:34 669 [ main ] org.mule.module.db.sqlexecutor.parser.simplesqlcommandparser : parsing sql : select * from users info 2014-02-18 12:37:34 671 [ main ] org.mule.module.db.sqlexecutor.parser.simplesqlcommandparser : parsing sql : use adventureworks2012 ; go exec sp_procoption @ procname = ' < procedure name > '   @ optionname = ] 'startup '   @ optionvalue = 'on ' ; error 2014-02-18 12:37:34 691 [ main ] org.mule.module.launcher.application.defaultmuleapplication : null java.lang.nullpointerexception at org.mule.module.db.config.commanddefinitionbeandefinitionparser.parsesqlreference ( commanddefinitionbeandefinitionparser.java:69 ) at org.mule.module.db.config.commanddefinitionbeandefinitionparser.doparse ( commanddefinitionbeandefinitionparser.java:62 ) at org.mule.config.spring.parsers.abstractmulebeandefinitionparser.parseinternal ( abstractmulebeandefinitionparser.java:297 ) at org.springframework.beans.factory.xml.abstractbeandefinitionparser.parse ( abstractbeandefinitionparser.java:59 ) at org.springframework.beans.factory.xml.namespacehandlersupport.parse ( namespacehandlersupport.java:73 ) at org.mule.config.spring.mulehierarchicalbeandefinitionparserdelegate.parsecustomelement ( mulehierarchicalbeandefinitionparserdelegate.java:85 ) at org.mule.config.spring.mulehierarchicalbeandefinitionparserdelegate.parsecustomelement ( mulehierarchicalbeandefinitionparserdelegate.java:127 ) at org.springframework.beans.factory.xml.beandefinitionparserdelegate.parsecustomelement ( beandefinitionparserdelegate.java:1428 ) at org.springframework.beans.factory.xml.defaultbeandefinitiondocumentreader.parsebeandefinitions ( defaultbeandefinitiondocumentreader.java:190 ) at org.mule.config.spring.mulebeandefinitiondocumentreader.parsebeandefinitions ( mulebeandefinitiondocumentreader.java:51 ) at org.springframework.beans.factory.xml.defaultbeandefinitiondocumentreader.doregisterbeandefinitions ( defaultbeandefinitiondocumentreader.java:140 ) at org.springframework.beans.factory.xml.defaultbeandefinitiondocumentreader.registerbeandefinitions ( defaultbeandefinitiondocumentreader.java:111 ) at org.springframework.beans.factory.xml.xmlbeandefinitionreader.registerbeandefinitions ( xmlbeandefinitionreader.java:493 ) at org.springframework.beans.factory.xml.xmlbeandefinitionreader.doloadbeandefinitions ( xmlbeandefinitionreader.java:390 ) at org.springframework.beans.factory.xml.xmlbeandefinitionreader.loadbeandefinitions ( xmlbeandefinitionreader.java:334 ) at org.springframework.beans.factory.xml.xmlbeandefinitionreader.loadbeandefinitions ( xmlbeandefinitionreader.java:302 ) at org.springframework.beans.factory.support.abstractbeandefinitionreader.loadbeandefinitions ( abstractbeandefinitionreader.java:174 ) at org.mule.config.spring.muleartifactcontext.loadbeandefinitions ( muleartifactcontext.java:106 ) at org.springframework.context.support.abstractrefreshableapplicationcontext.refreshbeanfactory ( abstractrefreshableapplicationcontext.java:130 ) at org.springframework.context.support.abstractapplicationcontext.obtainfreshbeanfactory ( abstractapplicationcontext.java:537 ) at org.springframework.context.support.abstractapplicationcontext.refresh ( abstractapplicationcontext.java:451 ) at org.mule.config.spring.springregistry.doinitialise ( springregistry.java:86 ) at org.mule.registry.abstractregistry.initialise ( abstractregistry.java:105 ) at org.mule.config.spring.springxmlconfigurationbuilder.createspringregistry ( springxmlconfigurationbuilder.java:133 ) at org.mule.config.spring.springxmlconfigurationbuilder.doconfigure ( springxmlconfigurationbuilder.java:88 ) at org.mule.config.builders.abstractconfigurationbuilder.configure ( abstractconfigurationbuilder.java:43 ) at org.mule.config.builders.abstractresourceconfigurationbuilder.configure ( abstractresourceconfigurationbuilder.java:69 ) at org.mule.config.builders.autoconfigurationbuilder.autoconfigure ( autoconfigurationbuilder.java:101 ) at org.mule.config.builders.autoconfigurationbuilder.doconfigure ( autoconfigurationbuilder.java:52 ) at org.mule.config.builders.abstractconfigurationbuilder.configure ( abstractconfigurationbuilder.java:43 ) at org.mule.config.builders.abstractresourceconfigurationbuilder.configure ( abstractresourceconfigurationbuilder.java:69 ) at org.mule.context.defaultmulecontextfactory.createmulecontext ( defaultmulecontextfactory.java:80 ) at org.mule.module.launcher.application.defaultmuleapplication.init ( defaultmuleapplication.java:170 ) at org.mule.module.launcher.artifact.artifactwrapper $ 2.execute ( artifactwrapper.java:62 ) at org.mule.module.launcher.artifact.artifactwrapper.executewithinartifactclassloader ( artifactwrapper.java:129 ) at org.mule.module.launcher.artifact.artifactwrapper.init ( artifactwrapper.java:57 ) at org.mule.module.launcher.defaultartifactdeployer.deploy ( defaultartifactdeployer.java:25 ) at org.mule.tooling.server.application.applicationdeployer.main ( applicationdeployer.java:121 ) { code }
217,cxf : proxy-service does not automatically recognise the port of a service . if the proxy-service receives the information of : -wsdllocation -namespace -service but it does not receive the port name   this information is not automatically retrieved from the wsdl . this happens even if the service has only one port . there is an attached project where you can see that if you specify the port   this works fine   but if you do n't use this property   you receive the following stacktrace : { code } error 2014-02-18 14:14:17 050 [ main ] org.mule.module.launcher.application.defaultmuleapplication : null java.net.connectexception : connection refused java.net.plainsocketimpl.socketconnect ( native method ) java.net.abstractplainsocketimpl.doconnect ( abstractplainsocketimpl.java:339 ) java.net.abstractplainsocketimpl.connecttoaddress ( abstractplainsocketimpl.java:200 ) java.net.abstractplainsocketimpl.connect ( abstractplainsocketimpl.java:182 ) java.net.sockssocketimpl.connect ( sockssocketimpl.java:392 ) java.net.socket.connect ( socket.java:579 ) java.net.socket.connect ( socket.java:528 ) sun.net.networkclient.doconnect ( networkclient.java:180 ) sun.net.www.http.httpclient.openserver ( httpclient.java:432 ) sun.net.www.http.httpclient.openserver ( httpclient.java:527 ) sun.net.www.http.httpclient. < init > ( httpclient.java:211 ) sun.net.www.http.httpclient.new ( httpclient.java:308 ) sun.net.www.http.httpclient.new ( httpclient.java:326 ) sun.net.www.protocol.http.httpurlconnection.getnewhttpclient ( httpurlconnection.java:996 ) sun.net.www.protocol.http.httpurlconnection.plainconnect ( httpurlconnection.java:932 ) sun.net.www.protocol.http.httpurlconnection.connect ( httpurlconnection.java:850 ) sun.net.www.protocol.http.httpurlconnection.getinputstream ( httpurlconnection.java:1300 ) org.apache.xerces.impl.xmlentitymanager.setupcurrententity ( unknown source ) org.apache.xerces.impl.xmlversiondetector.determinedocversion ( unknown source ) org.apache.xerces.parsers.xml11configuration.parse ( unknown source ) org.apache.xerces.parsers.xml11configuration.parse ( unknown source ) org.apache.xerces.parsers.xmlparser.parse ( unknown source ) org.apache.xerces.parsers.domparser.parse ( unknown source ) org.apache.xerces.jaxp.documentbuilderimpl.parse ( unknown source ) com.ibm.wsdl.xml.wsdlreaderimpl.getdocument ( unknown source ) com.ibm.wsdl.xml.wsdlreaderimpl.readwsdl ( unknown source ) com.ibm.wsdl.xml.wsdlreaderimpl.readwsdl ( unknown source ) org.apache.cxf.wsdl11.wsdlmanagerimpl.loaddefinition ( wsdlmanagerimpl.java:249 ) org.apache.cxf.wsdl11.wsdlmanagerimpl.getdefinition ( wsdlmanagerimpl.java:192 ) org.mule.module.cxf.support.proxyserviceconfiguration.getendpointname ( proxyserviceconfiguration.java:50 ) org.apache.cxf.service.factory.reflectionservicefactorybean.getendpointname ( reflectionservicefactorybean.java:1843 ) org.apache.cxf.service.factory.reflectionservicefactorybean.getendpointname ( reflectionservicefactorybean.java:1835 ) org.mule.module.cxf.builder.abstractinboundmessageprocessorbuilder.build ( abstractinboundmessageprocessorbuilder.java:189 ) org.mule.module.cxf.builder.abstractinboundmessageprocessorbuilder.build ( abstractinboundmessageprocessorbuilder.java:62 ) org.mule.module.cxf.config.flowconfiguringmessageprocessor.initialise ( flowconfiguringmessageprocessor.java:92 ) org.mule.processor.chain.abstractmessageprocessorchain.initialise ( abstractmessageprocessorchain.java:79 ) org.mule.construct.abstractflowconstruct.initialiseifinitialisable ( abstractflowconstruct.java:314 ) org.mule.construct.abstractpipeline.doinitialise ( abstractpipeline.java:214 ) org.mule.construct.abstractflowconstruct $ 1.ontransition ( abstractflowconstruct.java:109 ) org.mule.construct.abstractflowconstruct $ 1.ontransition ( abstractflowconstruct.java:103 ) org.mule.lifecycle.abstractlifecyclemanager.invokephase ( abstractlifecyclemanager.java:138 ) org.mule.construct.flowconstructlifecyclemanager.fireinitialisephase ( flowconstructlifecyclemanager.java:78 ) org.mule.construct.abstractflowconstruct.initialise ( abstractflowconstruct.java:102 ) sun.reflect.nativemethodaccessorimpl.invoke0 ( native method ) sun.reflect.nativemethodaccessorimpl.invoke ( nativemethodaccessorimpl.java:57 ) sun.reflect.delegatingmethodaccessorimpl.invoke ( delegatingmethodaccessorimpl.java:43 ) java.lang.reflect.method.invoke ( method.java:606 ) org.springframework.beans.factory.support.abstractautowirecapablebeanfactory.invokecustominitmethod ( abstractautowirecapablebeanfactory.java:1612 ) org.springframework.beans.factory.support.abstractautowirecapablebeanfactory.invokeinitmethods ( abstractautowirecapablebeanfactory.java:1553 ) org.springframework.beans.factory.support.abstractautowirecapablebeanfactory.initializebean ( abstractautowirecapablebeanfactory.java:1483 ) org.springframework.beans.factory.support.abstractautowirecapablebeanfactory.docreatebean ( abstractautowirecapablebeanfactory.java:524 ) org.springframework.beans.factory.support.abstractautowirecapablebeanfactory.createbean ( abstractautowirecapablebeanfactory.java:461 ) org.springframework.beans.factory.support.abstractbeanfactory $ 1.getobject ( abstractbeanfactory.java:295 ) org.springframework.beans.factory.support.defaultsingletonbeanregistry.getsingleton ( defaultsingletonbeanregistry.java:223 ) org.springframework.beans.factory.support.abstractbeanfactory.dogetbean ( abstractbeanfactory.java:292 ) org.springframework.beans.factory.support.abstractbeanfactory.getbean ( abstractbeanfactory.java:194 ) org.springframework.beans.factory.support.defaultlistablebeanfactory.preinstantiatesingletons ( defaultlistablebeanfactory.java:626 ) org.springframework.context.support.abstractapplicationcontext.finishbeanfactoryinitialization ( abstractapplicationcontext.java:932 ) org.springframework.context.support.abstractapplicationcontext.refresh ( abstractapplicationcontext.java:479 ) org.mule.config.spring.springregistry.doinitialise ( springregistry.java:85 ) org.mule.registry.abstractregistry.initialise ( abstractregistry.java:105 ) org.mule.config.spring.springxmlconfigurationbuilder.createspringregistry ( springxmlconfigurationbuilder.java:133 ) org.mule.config.spring.springxmlconfigurationbuilder.doconfigure ( springxmlconfigurationbuilder.java:88 ) org.mule.config.builders.abstractconfigurationbuilder.configure ( abstractconfigurationbuilder.java:43 ) org.mule.config.builders.abstractresourceconfigurationbuilder.configure ( abstractresourceconfigurationbuilder.java:69 ) org.mule.config.builders.autoconfigurationbuilder.autoconfigure ( autoconfigurationbuilder.java:101 ) org.mule.config.builders.autoconfigurationbuilder.doconfigure ( autoconfigurationbuilder.java:52 ) org.mule.config.builders.abstractconfigurationbuilder.configure ( abstractconfigurationbuilder.java:43 ) org.mule.config.builders.abstractresourceconfigurationbuilder.configure ( abstractresourceconfigurationbuilder.java:69 ) org.mule.context.defaultmulecontextfactory.createmulecontext ( defaultmulecontextfactory.java:80 ) org.mule.module.launcher.application.defaultmuleapplication.init ( defaultmuleapplication.java:170 ) org.mule.module.launcher.artifact.artifactwrapper $ 2.execute ( artifactwrapper.java:62 ) org.mule.module.launcher.artifact.artifactwrapper.executewithinartifactclassloader ( artifactwrapper.java:129 ) org.mule.module.launcher.artifact.artifactwrapper.init ( artifactwrapper.java:57 ) org.mule.module.launcher.defaultartifactdeployer.deploy ( defaultartifactdeployer.java:25 ) org.mule.tooling.server.application.applicationdeployer.main ( applicationdeployer.java:121 ) info 2014-02-18 14:14:17 055 [ main ] org.mule.module.launcher.application.defaultmuleapplication : app 'withoutport ' never started   nothing to dispose of exception in thread `` main '' org.mule.module.launcher.deploymentinitexception : connectexception : connection refused org.mule.module.launcher.application.defaultmuleapplication.init ( defaultmuleapplication.java:177 ) org.mule.module.launcher.artifact.artifactwrapper $ 2.execute ( artifactwrapper.java:62 ) org.mule.module.launcher.artifact.artifactwrapper.executewithinartifactclassloader ( artifactwrapper.java:129 ) org.mule.module.launcher.artifact.artifactwrapper.init ( artifactwrapper.java:57 ) org.mule.module.launcher.defaultartifactdeployer.deploy ( defaultartifactdeployer.java:25 ) org.mule.tooling.server.application.applicationdeployer.main ( applicationdeployer.java:121 ) { code } this bug depends on the api that you are using . for example   if you use this one : http : //www.webservicex.net/fedach.asmx ? wsdl   which is a .net based api   the port is automatically detected when it is not specified .
218,fix echotestcase . . this is a flaky test . it 's from an example and the problem seems to be that it needs to use a dynamic port .
219,new database : date type is currently mapped to pojo   causing error when doing a datasense fetch in studio . date type is currently mapped to pojo   causing error when doing a datasense fetch in studio whenever one of the columns selected is of this type . the error is shown in the screenshot attached .
220,watermark should fail to start if update expression is not an expression . it does n't make sense for the watermakr use case to have constants as update expressions   thus   the user should be warn and the application should not start if such an error occurs . right now   watermark just evaluates that expression as a constant resulting in useless watermark values .
221,can not share caching-connection-factory . so far you can not share caching-connection-factory .
222,selector watermark is not thread safe . when using watermark with a selector   the same selector instance is reused across invocations which means that if two polls are executed concurrently values would be overwritten . right now this is a non issue because watermark only runs on synchronous flows . however   it makes affects code reusability and this will potentially break if we decide to support async watermark or if cloudhub centralised scheduler decides to fire concurrently for different tenants
223,requestcontext.getevent ( ) returns null inside poll . when a flow has a poll as a message source   the requestcontext is only set with the event after the poll listener has been executed . so   if inside the poll there 's a mp depending on the requestcontext   it fails with npe
224,allow mel expressions to safely access nested null properties . consider an object a with property b the expresion `` a.b.c '' will fail if a.b is null . mvel was enhanced to include a null safe get flag that would make that expression return null . change mule to set that mode of operation .
225,new database : defaultvalue of named parameter in sql template should default to null . the defaultvalue of a named parameter in sql template should default to null . the user should not need to specify it in xml or studio .
226,new database : add attribute to specify additional parameters that are appended to jdbc connection . use case -- when connecting to a mysql database   a required connection attribute for datasense to work correctly is : generatesimpleparametermetadata=true this should be surfaced within studio in the advanced tab   as indicated in studio-4591 . however   before this can happen   the < xyz-config ... / > database element
227,fix mtomclienttestcase . . this is a flaky test .
228,mule logs switch to debug level when application uses the salesforce connector . when deploying an application using the salesforce connector   logging level is downgraded to debug . also   all logging goes to the console and no file is generated for the app on the logs folder . the same app running from studio does n't show this behavior . this issue greatly affects performance and readability of the logs
229,clean pom files to support faster build cycles . we follow a build cycle of running tests of increasingly time in steps . in order to improve build times   refactor poms so that features can be disabled when needed . we will settle to standarize on the following switches : -dskipverifications -- > will disable running style checkers   licence checkers   and enforcer plugin -dskipintegrationtests -- > will disable integration tests -dskiparchetypetests -- > will skip archetype tests ( which require archetypes to be already installed ) running unit vs functional tests will not be modified yet and will use our custom surefire plugin
230,soapaction header is not being set in ws consumer for soap 1.2 web services . the web service consumer component is not adding the soap action header when consuming a soap 1.2 web service . example : http : //wsf.cdyne.com/weatherws/weather.asmx ? wsdl if you consume the getweatherinformation operation through the weathersoap port   the soap action header is sent and everything works ok. if you consume the same operation through the weathersoap12 port   the server returns an error indicating that the soap action header is invalid .
231,new database : include generatesimpleparametermetadata as a mysql connection attribute by default . note : this is a temporary solution until mule-7364 is fixed . for 3.5.0-m4   we should include generatesimpleparametermetadata=true by default for mysql connections for datasense purposes .
232,devkit intercepting message processors fail if they are the last element of a chain . then an intercepting message processor is the last in a chain   it 's listener is null . abstractlisteningmessageprocessor   which is the base class for all intercepting message processors created by the devkit   assumes that it will always receive a non-null listener   and fails with a npe on the process ( ... ) methods that will attempt to call method process of the listener . this is reproduced by putting any devkit intercepting component as the last element of a flow or scope   or at unit testing level   if you do n't set the listener but try to use any of the sourcecallback methods .
233,the serviceaddress attribute should be required in ws consumer . the serviceaddress attribute should be required . currently if it is not set   an exception with an error message that is not clear is thrown .
234,nullpointerexception while initialising body . when trying to consume the login operation from https : //www.mulesoft.org/jira/rpc/soap/jirasoapservice-v2   the attached npe is found when ws consumer mp is initialised
235,ws consumer ignores imports in wsdl . i 'm trying to consume the login operation from https : //www.mulesoft.org/jira/rpc/soap/jirasoapservice-v2 . that operation relies on an array type defined in an import . ws consumer fails to detect if that operation has parameters or not because it ignores the import and thus it can not resolve the type
236,expiration does n't work on object store . this simple test reproduce that expiration policies do n't work on the object store . { code } final string token_lautaro = `` lautaro '' ; objectstoremanager osmanager = mulecontext.getobjectstoremanager ( ) ; objectstore < boolean > store = osmanager.getobjectstore ( `` refreshtokenstore ''   false   0   5 * 1000   5 * 1000 ) ; store.store ( token_lautaro   true ) ; thread.sleep ( 6 * 1000 ) ; store.contains ( token_lautaro ) ; //returns true   when it should be false { code } expected behavior is that last line return false but returns true .
237,refreshtokenmanager 's objectstore is not expiring entries . refreshtokenmanager has an expirable object store to make sure that an access token is not refreshed more than one time in the lapse of one minute . that store should expire its entries after one minute but it 's not doing so .
238,logging of message reception is written to domain log instead of app log when sharing http connector . when an http endpoint receives a request it should be logged in application log   but it is logged in domain log .
239,stopping an application that shares an http connector makes the other application endpoint to stop . # deploy the two applications and domain # start mule # curl http : //127.0.0.1:8080/in1 and curl http : //127.0.0.1:8080/in2 returns the expected # rm $ mule_home/apps/app2-anchor.txt # wait for app to get undeployed * error : curl http : //127.0.0.1:8080/in1 fails to connect
240,shared connector mbean appears under application mbean and should be under the domain one . there is currently no mbean for domains   we should have one and shared resources should not be in each individual domain application .
241,add methods to handle schedulers and sub-flows in functionaltestcase . need to add methods to manually : * stop all schedules * run a scheduler on demand * get a sub flow * get all schedulers
242,xslt transformer is vulnerable to xxe . the current implementation of the xslt transformer is vulnerable to the following threat : https : //www.owasp.org/index.php/xml_external_entity_ ( xxe ) _processing currently   there is no way to prevent this since it would require to : * set the property 'javax.xml.stream.issupportingexternalentities ' to false for the xmlinputfactory . currently no property can be set xml factory at all . * set the attribute of the transformer 'usestaxsource ' . when this parameter is false ( default ) the xml factory is ignored . this attribute ca n't be set right now . we need to disable xxe by default and add an attribute which allows it when needed to keep backwards compatibility . steps to reproduce : 1. run the attached configuration . 2. post the following xml to the endpoint http : //localhost:9000/test : < ! doctype spi_doc_type [ < ! entity spi_entity_ref system 'file : ////etc/passwd ' > ] > < root > < elem > & spi_entity_ref ; < /elem > < something/ > < /root > 3. inspect the content of the output and log . it will show the content of the /etc/passwd file . if you do n't have it   you can change it to a file that you have in your filesystem .
243,simplify stored procedure results processing . current stored procedure message processor returns an iterator of statements results ( resultset   output params   etc ) . the reason of that is that we do n't know in advance how many results we are going to obtain from a statement and that many db can not maintain multiple open resultsets . that makes us unable to process resultsets in streaming mode . the problem is that this makes complex to process result both in streaming on/off modes . the proposed improvement is to return different results depending on whether streaming is enabled or not . * streaming false maps of results resultset ( resultset1   resultset2 .. ) list of maps updatecount ( updatecount1   ..... ) integer output parameter ( the name of the parameter ) value will result value of the param map `` resultset1 '' - > resultset `` updatecount1 '' - > updatecount * streaming true iterator of results resultset ( resultset1   resultset2 .. ) iterator of maps updatecount ( updatecount1   ..... ) integer output parameter ( the name of the parameter ) value will result value of the param iterator.next - > resultset iterator.next - > updatecount with this change we loose some consistency because the result changes depending on the value of an attribute   but we gain on simplicity of use for the normal case .
244,mule common 's sources and javadoc are n't deployed to maven repo . mule common 's sources and javadoc are n't deployed to maven repo . maven command should add sources : jar and javadoc : jar . this is important since connector developer may use classes inside those jars and javadoc + sources are a must for usability .
245,add migration guide on ce distribution . add migration guide to the ce distribution
246,cache and provide the streamcloser through the mulecontext . mulecontext should have a method getstreamcloser ( ) : streamcloser so that it 's easy to get it and we have an easy way to cache it
247,webservice consumer does not distinguish between 1.1 and 1.2 services . according to wsdl spec version 1.1 mandates the use of the soapaction header . version 1.2 removes its use . our consumer effectively assumes that the service is of type 1.1 and so attempts to set the soapaction header . this can upset a service of type 1.2 which may return an error like `` server did not recognize the value of http header soapaction : . '' try to consume the service at http : //webservicex.net/ws/wsdetails.aspx ? catid=2 & wsid=74 for example using both the 1.1 and 1.2 request versions . 1.2 will fail . the way to address this in the cxf proxy client was to make sure no soapaction was present in the outgoing request .
248,include the security model used at mule container startup console . part of the changes made for 3.5 included creating a way of definning the security model to be used . the problem is that there 's no feedback to the use on the security model except than the side effects derived from it . make mule container display the security model used when starting up .
249,fixed unused and undeclared dependencies in maven . running mvn dependency : analyze shows a lot of warnings due to unused dependencies and transitive dependencies used directly but undeclared fix the project descriptors of the modules to include needed dependencies and remove unused ones .
250,reduce the number of distributions . mule builds the following distributions : deb-package embedded profiler scripting standalone standalone-light studio - remove the distributions deb-package   profiler and scripting - verify if embedded can be removed and replaced by requiring people to use maven - verify is standalone-light can be removed ( it 's standalone without source code )   or we can change standalone distribution to skip source code - we do publish source code for each artifact so the information is there for ides . - verify if the studio distribution can be removed .
251,new database : streaming is useless if statement fetch size is not configured . streaming mode is intended to avoid outofmemory exceptions when processing big resultsets and the idea is to return an iterator as the result of a query so the user can request records on demand . statements have a fetchsize attribute that indicates the size of the chunk of records that will be returned on each database round trip . for example   fetchsize=5 and a resultset of 20 records will imply 4 chunks of 5 records each . the problem is that when fetchsize is not configured properly   the resultset wo n't be paged and it will be completely loaded into memory   ie : making streaming useless .
252,modify readme file for maven generated mule app using appkit . when creating a new mule application using appkit   the readme generated is outdated . please modify the readme according to this document : https : //docs.google.com/a/mulesoft.com/document/d/1mlr1ixjlz_q_qx9ckmmi9plnt4fnchiawrcejtjbb-y/edit ? usp=sharing
253,stagename generation should be decoupled from flow . right now   the flow is responsible for generating stage names for resources that leave on its pipeline . that makes it imposible for components relying on such names ( such as async ) to exists in a flowconstruct that is not an instance of flow . this should be refactored so that other types of flowconstruct can contain an async block
254,sxc filter router fails due to uninitialised transformer . due to the fix of mule-7390   xmltoxmlstreamreader is now initialisable . sxcfilteringoutboundrouter is using an instance of that transformer without invoking its initialise ( ) method which causes it to fail . sxcfilteringoutboundrouter should properly initialise the transformer
255,echo example fails to start because does not find mule-app.properties . to reproduce # copy echo example zip app from distribution to app directory # run bin/mule # see error in log
256,bulk mode in insert/update/delete message processors should accept collection payloads only . when bulkmode=true and payload is not a collection   insert/update/delete message processors are resolving queries using the default values in the query definition . that causes the execution of the query just once   but with null parameter values . those message processors should accept only collections as payload/source .
257,use mvel dynamic optimizer to evaluate mel expressions . we need to fix a concurrency bug and fix a bug with asm optimizer when assigning new map entries . blocked by : https : //jira.codehaus.org/browse/mvel-302 https : //jira.codehaus.org/browse/mvel-303 https : //jira.codehaus.org/browse/mvel-305
258,db : insert with bulk mode set to true does not return the correct metadata . the new db component is not returning the correct datasense metadata when using the insert operation with the bulk mode set to true . example : insert into table tb1 values ( payload.id   payload.name ) with bulk = true the expected metadata should be list < { id   name } > . today it is returning { id   name }
259,db connector throws npe when advanced-udate fails because connection error . # copy derbyclient-10.9.1.0.jar to lib/user # deploy the attached config # curl http : //localhost:8080/in * expected : curl returns 0 * actual : curl returns { { null ( java.lang.nullpointerexception ) . message payload is of type : string } }
260,session is lost when a message is returned by a jms request-response outbound-endpoint . if you invoke a flow starting with a jms request-response inbound endpoint and within that flow you set a session var   you 'd expect that session var to be propagated back to the outbound endpoint that invoked it . to reproduce the issue please run the test case attached as a maven project .
261,new database : rename advanced-update to execute-ddl . rename advanced-update to execute-ddl . also update the google doc spec
262,xpath function should not have any side effects on the message . when the xpath ( ) function is not given a source parameter   the result of the evaluation is put on the message payload   which is fine . however   when the source parameter is provided   the payload should not be modified because that causes undesired side effects when using the function in filters or choice routers . when a source is provided   the evaluation result should be set on the source itself
263,ws consumer not generating payload for a soap 1.2 web service with no parameters . currently the ws consumer detects if a web service does n't require any input parameters   and in that case ignores the payload and generates automatically the soap body with the request . this is working correctly for soap 1.1 web services but not with 1.2 web services ( in that case the payload is still used as soap body ) .
264,fix vm underlaying implementation . current queues implementation stores the queue content in the transient object store or in the persistent object store if the queue is persistent . we end up with a queue implementation based on a map which does n't make any sense . this also causes performance issues . transactions are not reliable . we do n't have a transaction log for local tx or for xa txs .
265,fix untilsuccessfulwithqueuepersistenceobjectstoretestcase recoversfrompersistedqueue test . this test is testing on some build runs   and it relies on writing a file directly into an object store folder as part of it 's execution .
266,abstractmessagingexceptionstrategy accessing an incorrect even when using requestcontext . when a collection message is sent to a subflow and an exception is raised inside it   the exception is not properly raised because is replaced by a `` java.lang.illegalstateexception : payload was invalidated calling setpayload and the message is not collection anymore . '' instead of keep the original one .
267,fix listschema.groovy script . this script prints lots of errors .
268,new database : code cleanup . clean up xsd schema for database connector . after the schema is published   docs will take the schema and include it in their db reference docs page : http : //www.mulesoft.org/documentation/display/earlyaccess/database+connector+reference included in this jira is also completing support for derby and doing any necessary cleanup there .
269,replace stringbuffer with stringbuilder whenever possible . because mule started on the jdk 1.4 era   there 're a lot of uses of stringbuffer . in most cases   there 's no need for the contention that it generates and it should be replaced with stringbuilder
270,new database : query template 's parameter types are not resolved . all queries in the db connector are defined using a template which is not related to a particular db instance . the template defines the sql query   the type of the query and the parameter definition and default values . parameter defined in the template have an `` unknown '' type   because they are not related to a db instance . because parameters have unknown type   db connector uses an specific jdbc api call to set/get the parameter values . this causes errors when the driver is not able to convert the parameter values to the type expected in the db .
271,bulk update fails using a file as a source when the file was generated in windows due to \r at the end of the line . bulk update fails using a file as a source when the file was generated in windows due to \r at the end of the line . the following works when line endings are unix style but it does not work when line endings are windows style : insert into contact ( id   first_name   last_name   email   last_modified ) values ( 1   'juancito '   'perez '   'juanperez @ gmail.com '   '2014-02-18 12:13:35 ' ) ; insert into contact ( id   first_name   last_name   email   last_modified ) values ( 2   'pedro '   'perez '   'pedroperez @ gmail.com '   '2014-02-11 14:53:21 ' ) ;
272,move simpleloggingtable to core . move simpleloggingtable to core so that it can be reused by other modules without the need to depend on the launcher
273,new database : rename bulk-update to bulk-execute . rename bulk-update to bulk-execute
274,muleprocesscontroller should be able to work in windows . muleprocesscontroller should be able to work in windows
275,echo example mvn build fails because of test error . . # download mule-ee-distribution-standalone-3.5.0-m5-20140325.085332-72.tar.gz # extract # cd examples/echo # mvn test
276,new database : allow users to specify a jdbc parameter types for a query template . in the new database connector   sometimes queries fail if no type is specified for a particular parameter . it should be possible for users to specify the type of parameter in a sql query . this will fix the issue jake morgan ran into on the esb chat around the ibm db2 database . as a first step   we should implement parameter type specification for parameters defined within a query template .
277,new database : remove constraint for generatesimpleparametermetadata in mysql database by always returning generic object . remove constraint for generatesimpleparametermetadata in mysql database by always returning generic object . in general   we should not have any database come configured ootb with a custom connection attribute .
278,new database : change behavior of streaming within stored procedure . instead of having what is described in mule-7391   when streaming=true   still return a map of results   but have iterators within each resultset returned .
279,monitored objectstores should behave consistently . monitored object stores do not behave consistently : * partitionableexpirableobjectstore instances trim to max size by applying a least recently used algorithm . however   monitoredobjectstorewrapper does it by applying a last recently used algorithm . * additionally   it is allowed to create objects stores that are : completely unbounded   ttl bounded only   ttl and size bounded   but you ca n't create one that 's size bounded only . expected behavior should be : * managed object stores always trim to size in a consistent way using lru . * i can have an objectstore that 's bounded size wise but unbounded ttl wise
280,xpath expression language - dom4j creates separate text-nodes . h2 . overview * 1 - xml document * { code : xml } < sswa2smtp > < operationtype > email < /operationtype > < toaddress > prachurya.barua @ bt.com < /toaddress > < subject > voice circuit details < /subject > < content > hi < /content > < /sswa2smtp > { code } * 2 - message property set using an xpath expression * { code : xml } < add-message-property key= '' toaddressesoldway '' value= '' # [ xpath : / * /toaddress/text ( ) ] '' / > { code } * 3 - other properties set using mel xpath function * { code : xml } < add-message-property key= '' toaddressesxpath '' value= '' # [ xpath ( '/ * /toaddress ' ) .text ] '' / > < add-message-property key= '' toaddress '' value= '' # [ xpath ( '// * [ local-name ( ) =\'toaddress\ ' ] ' ) .getstringvalue ( ) ] '' / > < add-message-property key= '' subjectxpath '' value= '' # [ xpath ( '/ * /subject ' ) .text ] '' / > { code } * 4 - an array is assigned to the toaddressesoldway property * session scoped properties : subjectxpath=voice circuit details toaddress=prachurya.barua @ bt.com * { color : red } toaddressesoldway= [ prachu   rya.barua @ bt.com ] { color } * toaddressesxpath=prachurya.barua @ bt.com h2 . explanation the method * characters * of class * org.dom4j.io.saxcontenthandler * can generate multiple text nodes if * mergeadjacenttext * property is set to false . an excellent explanation of the reasons of why this happen can be found [ here|http : //www.mail-archive.com/dom4j-user @ lists.sourceforge.net/msg02690.html ] . the effect of this problem is that certain xpath expression   most notably related to the use of the text ( ) selector   can return an array of text nodes instead of a single text node . this can lead to incomplete text values or wrong comparisons . this problem was discovered while dealing with a message properties transformer   where new message properties are added using xpath expressions to retrieve some values from an xml payload ( this payload is converted to a dom document by means of the xmltodomdocument transformer ) . this problem also affect the expression filter when using an xpath evaluator ( uncomment the expression-filter element in the attached mule configuration file to see it in action ) . references to the dom4j issue are reported in [ dom4j case # 117 - problem with xpath and retrieving text |http : //sourceforge.net/p/dom4j/bugs/117/ ? page=0 ] please find attached the custom transformer that shows how to set the mergeadjacenttext property   the source code of xerces 2.9.1 and the xerces ' binaries built with debugging information enabled ( the binaries commonly distributed by apache xerces project have the debugging info stripped out ) . for the customxmltodomdocument transformer to work   uncomment the custom-transformer element in the attached mule configuration file . please take notice that the return class must be set to org.dom4j.document . h2 . workarounds * 1 - use any of the following equivalent xpath expressions : * { code } # [ xpath : /child : :sswa2smtp/child : :toaddress [ text ( ) ] ] # [ xpath : /sswa2smtp/toaddress [ text ( ) ] ] # [ xpath : /child : : * /toaddress [ text ( ) ] ] # [ xpath : / * /toaddress [ text ( ) ] ] # [ xpath : /descendant : :toaddress [ text ( ) ] ] # [ xpath : string ( / * /toaddress ) ] '' # [ xpath : //toaddress ] { code } * 2 - use the attached customxmltodomdocument transformer : * { code : xml } < custom-transformer class= '' com.mulesoft.support.customxmltodomdocument '' doc : name= '' customxmltodomdocument '' returnclass= '' org.dom4j.document '' / > { code }
281,remove deprecated methods on transformer interface . remove deprecated methods and replace uses
282,all test log4j.properties should have the rootlogger at warn level . many modules define their own log4j.properties   but some set the rootlogger to info which becomes too verbose . they should always be set to warn
283,add profile for system tests . we need a profile for system tests ( aka standalone tests )   execute only when profile system is active .
284,add extension point in mulelockfactory . mulelockfactory delegates into a lockprovider to actually build the lock . upon initialisation   it grabs such provider from the registry . an extension point is needed so that a provider can be passed into it before initialisation . if such provider is not given   then it fallbacks to the current behavior of taking it from the registry
285,create connector aware pagingdelegate concept . create the concept of connection aware and process aware pagingdelegate for cases in which a connection manager pagingdelegate is needed
286,registered transformers in bootstrap.properties wo n't be found when the key is different than transformer . { x } . registered transformers in bootstrap.properties wo n't be found when the key is different than transformer . { x } if you define your transformer in the bootstrap.properties file as footransformer=org.mule.bar.footransformer this transformer wo n't be found by using the lookuptransformer/s methods . and therefore a failure will happen if the transformation is needed .
287,handles .net ? singlewsdl wrong . if http : //demo.bromose.eu/demoservice.svc ? singlewsdl is used   the flow gets a 400 response code . http : //demo.bromose.eu/demoservice.svc ? wsdl is used   the flow works
288,improve mule test cases to use a temporary folder for each test case . improve mule test cases so each of them use a temporary folder for the application working directory . this will probably reduce flakiness of test cases storing information in disk and also will allow to run test in parallel in the future .
289,add a tool for matching exceptions by its stack trace . sometimes it 's needed to know if two exceptions have the same stack trace . to do this   we need to be able to compare the full stack traces but discarding the exception ( and its causes ) messages since they may contain invocation specific data . we need a tool that can generate an exception 's full stack trace without any messages
290,test cases override defaultobjectstorefactorybean static delegate causing other tests to fail when split and aggregate operations are used . . test cases override defaultobjectstorefactorybean static delegate causing other tests to fail when split and aggregate operations are used .
291,upgrade http transport to use httpclient v4 for improved outbound performance . profile+tune http proxy based on findings from perf-65
292,ws consumer fails when there is an invocation property `` operation '' defined . when a message contains an invocation property called `` operation '' and a ws consumer is present   the execution of the ws consumer fails because cxf uses the value of the `` operation '' variable .
293,provide a way to log the soap envelope that is being sent in ws consumer . currently it is hard to debug ws consumer because there is no way to log the soap envelope that is being sent . provide a way to do this and consider how to integrate it with studio debugger .
294,exception thrown by one-way outbound endpont in a catch es causes infinite loop . if a system exception is thrown inside a catch exception strategy   and the flow that references it is asynchronous   and infinite loop is created   the application will retry to execute the exception strategy infinite times . i 've attached to the jira a test case that reproduces the issue
295,upgrade jython library to latest version . as part of upgrading 3rd party libraries   we should upgrade jython . support has helped a few customers do this : see https : //na6.salesforce.com/5008000000u2r8d ? srkp=500 & srpos=0
296,transactional queue recovery fails when recovery queue has transient queue config . . when executing local tx recovery and there 's a transient config for a recovery queue mule fails with a notimplementedexception
297,mel behavior is not consistent betsween maps and pojos for proeprty access . with changes made for 3.5   mel was changed so that property access for maps did n't fail ( to be consistent with value access though map [ key ] syntax ) . this caused an inconsistency   as the same expression a.b will fail or return null depending on the actual type of a. in order to be consistent   we have decided to make property access return null in all cases . we will also revert back the changes that implied null safe property access by default   and keep asking users to use the . ? explicitely ) .
298,synchronous until-successfull waits in milliseconds instead of seconds . when in synchronous mode   the until successful is waiting for the exact value of the seconds-between-retries attribute . expected : a value of 10 on a synchronous until-successful waits ten seconds between each retry obtained : it only waits 10 milliseconds
299,deprecate until-successful 's secondsbetweenretries in favor of millisbetweenretries . seconds between retries is fine for the asynchronous case   but when doing a synchronous wait   there 're cases in which just a millisecond wait is required . this enhancement consists on : * deprecate secondsbetweenretries attribute . using it results in a warning message in the logs . it is to be mark as deprecated in the java code and the xsd * add a millisbetweenretries property which is the new correct way of using the component * for backwards compatibility   setting secondsbetweenretries will implicitly set millisbetweenretries with an equivalent value * setting both attributes at the same time will result in exception
300,parameterized query broken when cdata is preceded by a new line . parameterized query can not be parsed when it contains a cdata element that is preceded by a new line . org.mule.api.config.configurationexception : unexpected exception parsing xml document from url [ file : /users/pablokraan/devel/workspaces/mulefull/mule/modules/db/target/test-classes/integration/template/cdata-template-query-config.xml ] ; nested exception is org.mule.module.db.internal.parser.querytemplateparsingexception : sql text can not be empty ( org.mule.api.lifecycle.initialisationexception ) org.mule.config.builders.abstractconfigurationbuilder.configure ( abstractconfigurationbuilder.java:49 ) org.mule.config.builders.abstractresourceconfigurationbuilder.configure ( abstractresourceconfigurationbuilder.java:69 ) org.mule.context.defaultmulecontextfactory $ 1.configure ( defaultmulecontextfactory.java:84 ) org.mule.context.defaultmulecontextfactory.docreatemulecontext ( defaultmulecontextfactory.java:217 ) org.mule.context.defaultmulecontextfactory.createmulecontext ( defaultmulecontextfactory.java:76 ) org.mule.tck.junit4.abstractmulecontexttestcase.createmulecontext ( abstractmulecontexttestcase.java:234 ) org.mule.tck.junit4.abstractmulecontexttestcase.setupmulecontext ( abstractmulecontexttestcase.java:143 ) sun.reflect.nativemethodaccessorimpl.invoke0 ( native method ) sun.reflect.nativemethodaccessorimpl.invoke ( nativemethodaccessorimpl.java:39 ) sun.reflect.delegatingmethodaccessorimpl.invoke ( delegatingmethodaccessorimpl.java:25 ) org.junit.runners.model.frameworkmethod $ 1.runreflectivecall ( frameworkmethod.java:44 ) org.junit.internal.runners.model.reflectivecallable.run ( reflectivecallable.java:15 ) org.junit.runners.model.frameworkmethod.invokeexplosively ( frameworkmethod.java:41 ) org.junit.internal.runners.statements.runbefores.evaluate ( runbefores.java:27 ) org.junit.internal.runners.statements.runafters.evaluate ( runafters.java:31 ) org.junit.rules.testwatcher $ 1.evaluate ( testwatcher.java:46 ) org.junit.internal.runners.statements.failontimeout $ 1.run ( failontimeout.java:28 ) caused by : org.mule.api.lifecycle.initialisationexception : unexpected exception parsing xml document from url [ file : /users/pablokraan/devel/workspaces/mulefull/mule/modules/db/target/test-classes/integration/template/cdata-template-query-config.xml ] ; nested exception is org.mule.module.db.internal.parser.querytemplateparsingexception : sql text can not be empty org.mule.registry.abstractregistry.initialise ( abstractregistry.java:113 ) org.mule.config.spring.springxmlconfigurationbuilder.createspringregistry ( springxmlconfigurationbuilder.java:133 ) org.mule.config.spring.springxmlconfigurationbuilder.doconfigure ( springxmlconfigurationbuilder.java:88 ) org.mule.config.builders.abstractconfigurationbuilder.configure ( abstractconfigurationbuilder.java:43 ) ... 17 more caused by : org.springframework.beans.factory.beandefinitionstoreexception : unexpected exception parsing xml document from url [ file : /users/pablokraan/devel/workspaces/mulefull/mule/modules/db/target/test-classes/integration/template/cdata-template-query-config.xml ] ; nested exception is org.mule.module.db.internal.parser.querytemplateparsingexception : sql text can not be empty org.springframework.beans.factory.xml.xmlbeandefinitionreader.doloadbeandefinitions ( xmlbeandefinitionreader.java:412 ) org.springframework.beans.factory.xml.xmlbeandefinitionreader.loadbeandefinitions ( xmlbeandefinitionreader.java:334 ) org.springframework.beans.factory.xml.xmlbeandefinitionreader.loadbeandefinitions ( xmlbeandefinitionreader.java:302 ) org.springframework.beans.factory.support.abstractbeandefinitionreader.loadbeandefinitions ( abstractbeandefinitionreader.java:174 ) org.mule.config.spring.muleartifactcontext.loadbeandefinitions ( muleartifactcontext.java:106 ) org.springframework.context.support.abstractrefreshableapplicationcontext.refreshbeanfactory ( abstractrefreshableapplicationcontext.java:130 ) org.springframework.context.support.abstractapplicationcontext.obtainfreshbeanfactory ( abstractapplicationcontext.java:537 ) org.springframework.context.support.abstractapplicationcontext.refresh ( abstractapplicationcontext.java:451 ) org.mule.config.spring.springregistry.doinitialise ( springregistry.java:86 ) org.mule.registry.abstractregistry.initialise ( abstractregistry.java:105 ) ... 20 more caused by : org.mule.module.db.internal.parser.querytemplateparsingexception : sql text can not be empty org.mule.module.db.internal.parser.simplequerytemplateparser.doparse ( simplequerytemplateparser.java:101 ) org.mule.module.db.internal.parser.simplequerytemplateparser.parse ( simplequerytemplateparser.java:61 ) org.mule.module.db.internal.config.domain.query.querytemplatebeandefinitionparser.parseparameterizedquery ( querytemplatebeandefinitionparser.java:154 ) org.mule.module.db.internal.config.domain.query.querytemplatebeandefinitionparser.doparse ( querytemplatebeandefinitionparser.java:67 ) org.mule.config.spring.parsers.abstractmulebeandefinitionparser.parseinternal ( abstractmulebeandefinitionparser.java:297 ) org.springframework.beans.factory.xml.abstractbeandefinitionparser.parse ( abstractbeandefinitionparser.java:59 ) org.springframework.beans.factory.xml.namespacehandlersupport.parse ( namespacehandlersupport.java:73 ) org.mule.config.spring.mulehierarchicalbeandefinitionparserdelegate.parsecustomelement ( mulehierarchicalbeandefinitionparserdelegate.java:85 ) org.mule.config.spring.mulehierarchicalbeandefinitionparserdelegate.parsecustomelement ( mulehierarchicalbeandefinitionparserdelegate.java:127 ) org.springframework.beans.factory.xml.beandefinitionparserdelegate.parsecustomelement ( beandefinitionparserdelegate.java:1428 ) org.springframework.beans.factory.xml.defaultbeandefinitiondocumentreader.parsebeandefinitions ( defaultbeandefinitiondocumentreader.java:190 ) org.mule.config.spring.mulebeandefinitiondocumentreader.parsebeandefinitions ( mulebeandefinitiondocumentreader.java:51 ) org.springframework.beans.factory.xml.defaultbeandefinitiondocumentreader.doregisterbeandefinitions ( defaultbeandefinitiondocumentreader.java:140 ) org.springframework.beans.factory.xml.defaultbeandefinitiondocumentreader.registerbeandefinitions ( defaultbeandefinitiondocumentreader.java:111 ) org.springframework.beans.factory.xml.xmlbeandefinitionreader.registerbeandefinitions ( xmlbeandefinitionreader.java:493 ) org.springframework.beans.factory.xml.xmlbeandefinitionreader.doloadbeandefinitions ( xmlbeandefinitionreader.java:390 ) ... 29 more
301,avoid writing app log entries in container log file when not using an specific log4j config file for the app . . when a log4j config file is not attached to an app   a default file appender is created but the app is still sending its output to the container log file . app default logging should only send app logs to default app log file .
302,encoded characters not working when using expressions for dynamic endpoints . when using encoded characters ( e.g . % 40 for @ ) in conjunction with expressions it fails . for example this works : < sftp : outbound-endpoint user= '' testuser '' password= '' mule % 40123 '' path= '' /users/testuser/tmp/ '' host= '' localhost '' port= '' 22 '' outputpattern= '' file.txt '' / > but this does n't : < sftp : outbound-endpoint user= '' testuser '' password= '' mule % 40123 '' path= '' /users/testuser/tmp/ # [ header : targetsubdir ] '' host= '' localhost '' port= '' 22 '' outputpattern= '' file.txt '' / > attached there 's a project with a test case to reproduce this problem .
303,create ootb database connector for ibm db2 . create ootb database connector for ibm db2
304,mule is still creating old default domain classloader instead of using new one . mule still has the lib/shared/default folder . this causes to use the old domain class loader infrastructure instead of the new one . this folder must be removed and a default folder must be created in domains .
305,application fails to start when having 16 or more connectors with asynch reconnection that fail to connect . the problem is that the work manager used for reconnection is the one defined inside the defaultmulecontext . this work manager is not configurable so it can handle 16 threads at most . the problem is that when a reconnection fails all the time uses 1 of the threads . so if you have more than 16 reconnections going on the number 17 will never get the chance to execute .
306,migrate snapshot repositories to mulesoft.org . migrate snapshot repositories from codehaus to mulesoft.org repositories
307,deprecate jdbc transport . due the creation of the new db module   we should deprecate the old jdbc transport as studio has already done .
308,change derby config to use embedded driver by default . current version of derby-config element uses standalone derby driver by default   but derby is mostly used to make quick tests   so using the embedded driver is a better choice .
309,lifecycle does not start a queuemanager in the right order . queuemanager must be started before any flow . that 's not happening for all queuemanager   it 's only happening for transactionalqueuemanager
310,add ootb support in new db connector for truncate operation . ootb users have to use a delete statement if they need to purge a table   which is way less efficient than truncate . supporting truncate is important for our etl story .
311,mule build reactor is building embedded distribution before other modules . mule embedded distribution is being build before modules and transports that are in it   so   build is failing .
312,persistent queue logs and data remove after shutdown . after mule shutdown mule queues logs and data are being removed . the problem is that dispose of the queue manager is removing everything . there 's a another issue to solve which is that during undeploy of an app   the app data store in .mule/app-name folder is not being cleared . there seems to be two kind of dispose needed . one for undeploy of an app . and another just for shutting down the server .
313,possible contention on defaultstreamcloserservice . . when running a batch job ( ee feature )   it was seen that periodically the threads gets locked as shown into the given stack-trace . we should add a way to improve this with a cache or another work-arround .
314,aggregator result has invalid session variables values . when using a persistent store in an aggregator the session variables values do not have the latests value after the message aggregation . we should prioritise latest stored event session variables values over the ones provided by previous events . if not when execution inside a collection splitter and aggregator is synchronous the merge of the mule events results in a session with not the latests values .
315,oauth regression - rc1 oauth connectors not working at all . i found the issue in the org.mule.security.oauth.util.httputilimpl # post ( string   string ) method . the refactor made to improve the exception error ( mule-7521 ) modified the way of working with the outputstreamwriter ( look for `` out '' variable ) . after doing the # write ( string ) there is no flush ( )   hence the stream is not filled with the api response   and the response is always an error . the code is : { code } // .. try { out = new outputstreamwriter ( conn.getoutputstream ( ) ) ; out.write ( body ) ; int responsecode = conn.getresponsecode ( ) ; // .. } // .. { code } when it should be { code } // .. try { out = new outputstreamwriter ( conn.getoutputstream ( ) ) ; out.write ( body ) ; out.flush ( ) ; //magic happens here int responsecode = conn.getresponsecode ( ) ; // .. } // .. { code } this should solve all the issues with oauth support for devkit connectors .
316,improve httputiltestcase . httputiltestcase passes regardless httputilimpl flushes the output stream or not   which caused a bug . that test/functionality should be improved
317,design a stable api so that extensions can be added to the esb . this involves designing a stable api that can be used to create esb extensions . the initial scope of extensions will be operation blocks that represent an arbitrary operation on the payload . the goal of this api is to isolate any such extension as much as possible from the esb classes   allowing to specify operations at an abstract level   that can be automatically mapped to xml constructs in an automated fashion   and provides enough metadata so that both the runtime and tooling can leverage the new operations without further work . this task is exploratory . the scope is to define a small subset of the api   and determine the registration and consumption mechanism as a proof of concept . note that this api has two different parts   one consumed by extension modules   and one consumed by the esb/tools   and we look to provide api stability on both surfaces .
318,lifecycle is inconsistent across registries . because the lifecycle manager handles individual objects instead of the mule context as a whole   there 're differences in how the life cycle is applied to objects in the transientregistry in opposition to the ones in the springregistry : * objects in the transientregistry have a correct life cycle * objects in the spring registry that were registered by mule 's bootstrap   receive the start and stop phases correctly . they do n't receive the dispose phase and the init one is invoked by spring directly as an init-method   not through the life cycle execution . * because default spring registry objects do n't receive the init through standard life cycle phase   they can not be started before the transientregistry * objects manually added to the spring registry by an app   do n't receive the initialise nor dispose phases * lifecycle is applied on spring registry objects once they 're all available in the application context . however   objects in the transientregistry get their lifecycle as they 're registered   making it impossible for component a to reference component b if a is not registered first . this issue greatly depends on mule-7587
319,vm transactions should support multithreading . vm transactions have as a known limitation around concurrency . only the thread that started the transaction should be able to use it and/or close it . for highly concurrent use cases   it 'd be great if scenarios like the following would be supported : thread 1 : opens transaction a and polls one element from it thread 2 : opens transaction b over the same queue and polls one element from it thread 2 : writes to the queue in the context of transaction a thread 1 : writes to the queue in the context of transaction b thread 2 : commits/rollbacks the transaction a thread 1 : commits/rollbacks the transaction b
320,mule fails to start if untilsuccessful has a persistent object store with stored events . consider the attached application . the mule event is persisted successfully when entering the until-successful block but upon an unexpected restart of the mule instance   the message could not be de-serialized again and an error in the logger is displayed with the following line : error 2014-05-07 19:02:19 572 [ wrapperlistener_start_runner ] org.mule.util.store.partitionedpersistentobjectstore : could not restore partition under directory /users/juancavallotti/documents/muleee/ee/mule342/.mule/objectstores/objectstore/d036c03b-d630-11e3-a6c7-ef75e8a7e5bc this happens because when the object store is open   it tries to cache the keys . because the muleevent has a reference to its owning flow construct   a circular reference is created since the deserialized event tries to fetch the flow construct which triggered its loading . steps to reproduce : run the attached app and an activemq instance . stop activemq place a non-empty file in /tmp/test/inbound/1 ( you may configure a more convenient folder ) . stop mule start activemq start mule observe the logger line observe that the message that should have been recovered from the persistent object store is not delivered to the broker . expected behavior : persistent object store should lazily cache its entry upon its first use . workaround : temporal workaround until this gets fixed is to set the lazy-init property to true in the spring bean that creates the object store
321,scatter-gather throws illegalstateexception when using only one message processor . scatter-gather throws illegalstateexception when using only one message processor how to reproduce : deploy attached app and hit http : //localhost:8081
322,scatter-gather throws exception when using a one-way outbound endpoint . . using a one-way outbound endpoint in a scatter-gather with no message processors after it causes an exception . tried vm and http . i 'm attaching the configuration to reproduce the issue . using a request reply one or adding a message processor after the endpoint fixes it .
323,database bulk operations do n't work with objects that do n't implement collection . the update bulk operation of the database module fails with collections that implement collection but not iterable . this causes a problem with connector query results which are usually iterable or iterator to allow lazy loading results   yet not implementing the collection interface .
324,scatter gather should require at least two routes . scatter gather should fail at start time it it doens't have at least two routes configured . having only one route does n't make sense for a parallel multicast .
325,add gpg signature to artifacts . need to add gpg signature to deploy to maven central
326,new database : add support for user defined data types . add support for user defined data types within new database connector .
327,mel expression using dot notation . 'variable-name ' always returns null if first value at first access is null   even after value changes . the following three logs : < logger message= '' x-user-id ( mel [ ] ) = # [ message.inboundproperties [ ' x-user-id ' ] ] '' / > < logger message= '' x-user-id ( mel . ) = # [ message.inboundproperties . ' x-user-id ' ] '' / > < logger message= '' x-user-id ( old ) = # [ header : inbound : x-user-id ] '' / > consistently work for 1st and 3rd . the second one using the dot notation consistently fails forever if first invocation fails after server restart and consistently succeeds forever if first invocation succeeds after server restart .
328,database row handler should use column aliases instead of column names . every resultset in the database connector is processed using insensitivemaprowhandler to covert each resultset 's row into a map . map is created using each column 's name as the key and this creates a problem when a query containg multiple columns with the same name . the solution on sql side is to use aliases to differentiate each column   so the database row mapping must use the column aliases instead of the names .
329,randomaccessfilequeuestore.getlength ( ) is slow . . the problem is the use of randomaccessfile.getlength ( ) inside randomacccesfilequeuestore .
330,define unified way to define the exception handler in execution scopes in mule . currently exception handler is defined by : - flow - transactional scope - exception strategies - outbound endpoint ( when using laxasync ) due bug fix . in some places the exception handler is retrieve by doing : event.getflowconstruct ( ) .getexceptionlistener ( ) ( asyncinterceptingmessageprocessor ) . this is bad design because the muleevent should not have a reference to the flowconstruct and the exception handler should not be retrieved from the muleevent . the muleevent contains dynamic information related to the current message while the exception handler must be defined statically by the flow configuration . the recommendation is that each scope or execution block ( new threads running part of the flow ) should have statically defined the exception handler to use .
331,review mule logging consistency and analyse the effort to make it consistent and improve underlying technology . we need to review our logs implementation
332,fix jmx agent tests in management module . as we changed the management module to run all the tests in the same jvm   a couple of tests failed becuase they create an rmi registry on a fixed port and interfere with each other . change those tests so that they use a dynamically allocated port and run fine on the same jvm instance
333,closerservice generates debug log message without checking logger state . if no closer is found for a stream   the streamcloserservice logs a message with debug level   even if the logger is not in debug mode . additionally   that message contains the stream which in some cases can result in the stream being consumed and/or the thread blocking   as shown in the attached log
334,copyonwritecaseinsensitivemap keyiterator class implementation issue . due to the way the keyiterator class is implemented   calling next ( ) followed by remove ( ) removes not the element the iterator `` is on ''   but the following one . in line # 181 of the class copyonwritecaseinsensitivemap   the array is evaluated to the original index   but any subsequent call to remove is performed on the incremented index .
335,add capabilities concept into extension api . add the concept of capabilities and capable objects into the extensions api . an object is capable if it provides optional support for additional capabilities . a capability is identified by a class type . implementations are not required to implement any capability at all   even if they support this interface . capabilities are used to provide a future-proof path to incorporate changes that may otherwise break backwards compatibility .
336,muleprocesscontroller default timeout is wrongfully configured . by default it 's 0   and it should be something like 60000 .
337,implement http outbound performance improvements . we need to implement the changes needed to improve http outbound performance based on the performance outcome for the proxy scenarios .
338,oom when recovering vm transactions . when a transactional persistent queue is recovered and the size of the queue does n't fit into memory then there 's an oom exception trying to recovery the pending transactions .
339,add introspection capabilities in the extensions api . introspection is the capability of an extension to be automatically discovered and described by mule
340,upgrade build plans to java 7 for compilation and test mule . we are dropping java 6 support in mule 3.6   so we need to migrate our build plans to compile and test mule to run on java 7. we also need to remove the java 6 builds .
341,create java 8 test build . we need to create builds to run the test suite of mule on java 8. this should be oracle and open jdk . review if we should use ibm jdk 8 beta or wait till it 's final . - create build for mule common with oracle jdk 8 ( we need to run mule common tests with jdk 8 ) - create builds for ce and ee with oracle jdk 8 - create builds for ce and ee with open jdk 8 - optionally create builds for ce and ee with ibm jdk 8 ( currently in beta afaik ) consider the possibility of having mule builds parametrized and configure java 7 as the default jdk and override with java 8 .
342,spike on new http transport underlying technology . we need to do a spike   and validate which underlying technology should be used for the new http transport .
343,vm persisted messages disappear after an unexpected shutdown . . after an unexpected shutdown   the vm queues continues processing but most messages are lost . reproduce : - deploy the app - send and http request to : http : //localhost:8080/vm with the required headers   as an example : ammount=10000   recordsize=2k - wait for `` all persisted '' message shown in the app logs . - kill the instance using kill -9 pid   using the one returned by `` ps -ax | grep 'mule.home= ' | grep -v grep | awk ' { print $ 1 } ' ''   not mule_home/bin/mule status wich returns the tanuki pid . - mule will automatically restart . - check app logs to see what is processed . expected : only a few messages are lost   the countdown should get to 1. actual : only a few messages finishes processing after the restart .
344,dynamicclassloader leaking classloaders . apparently dynamicclassloader is holding a strong reference to muleapplicationclassloader when it should not . this is the gc root path for the leaked muleapplicationclassloader instance . { code } org.mule.module.launcher.muleapplicationclassloader parent of org.mule.mvel2.optimizers.dynamic.dynamicclassloader classloader of org.mule.mvel2.optimizers.dynamic.dynamicoptimizer [ 603 ] of java.lang.object [ 5120 ] elementdata of java.util.vector classes of org.mule.module.reboot.mulecontainersystemclassloader contextclassloader of java.lang.thread [ stack local   thread ] `` mule.app.deployer.monitor.1.thread.1 '' native id : 0x6403 { code } to reproduce deploy any mule app   then undeploy it and check that there is a leaked muleapplicationclassloader instance .
345,implement plan to improve surfacing of schema reference in documentation . implementation of schema documentation modernisation plan articulated here : https : //docs.google.com/a/mulesoft.com/document/d/1ply1bbrqrrzltz-o8pku9wn1ifemdgvwkodabskrf6s/edit
346,org.mule.api.security.tls.tlsconfiguration # getsslcontext ( ) no longer visible . org.mule.api.security.tls.tlsconfiguration # getsslcontext used to have public visibility in mule 3.4.x and was being used from mule extensions . in 3.5.0   it 's visibility was reduced to private breaking backwards compatibility with those extensions . the method must be restored as public
347,tls-default.conf entries are ignored sometimes . when creating a socketfactory for a https transport   the protocols declared in tls-default.conf are intersected with the default ones from the jdk . because of this   protocols like sslv2hello can not be enabled when running mule 3.5.0 in jdk7 . what should actually happen is that those protocols should be intercepted against the supported ones .
348,databasemuleartifacttestcase broken after maven changes . databasemuleartifacttestcase was broken by the manven changes related to not forking the jvm anymore when running test .
349,mule frezes with 100 % cpu utilization if accessing property of non-existing property . if flowvars contains no element ` user ` then expression ` # [ flowvars [ 'user ' ] [ 'name ' ] ] ` will freeze mule ( thread ) eating your cpu @ 100 % .
350,deploymentservice api modification for domains . as a mule user i would like to : * deploy a domain with mule api * undeploy a domain and all its apps * redeploy a domain and update all the apps
351,enable dependency injection on registry elements . enable dependency injection ( leveraging jsr 330 annotation as much as possible ) in order to replace lifecycle calls and xxxaware interfaces design a way for objects that contain other objects that must undergo though di that does n't depend on the parent object calling or delegating on each lfecycle hook to the child elements . this will bring either spring   guice or dagger as a core dependency . keep that dependency as small as possible ( i.e . bringing as little modules as needed ) . objects should not use container specific annotations ( i.e . spring annotations ) - when a non jsr330 annotation is needed   create one specific for mule and use it .
352,mule does not propagate system properties when started with `` restart '' command . bin/mule restart -m-ddefault.port=1337 expected : app deployed what happens : deployment error because system properties are not propagated .
353,give extensions api the ability to automatically provide xml config support . we need a new component in the extensions api which uses the introspection api already developed and : hooks from the compile phase and automatically generates the xsd provides a generic beandefinitionparser capable of parsing any extension
354,revise xml libraries bundled in mule in a jdk7 environemnt . as we bumped the required jdk version to java 7   it may be necessary to revise if these libraries are needed at all ( as they are included in the jdk ) : jaxb-api-2.1.jar jaxb-impl-2.1.9.jar jaxb-xjc-2.1.9.jar
355,create way to process jms messages in a guaranteed order without needing to override a java class . several customers want to know how they can enable message sequencing in muleesb ( making sure that inbound messages are delivered in the same order to the various endpoints in a flow ) . using the resequencer is not a pattern as the number of messages could be infinite . there is currently no way to do this in a cluster . you can however extend the message receiver in the jms transport . albin did this for boeing and they seemed satisfied with the solution . https : //github.com/albinkjellin/jms-single-consumer we should implement this   or a more elegant version of it   in the product itself .
356,com.arjuna.ats.arjuna.exceptions.objectstoreexception when executen esireferenceimplementation on windows . how to verify : execute in windows : mvn clean verify -fae -psystem -dmule.timeout=120000 -dwmq.host=wmq7vm.mulesoft.com -dwmq.port=1422 -dwmq.queue.manager=qm_qa -dwmq.queue.in=in -dwmq.queue.out=out -dwmq.username=mqm -dwmq.password= -dtest.timeout.sec=60000 -nsu on directory tests/system/referenceimplementation and check mule logs ( log into 172.16.20.25 and go to c : \ee\tests\system\referenceimplementation ) this worked before the fix made on https : //www.mulesoft.org/jira/browse/mule-7590
357,fix flacky test untilsuccessfultestcase.testpermanentdeliveryfailuredlq . fails on ci with message : error message wanted but not invoked : outboundendpoint.process ( < any > ) ; - > at org.mule.routing.untilsuccessfultestcase.testpermanentdeliveryfailuredlq ( untilsuccessfultestcase.java:193 ) actually   there were zero interactions with this mock . stacktrace wanted but not invoked : outboundendpoint.process ( < any > ) ; - > at org.mule.routing.untilsuccessfultestcase.testpermanentdeliveryfailuredlq ( untilsuccessfultestcase.java:193 ) actually   there were zero interactions with this mock . org.mule.routing.untilsuccessfultestcase.testpermanentdeliveryfailuredlq ( untilsuccessfultestcase.java:193 ) sun.reflect.nativemethodaccessorimpl.invoke0 ( native method ) sun.reflect.nativemethodaccessorimpl.invoke ( nativemethodaccessorimpl.java:57 ) sun.reflect.delegatingmethodaccessorimpl.invoke ( delegatingmethodaccessorimpl.java:43 ) java.lang.reflect.method.invoke ( method.java:606 ) org.junit.runners.model.frameworkmethod $ 1.runreflectivecall ( frameworkmethod.java:44 ) org.junit.internal.runners.model.reflectivecallable.run ( reflectivecallable.java:15 ) org.junit.runners.model.frameworkmethod.invokeexplosively ( frameworkmethod.java:41 ) org.junit.internal.runners.statements.invokemethod.evaluate ( invokemethod.java:20 ) org.junit.internal.runners.statements.runbefores.evaluate ( runbefores.java:28 ) org.junit.internal.runners.statements.runafters.evaluate ( runafters.java:31 ) org.junit.rules.testwatcher $ 1.evaluate ( testwatcher.java:46 ) org.junit.internal.runners.statements.failontimeout $ 1.run ( failontimeout.java:28 ) standard output ================================================================================ = testing : testpermanentdeliveryfailuredlq = ================================================================================
358,add a way to configure default threading profile . default threading profile configuration is hardcoded in org.mule.api.config.threadingprofile . having a way to configure this value per server will be useful to set a different default threading profile per distribution .
359,db connector fails to create a pooled connection when db driver is deployed in the mule application . db connector uses c3p0 in order to provide connection pooling . when a pooling profile is used   the driver must be deployed on the mule server   otherwise the pool will be unable to create connections . to reproduce   create an application with the attached config and copy the mysql driver inside the app/lib folder . then hit http : //localhost:8081 and get the attached exception .
360,provide support for redhat kie technologies ( jbpm and drools version 6 ) . create a new module to provide support for drools and jbpm version 6 .
361,optimize default wrapper.conf . for every perf run i made   i turn on verbose gc   set it to 2gb   and occasionally switch it to cms gc . let 's consider putting these in . we could add them in and comment them out by default . e.g . wrapper.java.additional.4=-xx : +printgcapplicationstoppedtime wrapper.java.additional.5=-xx : +printgcdetails wrapper.java.additional.6=-xx : +printgcdatestamps wrapper.java.additional.7=-xx : +printtenuringdistribution wrapper.java.additional.8=-xx : errorfile= % mule_home % /logs/err.log wrapper.java.additional.9=-xloggc : % mule_home % /logs/gc.log wrapper.java.additional.10=-xx : +heapdumponoutofmemoryerror wrapper.java.additional.11=-xx : +alwayspretouch wrapper.java.additional.12=-xms2048m wrapper.java.additional.13=-xmx2048m # wrapper.java.additional.14=-xx : +useconcmarksweepgc # wrapper.java.additional.15=-xx : survivorratio=16 # wrapper.java.additional.16=-xx : cmsinitiatingoccupancyfraction=65 # wrapper.java.additional.17=-xx : newsize=1024m # wrapper.java.additional.18=-xx : maxnewsize=1024m # wrapper.java.additional.19=-xx : permsize=128m
362,support xml definition of beans in extensions configurations . some extensions make use of beans on their configuration . it should be possible to create those beans directly on the config definition without the need of defining a spring bean . at the same time   the same extension mike take lists or sets of beans . those should be supported also . for example   assuming that the heisenberg extension has a configuration bean of type door   and a list/set of type ricin . as a user   i should be able to define this : < heisenberg : config > < heisenberg : ricin-packs > < heisenberg : ricin-pack microgramsperkilo= '' 22 '' > < heisenberg : destination victim= '' lidia '' address= '' stevia coffe shop '' / > < /heisenberg : ricin-pack > < /heisenberg : ricin-packs > < heisenberg : next-door address= '' pollos hermanos '' victim= '' gustavo fring '' > < heisenberg : previous victim= '' krazy-8 '' address= '' jesse 's '' / > < /heisenberg : next-door > < /heisenberg : config >
363,generated xsd for mule extensions should include map class javadocs to schema documentation . when extension xsd is generated in the compile phase   it should be possible to use an annotation scanner to extract the extension 's javadocs to use them as schema documentation . it is acceptable for this to not happen when building the schema for test case purposes
364,add test support for extensions . need test infrastructure for extensions   so that we can guarantee that * the extensions manager will be available every time it 's needed an * the xsd is regenerated on each run so that a developer does n't need to do so automatically every time
365,create parent module for extensions . create a parent artifact for extensions to agglutinate all the created extensions . the purpose of this parent artifact is not only about organising modules   it 's also to define a parent pom which will hook up from the compiling phase to automatically generate the schema definition and spring handlers
366,define extensions execution api . just like we defined an introspection api for mule extensions   we now need an api to execute operations on those extensions . this task is about defining   designing and documenting that api . not implementing it .
367,add reconnection support for database connector . add reconnection support for database connector
368,create a maven property for groovy-all version . this dependency in pom.xml has a harcoded version   we should use a property . < groupid > org.codehaus.groovy < /groupid > < artifactid > groovy-all < /artifactid > < version > 1.8.6 < /version > and also verify that there is no other places where we use the hardcoded version
369,remove unsued configuration builders . we have code to support creating a mule flow / service using a jruby script   groovy or guice . the actual creating of the script requires advance knowledge of mule internals and it 's not useful . nobody is using it and also we do n't support it in our ide . we should only keep the spring configuration builders
370,release profile does n't build javadoc jar . running { { mvn -p release install } } does n't build javadoc jars at least for mule-core . it only builds : * mule-core-3.5.1-sources.jar * mule-core-3.5.1-tests.jar * mule-core-3.5.1.jar
371,create javadoc jars on the release profile . currently   we do n't create javadoc jars as part of the release profile   requiring us to manually create and deploy them . modify the build descriptors to create the javadoc files for each module . note that besides this   there must still be a way to create the aggregated javadocs to be published online .
372,jms transport should reuse javax.jms.session   javax.jms.messageproducer instances by default . all mule jms transport must reuse javax.jms.session   javax.jms.messageproducer by default without relying on a specific connection factory implementation .
373,jms : caching-connection-factory should be deprecated for 3.6 . < jms : caching-connection-factory > should be deprecated   unless there is another reason to keep this but this element must continue to be fully supported in config in 3.6
374,ensure internal seda queues are bound by default to avoid outofmemoryexception 's . a default size for maxqueuesize must be defined   at least for the case where the queue is in-memory . we need to determine if : i ) this default is best defined on the processing strategy or object store . ii ) if it ’ s best to use a static default   or if it is best to determine the default based on heap size or some other parameter . in ii )   a related concern to keep in mind here is whether or not we can have a mechanism for mule self-tuning that we can include as ee-only .
375,bundle scripting pack with mule ce by default . mule ce currently does n't bundle the scripting libraries ( i.e . jython ) by default . instead   users have to download a separate scripting pack : https : //repository.mulesoft.org/nexus/content/repositories/releases/org/mule/distributions/mule-scripting-pack/3.5.0/mule-scripting-pack-3.5.0.zip we should evaluate whether or not it is feasible/practical to bundle this scripting pack together with the base mule ce build   and do so if seen fit . the mule ee distribution currently comes with these scripting libraries bundled with the deistribution afiak .
376,update all-modules   all-transports and all-examples dependencies . all-modules   all-transports and all-examples are maven modules aggregating several mule esb submodules . but are not up to date . we need to update their dependency list to solve this problems : h3 . modules not in all-modules * guice * launcher * logging * reboot h3 . transports not in all-transports * axis h3 . examples not in all examples * errorhandler * geomail * loanbroker-bpm * loanbroker-legacy * notifications
377,seda queues with persistent profile fail in windows . when using a queue asynchronous with a persistent queue store   and when using windows it fails because the name of the file to store the queue data is invalid . see : http : //forum.mulesoft.org/mulesoft/topics/anypoint_studio_default_persistent_queue_store_java_io_ioexception_the_filename_is_incorrect
378,update maven-deploy plugin to 2.8 . artifact deployment repo is defined in the distributionmanagement section of the mule main pom.xml file . sometimes we need to stage changes in other repositories in order to make tests that do not affect the rest of the community . the maven deploy plugin provides a way to override the deployment repo   but only in version 2.8 it allows specifying separate snapashot and release repos .
379,remove maven archtetypes and ant tools . remove maven archetypes   archetype tests and bobberplus ( archetype builder ) . transport   module   catalog   patterna rchetypes are outdated and unmaintained . application archetype has evolved into it 's own project in appkit .
380,remove patterns . remove patterns and pattern support for mule 4. they are too complex to create an maintain   and we strive to replace them with a simpler scheme . - check parent pom   all-modules   all-transports - check impact in xml ( if the module added xml syntax   document that those elements will not be supported anymore ) - check assemblies ( ce and ee ) - check dependencies from integration and functional tests - make sure to create the pr to be merged in mule-4.x branch
381,remove guice module . the guice module has not gained much traction   and as we redesign the inversion of control across mule-core   we wil revise ioc containers again .
382,remove ognl module . the module has not been maintained and it 's functionality overlaps with mel . we should deprecate it in 3.6 and remove it in mule 4 - check parent pom   all-modules   all-transports - check impact in xml ( if the module added xml syntax   document that those elements will not be supported anymore ) - check assemblies ( ce and ee ) - check dependencies from integration and functional tests - make sure to create the pr to be merged in mule-4.x branch
383,remove sxc module . deprecate the module in 3.6 and remove it in mule 4.0 document functionality removed . - check parent pom   all-modules   all-transports - check impact in xml ( if the module added xml syntax   document that those elements will not be supported anymore ) - check assemblies ( ce and ee ) - check dependencies from integration and functional tests - make sure to create the pr to be merged in mule-4.x branch - log in namespacehandler a deprecation message telling how to replace it . - log in module classes a deprecation message telling how to replace it . - create a docs jira - create a studio jira
384,amqp transport . define specs document . . as a product owner or community member i want to be able to review the specs so that i can and contribute with my feedback
385,amqp transport . define connector schema . as a user i want i want to be able to rely on a defined schema to write my amqp integrations so that i have exact knowledge of how i ’ m syntactically supposed to use the transport and to have help from my ide to autocomplete and detect errors .
386,amqp transport . create connector skeleton . . as a developer i want i want to have a base project skeleton so that there is a basement to build on with agreed placeholders for endpoints   connectors   transactions that should be stable .
387,amqp transport . create configuration element ( connector ) . . as a user i want i want to be able to configure the transport in a single point so that i can configure the common transport attributes in a single reusable place
388,amqp transport . create inbound receiver ( consume ) . as a user i want i want to be able consume continuously amqp messages so that a muleevent is created and delivered to a flow when a messages arrives to a queue and is comsumed
389,amqp transport . create inbound requestor ( request ) . as a user i want i want to be able consume instantly amqp messages so that i can consume messages at any point of the flow
390,amqp transport . integration testing . . as a user i want i want the transport to be tested against a real broker and a real application . so that i can be sure the transport works on real world usage .
391,implement log4j2 on mule . we need to upgrade to log4j2 ir oder to leverage the performance improvements of asynchronous logging .
392,fix datetimetimetestcase.seconds flakyness . . this test is flaky .
393,create script for uploading to maven central . upload the script to upload to maven central .
394,add gpg maven plugin to mule common . add the plugin   default skipping signature and configure release build plan to enable gpg signature .
395,amqp transport . receive and incorporate spec feedback . . amqp transport . receive and incorporate spec feedback .
396,do performance testing of log4j2 implementation . mule-7769 implemented asynchronous logging through log4j2 . please do performance testing over it
397,create automated tests for log separation . mule-7769 revamped mule 's logging infrastructure . this code already contains some unit tests about its behavior   but actually verifying that 2 apps deployed in mule have their logs separated   that they are properly rolled over   etc requires an external system test
398,update mule-transports-http to tomcat 6+ . pr-514 mule-transports-http depends on tomcat 5.5.23 for cookie processing . upgraded to tomcat 6 version used by mule elsewhere using $ { tomcatversion } . tomcat moved this into coyote . verified working in tomcat 6+ . defaulted httponly to false in this instance since it was not part of tomcat 5 and not part of cookie from commons-httpclient and thus was naturally already false . in tomcat 6   httponly is configurable and default in tomcat 7+ . this seemed most appropriate way to get onto tomcat 6+ as tomcat 5 is end of life and solved use case we had running mule within tomcat 7 & 8. see pull request on github pr # 514   jira request mule-6705   and jira request mule-5100 .
399,illegalargumentexception when trying to load external query . when trying to load an external sql query within the new database connector with the following config { code } < db : template-query name= '' template_query '' doc : name= '' template query '' > < db : parameterized-query file= '' myquery.sql '' / > < /db : template-query > { code } i get the attached stacktrace .
400,arrayindexoutofboundsexception when mixing the order of in/out parameters in db module . . when mixing the order of in-out parameters on a stored procedure call   the module throws an arrayindexoutofboundsexception . please look at the following post to get more insight on the issue : http : //forum.mulesoft.org/mulesoft/topics/stored_procedure_with_two_out_param_using_database_connector the sample configuration that is failing is the following one : < db : stored-procedure config-ref= '' oracle_database_configuration_just_append_to_or_something '' doc : name= '' oracle csp database '' > < db : parameterized-query > < ! [ cdata [ call pkg_location.p_load_meetings ( : p_client_no   : p_zip   : p_page_number   : p_page_size   : p_total_records   : p_site_id   : out_cursor ) > ] ] > < /db : parameterized-query > < db : in-param name= '' p_client_no '' type= '' numeric '' value= '' 59616 '' / > < db : in-param name= '' p_zip '' type= '' varchar '' value= '' 10010 '' / > < db : in-param name= '' p_page_number '' type= '' numeric '' value= '' 1 '' / > < db : in-param name= '' p_page_size '' type= '' numeric '' value= '' 1 '' / > < db : out-param name= '' p_total_records '' type= '' numeric '' / > < db : in-param name= '' p_site_id '' type= '' numeric '' value= '' 1 '' / > < db : out-param name= '' out_cursor '' / > < /db : stored-procedure >
401,deployment service does not update app status after deployment failure . deploy and application ( as attached ) . call the deployment service to list the applications ( deploymentservice.getapplications ( ) ) the app i just deployed status is created . this is a problem to notify the deployment status on an app on any administration console . if an app could not be deployed the status should be failed or it should be destroyed so administration consoles ( ch   hybrid or any user script on top of the mule agent ) can identify a failure scenario
402,running unit tests on clean working directory with an empty repository fails because missing jar . { code } git co git @ github.com : mulesoft/mule.git cd mule mvn -punit -dmule.test.timeoutsecs=30 { code } this fails because unpacking embedded distribution dependencies is binded to generate-sources phase   but jars are still not available ( because we are running test phase ) . apparently maven dependency plugin when jar is not available and has to resolve the dependency   resolves the artifact file as the classes directory for the dependency   so every file in that module is available to the current module . as we are trying to unpack it fails because the classes directory is not a jar file .
403,remove incorrect assertion from test createhttpserverconnectionwithhttpconnectorproperties . test org.mule.transport.http.httpserverconnectiontestcase.createhttpserverconnectionwithhttpconnectorproperties asserts that socket packet size is set on a newly created socket to the value specified by configuration . but the value as specified by the jdk documentation is just a suggestion   and the test is currently failing on ci : org.mule.transport.http.httpserverconnectiontestcase.createhttpserverconnectionwithhttpconnectorproperties error details expected : < 1024 > but was : < 1148 > stack trace java.lang.assertionerror : expected : < 1024 > but was : < 1148 > org.junit.assert.fail ( assert.java:93 ) org.junit.assert.failnotequals ( assert.java:647 ) org.junit.assert.assertequals ( assert.java:128 ) org.junit.assert.assertequals ( assert.java:472 ) org.junit.assert.assertequals ( assert.java:456 ) org.mule.transport.http.httpserverconnectiontestcase.createhttpserverconnectionwithhttpconnectorproperties ( httpserverconnectiontestcase.java:263 ) sun.reflect.nativemethodaccessorimpl.invoke0 ( native method ) sun.reflect.nativemethodaccessorimpl.invoke ( nativemethodaccessorimpl.java:57 ) sun.reflect.delegatingmethodaccessorimpl.invoke ( delegatingmethodaccessorimpl.java:43 ) java.lang.reflect.method.invoke ( method.java:606 ) org.junit.runners.model.frameworkmethod $ 1.runreflectivecall ( frameworkmethod.java:44 ) org.junit.internal.runners.model.reflectivecallable.run ( reflectivecallable.java:15 ) org.junit.runners.model.frameworkmethod.invokeexplosively ( frameworkmethod.java:41 ) org.junit.internal.runners.statements.invokemethod.evaluate ( invokemethod.java:20 ) org.junit.internal.runners.statements.runbefores.evaluate ( runbefores.java:28 ) org.junit.internal.runners.statements.runafters.evaluate ( runafters.java:31 ) org.junit.rules.testwatcher $ 1.evaluate ( testwatcher.java:46 ) org.junit.internal.runners.statements.failontimeout $ 1.run ( failontimeout.java:28 ) standard output ================================================================================ = testing : createhttpserverconnectionwithhttpconnectorproperties = ================================================================================
404,functional test not ran when outside test/functional directory . when i try to run filereceivermovedeletetestcase test from root directory it fails because the test is not found   but when i run it from transports/file it runs fine . using this command : { { mvn test -pfunctional -dtest=filereceivermovedeletetestcase } }
405,clean up opensource amqp connector . old amqp transport should be clean up   current issues fixed   current pull requests merged/refused .
406,classloader leak due to wrong use of default_threading_profile . muleworkmanager is created based on the default_threading_profile . because that default threading profile implements mulecontextaware   it ends up holding a reference to the application 's mulecontext . this causes the mulecontext not to be collected and ultimately the classloader is not collected . default_threading_profile should never be assigned directly . only copies should be used .
407,logging infrastructure should not keep a reference to any classloaders . no logging context should keep a reference to any classloader object . otherwise   that classloader will fail to be collected if the logger is held on a static field
408,app with a jetty config fails to deploy when using log4j2 implementation for login . . when deploying an app that has a jetty endpoint/configuration   it fails to be deploy . replacing the jetty endpoint with http and deleting its configuration enables to app to be successfully deployed . app that reproduced the issue is attached .
409,upgrade log4j2 version to 2.0.2 . log4j 2.0.2 was release and it contains some fixes   some of which we requested . we should upgrade
410,create jar for maven plugin . create jar library for new maven plugin that contains logic for creating zip files . the jar will take compiled classes and resources files   and create the deployable zip . this jar will/should be used by studio .
411,ensure that maven plugins for development & qa are compatible . we currently have the muleesb-maven-plugin and the appkit plugins . we should make sure these plugins fit well together in the complete sdlc .
412,release appkit project ( mule esb maven tools ) . release mule esb maven tools project to the community .
413,create mule esb maven tools project . move/rename appkit to mule esb maven tools see ee-3893 for justification .
414,upgrade junit version to 4.11 . this means getting hamcrest upgraded to 1.3. it requires using mockito-core instead of mockito-all and depends on whether anything breaks here since mockito is using hamcrest 1.1 .
415,allow extensions code to be splitted in several units . as described in the execution section of the spec   a extension 's developer needs to have the option to spread the configurations and operations across several classes which instances have their own lifecycle .
416,basic functionality for new http connector - outbound part . we need to implement the basic functionaility for doing http request calls . this includes : - http request global config - http request operation - http request builder - http request basic authentication and digest authenticaton - message mapping form mule message to http request - message mapping from http response to mule message
417,fix cloudbees builds - part 1 . define how to work with repos . fix disk size problem . works issues to replace bamboo with cloudbees
418,vm fails in getsize ( ) when log level = debug . while trying to debug an issue with batch i set the log level to `` debug '' and this prevented the application from working at all . attached you will find an application to reproduce it . simply import the app in studio   run it and hit the endpoint http : //localhost:9000/test if you either remove the log4j.properties file or set the level to info it works fine . i checked the code and it 's triggered from line 64 in org.mule.util.queue.dualrandomaccessfilequeuestoredelegate : { code } if ( logger.isdebugenabled ( ) ) { logger.debug ( string.format ( `` queue % s has % s messages ''   queuename   getsize ( ) ) ) ; } { code } this results into this when level = debug : { code } java.lang.nullpointerexception org.mule.util.queue.dualrandomaccessfilequeuestoredelegate.size ( dualrandomaccessfilequeuestoredelegate.java:143 ) org.mule.util.queue.abstractqueuestoredelegate.getsize ( abstractqueuestoredelegate.java:153 ) org.mule.util.queue.dualrandomaccessfilequeuestoredelegate. < init > ( dualrandomaccessfilequeuestoredelegate.java:66 ) { code }
419,upgrade jsch to version 0.151 . `` verify : false '' exception is still encountered in mule 3.5.1 with jsch 0.150   according to their release note it may require version 0.151 http : //www.jcraft.com/jsch/changelog australian post is still in 3.4.0 and has reported this issue ( https : //na6.salesforce.com/5008000000zo4qe )   i have tried to use loader.override to include jsch 0.151 in the application but `` verify : false '' exception is still sporadically encountered during the load test . if i replace the jsch.jar to 0.151 in /lib/opt   then the issue seems to be resolved . i have run the load test for an hour and i did not encounter the exception . please advise 1. is there any impact to upgrade jsch jar to 0.151 in mule 's default distribution ? 2. is there any way to patch the issue without replacing the jsch.jar from < mule_home > /lib/opt ? we would need to patch both the standalone and cloudhub deployment runtime . some other customers in cloudhub are also heavily using sftp   they ca n't replace the jsch jar in the cloudhub runtime themselves . many thanks !
420,deployment service tracks applications before they are successfully deployed . deployment service tracks applications as deployed before they have actually been deployed . this leads to retrieving an application from the list that has a context which has not been initialized yet or even that failed to deploy . in gateway we are retrieving all applications with getapplications   and verifying that the mulecontext is not null .
421,register core extensions as domain deployment listeners if it applies . when a core extension is initialized   if it implements the deploymentlistener interface   it 's added to the collection of deployment listeners but not to the collection of domain deployment listeners . in the gateway we are registering the core extensions as deployment listeners and setting the endpoint message notification on the context when the mule context creation notification is fired   but when the domain 's mule context is deployed   the core extensions are not registered as listeners and the notification is never fired .
422,getapplications ( ) method in muledeploymentservice should include more apps . the getapplications ( ) method in muledeploymentservice only returns applications that were successfully deployed or that failed to start . applications that failed to be installed or initialised are not returned but kept in a zoombies map . this is inconsistent . the method should return all applications for which deployment has been attempted   and per mule-7800   it should have a status marking which ones failed . this makes for more useful and predictable behaviour while eliminating the need for the zoombies map . finally   notice that the javadoc for that method says that it only returns deployed applications . that comment does not reflect the actual behaviour of the method not its real intent . that javadoc should be fixed also .
423,include muleesb-maven-plugin in mule esb maven tools project . we need to include muleesb-maven-plugin ( https : //github.com/mulesoft/muleesb-maven-plugin ) in mule-esb-maven-tools project . this required : - review if it should be a separate plugin or can be part of an existent plugin - if it should be a different plugin then : - finding a good name for the plugin and renaming it . - review if app deployment to local server should be removed from previous plugin and added to the new one . - review plugin capabilities - decide if it should be a single plugin or multiple plugins ( local standalone   remote standalone   ch   local cluster   remote cluster ) - add documentation by example for every configuration scenario . - review with studio team how this plugin can impact anypoint studio . - change group id   artifact id   verson and package names according to mule-esb-maven-tools naming conventions .
424,document different testing options for mule applications and domains . . we need to properly document different testing options for mule apps and domains . this includes : functionaltestcase   functionaltestcase using domains   functionaltestcase using domains and several applications   munit   fakemuleserver tests   multiprocess unit test   test against apps deployed in a real container ( standalong   ch   cluster ) . we need to recommend when to use each of them and how to integrate them with maven and ci .
425,spike on extensions api execution model - part 1 . do a spike on being able to execute operations through the extensions api
426,implement success and failure status codes in the outbound part of the http connector . implement the success-status-code-validator and failure-status-code-validator elements in the < http : request > element as defined in the spec .
427,add support for oauth in the http connector ( authorization code ) . implement oauth support for the outbound part of the http connector . support only the authentication-code grant type for now .
428,allow to configure ssl in the outbound part of the http connector . currently the http connector only supports the < http : ssl-default-config / > element to enable https requests . provide a way to configure ssl with more detail in the outbound part   and also consider moving it to the ssl namespace as defined initially in the spec .
429,support streaming in the outbound part of the http connector . add streaming support to the outbound part of the http connector   having the same behavior as the outbound endpoint in the http transport .
430,create repo and ci plan for mule artifact builder project . for project created in mule-7832 : - create a github project - create a ci plan - publish the artifact to a repo - consume the artifact from mule-esb-maven-tools project
431,implement composition of request builders in the http connector . allow to compose many request builders inside a request builder element as defined in the spec .
432,be able to provide socket configuration for the outbound part of the http connector . implement the socket-configuration element inside the request-config to be able to configure the sockets that will be used by the connector .
433,spike on ntlm authentication for the outbound part of the http connector . add support for ntlm authentication in the request-config element .
434,create http connector listener . create http listener element . this will be only the listener element without any inner element support . this task includes : - support for listener xml element . - mapping from http request to mule message - mapping from mule message to http response
435,add support for http response builder and http response error builder . add support for http listener child element http response builder and http error response builder . all features from the http connector spec for this elements should be supported .
436,add support for http listener config element . add basic support for http listener global configuration element . this task only includes support for the element and not the inner element . this task also includes http listener element support for referencing a global listener config .
437,fix mule esb maven tools gaps and issues . fix mule esb maven tools gaps and issues .
438,fix cloudbees builds - part 2 . define how to work with repos . fix disk size problem . works issues to replace bamboo with cloudbees
439,web service consumer can not handle wsdl that import other wsdl that overrides namespace . when using a wsdl file that imports another wsdl file   where in the second one the same namespace is used for a different definition   an error is raised when the wsc is started : { code } java.lang.runtimeexception : org.mule.common.metadata.metadatagenerationexception : org.apache.xmlbeans.xmlexception : error : src-resolve.a : could not find type 'patientid @ http : //tempuri.org/ ' . do you mean to refer to the type named patientid @ urn : epicsystems-com : empi.2009.services ? java.lang.reflect.invocationtargetexception java.lang.reflect.invocationtargetexception at org.eclipse.jface.operation.modalcontext.run ( modalcontext.java:421 ) at org.eclipse.jface.dialogs.progressmonitordialog.run ( progressmonitordialog.java:507 ) at org.mule.tooling.webservice.consumer.datasense.soapmetadatastrategy.getmetadata ( soapmetadatastrategy.java:54 ) at org.mule.tooling.webservice.consumer.datasense.soapmetadatastrategy.getmetadata ( soapmetadatastrategy.java:32 ) at org.mule.tooling.ui.modules.core.metadata.datasenseeditorcontroller.doupdate ( datasenseeditorcontroller.java:45 ) at org.mule.tooling.ui.modules.core.widgets.clickhandlerregistry.proceed ( clickhandlerregistry.java:62 ) at org.mule.tooling.ui.modules.core.widgets.meta.defaultdialogcontroller.doupdate ( defaultdialogcontroller.java:20 ) at org.mule.tooling.properties.editor.entityeditpartpropertieseditor.apply ( entityeditpartpropertieseditor.java:108 ) at org.mule.tooling.properties.views.mulepropertiesview $ editorpartlistener $ 1.run ( mulepropertiesview.java:634 ) at org.eclipse.swt.widgets.runnablelock.run ( runnablelock.java:35 ) at org.eclipse.swt.widgets.synchronizer.runasyncmessages ( synchronizer.java:135 ) at org.eclipse.swt.widgets.display.runasyncmessages ( display.java:3946 ) at org.eclipse.swt.widgets.display.readanddispatch ( display.java:3623 ) at org.eclipse.ui.internal.workbench.runeventloop ( workbench.java:2701 ) at org.eclipse.ui.internal.workbench.runui ( workbench.java:2665 ) at org.eclipse.ui.internal.workbench.access $ 4 ( workbench.java:2499 ) at org.eclipse.ui.internal.workbench $ 7.run ( workbench.java:679 ) at org.eclipse.core.databinding.observable.realm.runwithdefault ( realm.java:332 ) at org.eclipse.ui.internal.workbench.createandrunworkbench ( workbench.java:668 ) at org.eclipse.ui.platformui.createandrunworkbench ( platformui.java:149 ) at org.eclipse.ui.internal.ide.application.ideapplication.start ( ideapplication.java:124 ) at org.eclipse.equinox.internal.app.eclipseapphandle.run ( eclipseapphandle.java:196 ) at org.eclipse.core.runtime.internal.adaptor.eclipseapplauncher.runapplication ( eclipseapplauncher.java:110 ) at org.eclipse.core.runtime.internal.adaptor.eclipseapplauncher.start ( eclipseapplauncher.java:79 ) at org.eclipse.core.runtime.adaptor.eclipsestarter.run ( eclipsestarter.java:353 ) at org.eclipse.core.runtime.adaptor.eclipsestarter.run ( eclipsestarter.java:180 ) at sun.reflect.nativemethodaccessorimpl.invoke0 ( native method ) at sun.reflect.nativemethodaccessorimpl.invoke ( nativemethodaccessorimpl.java:57 ) at sun.reflect.delegatingmethodaccessorimpl.invoke ( delegatingmethodaccessorimpl.java:43 ) at java.lang.reflect.method.invoke ( method.java:606 ) at org.eclipse.equinox.launcher.main.invokeframework ( main.java:629 ) at org.eclipse.equinox.launcher.main.basicrun ( main.java:584 ) at org.eclipse.equinox.launcher.main.run ( main.java:1438 ) caused by : java.lang.runtimeexception : org.mule.common.metadata.metadatagenerationexception : org.apache.xmlbeans.xmlexception : error : src-resolve.a : could not find type 'patientid @ http : //tempuri.org/ ' . do you mean to refer to the type named patientid @ urn : epicsystems-com : empi.2009.services ? at org.mule.tooling.webservice.consumer.datasense.retrievewsdlmetadatarunnable.run ( retrievewsdlmetadatarunnable.java:84 ) at org.eclipse.jface.operation.modalcontext $ modalcontextthread.run ( modalcontext.java:121 ) caused by : org.mule.common.metadata.metadatagenerationexception : org.apache.xmlbeans.xmlexception : error : src-resolve.a : could not find type 'patientid @ http : //tempuri.org/ ' . do you mean to refer to the type named patientid @ urn : epicsystems-com : empi.2009.services ? at org.mule.common.metadata.xmlmetadatafieldfactory.createfields ( xmlmetadatafieldfactory.java:98 ) at org.mule.common.metadata.defaultxmlmetadatamodel. < init > ( defaultxmlmetadatamodel.java:46 ) at org.mule.tooling.webservice.consumer.datasense.retrievewsdlmetadatarunnable.createmetadata ( retrievewsdlmetadatarunnable.java:92 ) at org.mule.tooling.webservice.consumer.datasense.retrievewsdlmetadatarunnable.loadinputmetadata ( retrievewsdlmetadatarunnable.java:172 ) at org.mule.tooling.webservice.consumer.datasense.retrievewsdlmetadatarunnable.run ( retrievewsdlmetadatarunnable.java:70 ) ... 1 more caused by : org.apache.xmlbeans.xmlexception : error : src-resolve.a : could not find type 'patientid @ http : //tempuri.org/ ' . do you mean to refer to the type named patientid @ urn : epicsystems-com : empi.2009.services ? at org.apache.xmlbeans.impl.schema.schematypesystemcompiler.compile ( schematypesystemcompiler.java:225 ) at org.mule.common.metadata.util.xmlschemautils.getschematypesystem ( xmlschemautils.java:34 ) at org.mule.common.metadata.xmlmetadatafieldfactory.findrootelement ( xmlmetadatafieldfactory.java:216 ) at org.mule.common.metadata.xmlmetadatafieldfactory.createfields ( xmlmetadatafieldfactory.java:89 ) ... 5 more { code }
440,enable tls protocol versions 1.1 and 1.2 by default . as mule 3.6 requires java 7   enable by default protocolo tls versions 1.1 and 1.2 so that secure socket connections can leverage them . they were not enabled by default due to java 6 compatibility   which does n't implement them   but while they are not the default in java 7   they are always supported . this change will mostly be around setting up the correct definition in tls-default configuration file .
441,add support for attachments in the http connector . the new http connector should be able to handle multipart requests . if the mule message contains outbound attachments   the request should be multipart . if the response is multipart   then the parts should be mapped as inbound attachments in the response .
442,deployment_failed status should be applied to applications that fail to start . the status deployment_failed was added per issue mule-7800 . that status is applied to applications that failed to be installed or initialised . the same status should be applied to applications that fail to start .
443,maven bundle local repository generation . add description
444,test pax-exam using bundle repository . create a pax-exam version of functionaltestcase in order to run mule tests inside an osgi container . detect and report issues and things to improve
445,move tests from core/spring-config/vm to the new testing framework as needed . add description
446,fix untilsuccessfultestcase flaky test . . we need to fix testsuccessfuldeliveryackexpression and check for other flaky tests .
447,no error thrown when ftp inbound attempts to read a file larger than jvm maxheap . when a ftp inbound connector with streaming= '' false '' tries to read / copy a file on the ftp server that is larger than the available maxheapsize of the mule jvm   the file transfer fails - but with no error or warning . my test case . filezilla ftp server running on windows   hosting a 750mb file . mule 3.5.1 running on mac set to jvm maxheapsize 512mb . { code : xml } < ftp : connector name= '' ftp '' pollingfrequency= '' 10000 '' validateconnections= '' true '' doc : name= '' ftp '' / > < file : connector name= '' file '' autodelete= '' true '' streaming= '' false '' validateconnections= '' true '' doc : name= '' file '' / > < catch-exception-strategy name= '' catch_exception_strategy1 '' / > < flow name= '' 14639-large-ftp-amsflow1 '' doc : name= '' 14639-large-ftp-amsflow1 '' > < ftp : inbound-endpoint host= '' 192.168.150.134 '' port= '' 21 '' user= '' mule123 '' password= '' mule123 '' connector-ref= '' ftp '' responsetimeout= '' 10000 '' doc : name= '' ftp '' / > < set-variable variablename= '' thefilename '' value= '' # [ message.inboundproperties.originalfilename ] '' doc : name= '' setting filename '' / > < logger level= '' info '' doc : name= '' log file name '' message= '' # [ flowvars [ 'thefilename ' ] ] '' / > < file : outbound-endpoint path= '' /users/dchan/downloads '' outputpattern= '' # [ flowvars [ 'thefilename ' ] ] '' responsetimeout= '' 10000 '' doc : name= '' file '' connector-ref= '' file '' / > < /flow > < flow name= '' 14639-large-ftp-amsflow2 '' doc : name= '' 14639-large-ftp-amsflow2 '' > < http : inbound-endpoint exchange-pattern= '' request-response '' host= '' localhost '' port= '' 8081 '' doc : name= '' http '' / > < set-payload value= '' ping ok '' doc : name= '' set payload '' / > < logger message= '' # [ payload ] '' level= '' info '' doc : name= '' logger '' / > < /flow > { code } mule continuously attempts to copy the file as per the polling frequency . mule should present either a warning or error when the file transfer fails . issue is reproducible with both studio and 3.5.1 standalone server . in the customers case   they report that their mule application eventually stops processing   potentially because of a lot of files / thread exhaustion . i could not reproduce this in a test environment . customer is unable to enable streaming due to https : //www.mulesoft.org/jira/browse/se-1204
448,thread exception when registering mule notification listeners . i created an app that contains a bean that registers mule notification listeners . those listeners log some attributes of the mule message ( never write something in the mule message ) . they might or might not run in a separate thread ( that does not make the difference ) . if that bean is enabled   we get this exception : java.lang.illegalstateexception : only owner thread can write to message : thread [ pool-12-thread-1 5   main ] /thread [ [ releasesmoketest-final ] .automatedrun.stage1.02 5   main ] org.mule.defaultmulemessage.newexception ( defaultmulemessage.java:1662 ) org.mule.defaultmulemessage.checkmutable ( defaultmulemessage.java:1648 ) org.mule.defaultmulemessage.assertaccess ( defaultmulemessage.java:1577 ) org.mule.defaultmulemessage.setexceptionpayload ( defaultmulemessage.java:999 ) org.mule.exception.abstractmessagingexceptionstrategy.handleexception ( abstractmessagingexceptionstrategy.java:64 ) org.mule.execution.handleexceptioninterceptor.execute ( handleexceptioninterceptor.java:37 ) org.mule.execution.handleexceptioninterceptor.execute ( handleexceptioninterceptor.java:14 ) org.mule.execution.beginandresolvetransactioninterceptor.execute ( beginandresolvetransactioninterceptor.java:54 ) org.mule.execution.resolveprevioustransactioninterceptor.execute ( resolveprevioustransactioninterceptor.java:44 ) org.mule.execution.suspendxatransactioninterceptor.execute ( suspendxatransactioninterceptor.java:50 ) org.mule.execution.validatetransactionalstateinterceptor.execute ( validatetransactionalstateinterceptor.java:40 ) org.mule.execution.isolatecurrenttransactioninterceptor.execute ( isolatecurrenttransactioninterceptor.java:41 ) org.mule.execution.externaltransactioninterceptor.execute ( externaltransactioninterceptor.java:48 ) org.mule.execution.rethrowexceptioninterceptor.execute ( rethrowexceptioninterceptor.java:28 ) org.mule.execution.rethrowexceptioninterceptor.execute ( rethrowexceptioninterceptor.java:13 ) org.mule.execution.transactionalerrorhandlingexecutiontemplate.execute ( transactionalerrorhandlingexecutiontemplate.java:109 ) org.mule.execution.transactionalerrorhandlingexecutiontemplate.execute ( transactionalerrorhandlingexecutiontemplate.java:30 ) org.mule.processor.asyncinterceptingmessageprocessor $ asyncmessageprocessorworker.dorun ( asyncinterceptingmessageprocessor.java:182 ) org.mule.work.abstractmuleeventwork.run ( abstractmuleeventwork.java:36 ) org.mule.work.workercontext.run ( workercontext.java:286 ) java.util.concurrent.threadpoolexecutor.runworker ( threadpoolexecutor.java:1145 ) java.util.concurrent.threadpoolexecutor $ worker.run ( threadpoolexecutor.java:615 ) java.lang.thread.run ( thread.java:745 )
449,upgrade spring to 4.1.1 . upgrade spring framework to version 4.1.1 on the mule-4.x development branch .
450,upgrade json schema validator to support draft-04 rfc . current validator fully supports json schema draft 03 but has very limited suport of draft 04   besides having several issues fixed in later versions . the update will require changes in mule as the validator was modularized an repackaged in a different way . check for latest stable version here : https : //github.com/fge/json-schema-validator
451,simplelog mode should have custom logic for locating configuration file . ootb   log4j2 looks for its configuration file using this algorithm : * scan all classpath looking for file log4j2-test.xml * if not found   repeat looking for log4j2.xml when mule is running with its default logging infrastructure   this logic is overridden so that the search is not performed on all classpath but : * first on the application classpath * if not found on the domain classpath * if not found   on the configuration folder when running in simple log mode   all of mule 's custom logic is not applied and we fallback to log4j2 default implementation   which causes issues because we can not guarantee that any other jar in the classpath includes such a file   causing the wrong file to be picked up . when runnning in simple mode   log separation should be disabled but our custom search algorithm should still be applied . additionally   in both cases we should generate a log line informing the path in which we found the file .
452,better support for sequential processing in scatter-gather . scatter gather replaces the < all > router which was deprecated in 3.5.0. however   it does n't behave that well on sequential use cases as its predecesor . that 's because if you configure a threading pool of just one   the processing is not sequential just across the routers but across all executions of the flow . another misbehaving use case is the one in which the routes are extremely fast   like just a couple of ms each . in that case   the overall response gain is lower than the time penalty of managing the threads . to accommodate for these use cases we need to better support the sequential case of scatter gather   its threading profile type should change from asynchronousthreadingprofiletype to threadingprofiletype . this will enable a dothreading option which when set to false will execute always on the same thread   behaving similar to the old < all > router .
453,add helper properties for http listener element . add http listener helper properties . this properties are created to simplify usability and provide extra information about the processed request .
454,add tls support for http listener . add support for ssl in new http connector .
455,ws consumer support for using new http connector . add support for the new http connector in ws consumer
456,http listener response streaming support . add support for sending streaming a response in new http connector . this implies sending transfer-encoding : chunck .
457,allow to customise protocol in new http connector . allow to the user to change the http protocol to use in the new http connector
458,validate http proxy scenario using new http connector . build and validate a template created with http : request and http : listener for a proxy scenario .
459,remove dependencies no longer needed with jdk 1.7 . now that jdk 1.7 is the minimum required jdk version for running mule   the following dependencies should not be needed anymore : * saaj-api * jaxb-api * jaxb-impl * javax.mail : ( including geronimo companion ) * jaxb-xjc * retrotranslator * servlet-api * geronimo-jaxrpc_1.1_spec * geronimo-ejb_2.1_spec * geronimo-j2ee-connector_1.5_spec verify that we can indeed remove these libraries and if so go ahead and take them away from the distribution
460,perform spike on upgrading xslt support . perform a spike on upgrading our xslt support by using newer libraries which provide more up to date features and performance . for this spike to be considered successful   we should not only gain in functionality and performance   but we also need to remain backwards compatible with the behaviour of mule 3.5.x
461,perform spike on upgrading xpath function . perform a spike on upgrading our xpath support following these requirements : * support xpath2 * provide a new xpath2 ( ) mel function which behaves more consistently than its current brother and deprecates it * can be leveraged to other transformers or elements currently present in mule ( research which ones ) * be backwards compatible with mule 3.5.x
462,upgrade guava to the v18 . upgrade guava to the latest version which at the moment of filing this issue is v18
463,upgrade apache commons libraries to latest versions . the following apache commons libraries can be upgraded . * commons-codec * commons-beanutils * commons-exec * commons-dbcp * commons-net
464,upgrade test dependencies . the following libraries are used in our test infrastructure and can be upgraded . * activemq * derby * mockito-core * xmlunit * ftpserver-core * ftplet-api * mysql-connector * postgres * jmockit ( check if we really need this one )
465,add source and target attributes to the http : request element . the http : request element should have the attributes source and target . currently the default behavior is to read the body from the payload   and then set the payload with the body of the response . this should be configurable by setting these new attributes .
466,add followredirects attribute to the http : request element . the user should be able to configure in the request element if redirects should be followed or not   as defined in the spec for the new http connector .
467,fix flaky test untilsuccessfultestcase . org.mule.routing.untilsuccessfultestcase.testpermanentdeliveryfailuredlq was ignored because it was flaky and was making build fail all the time . we need to fix flakiness and remove ignore annotation . also check that the rest of the test of this class are not flaky and these tests successfully pass in ci .
468,redesign mulecontext bootstrapping in osgi . current bootstrapping mechanism inspects all available jars searching for bootstrap properties files . that must be modified to work on an osgi container . in osgi   bootstrapping should follow white-board model so a bootstrapping service can be used ( with no osgi knowledge ) which would enable test running with not container to be able to bootstrap the mule context .
469,migrate http connector to use grizzly . this is just to replace netty server with grizzly server . there is going to be a different task for properly configure grizzly server and the execution model .
470,add a system property to force a console appender . add a system property named mule.forceconsolelog which forces a console appender if one is not already defined on the current log4j configuration . the purpose of this is to enable other products such as studio to always have a predictable way to capture all the logs of the application regardless ( and without tampering with ) its configuration . this is something additive to the configuration already present for the application ( if any ) . it does n't altere the standard configuration selection nor log separation performed in standard mode . the mule.simplelog property has precedence over this property . if it is specified   then all the logic described here will not be executed .
471,amqp 3.6 for beta final tasks . things todo here are : - create updatesite.zip final version rc1 for amqp transport - create amqp-transport.zip final version rc1 for amqp transport - create new update site specifically for beta - http : //repository.mulesoft.org/blalblablabla or some url - put amqp connector inside beta update site   and call it `` amqp-0-9 transport '' with version 3.6.xxxxxx - test to make sure new connector install overrides/updates existing connector install - call connector amqp-0-9 - include the 'beta ' tag in the amqp connector gif/image - make sure studio team is aware/okay with all of this - release mule-amqp-transport rc1 to maven acceptance criteria : from the private beta portal . as a user i should be able to : - download the updatesite.zip for installing in studio - download the mule-amqp-transport.zip for installing directly into a mule esb instance . for studio . as a user i should be able to : - download studio oct 2014 release - go to help > install new software > - add the beta update site - navigate to the beta update site and see the amqp-0-9 transport - install the transport in studio - if an old version of the transport is already installed   a dialog should be shown instructing users that their existing transport will be updated - after installing the transport in studio   users should see amqp-0-9 components in the palette   and be able to add those to their studio flows for standalone . as a user i should be able to : - include the mule-amqp-transport reference in my pom.xml file   which for the beta period will include the rc1 version of the transport in my project
472,change devkit support module to use new http connector . when doing oauth with connectors created by devkit it 's possible to define a connector-ref attribute and reference the http : connector that will listen for the oauth callbacks . this is the way in which current devkit connectors allow support for https on the callback . this should integrate with the new connector in the following way : * if no connector is specified   we should use the new one with a default config * if no connector is specified   but the useoldhttptransport configuration flag is turned on   then we default to the old transport * if a connector-ref is specified   then it should show the same behaviour with either the new connector or the old transport
473,make sure the new http connector handles 0.0.0.0 and ip endpoints on the same port . . mule-7985 refers to the old transport   we need to make sure the new connector handles it too .
474,upgrade saxon to 9.6.0.1-he . upgrade saxon in order to get fully compliant 2.0 and basic 3.0 support for xpath   xslt and xquery
475,discussion on user-managed objectstore to define what is needed . there 3 categories of needs : 1 ) using objectstore as a user database - with queries   transactions   etc . 2 ) using objectstore as a user key value store - e.g . for lookup tables   caching   connector oauth tokens   etc 3 ) using objectstore for application state - e.g . idempotent router   until successful   etc . # 1 is not a goal and i do n't think we should spend a single cycle on this . people can use databases for that . if   at some point   we have time to do this - we can look at it . if anyone feels differently about this   ping me on slack and i can explain in more depth . for # 2 and # 3   we identified a few areas that need to be addressed . i am summarizing the discussion between pablo and i   so some of this address part of the solution and not the problem : ) . i think it 's all open for debate fwiw . we need to clarify the semantics around persistence and clustering for objectstores . we identified 3 different modes that we need to support clustered + persistent   clustered + non-persistent . right now   cloudhub implements clustered + persistent   while esb implements clustered + non-persistent . either we need to make this more explicit inside the esb or remove one of the modes . also   the two different modes have very different availability characteristics on cloudhub   so it 's important to know what type of persistence a component is selecting . partionable object store stuff is currently very messy . it 's supposed to be an internal semantic   but it gets exposed to consumers ( e.g . routers ) . objectstoremanager shoudl be handling naming/partitioning underneath the covers . if not   this ends up being a layer on top of objectstores   and it becomes harder to build a management interface around it . key-value store use cases require an update method . we need to document the consistency model - e.g . write last wins we need an objectstore which can use the new database connector for on-prem customers . we need an easy way for users to specify new object stores via xml which get created via the objectstoremanager . use case here is that i want to specify an objectstore specifically for my cache which has a specified ttl and maximum # of values . i do n't believe this is possible right now . ( rinse and repeat for any other mule component ) pablo abad - we did n't talk about # 6   but i thought of it while writing this up   so just capturing it . please let me know your feedback on this . acceptance criteria : * create jiras for tasks associated to creation of this feature
476,create serialization api . create a serialization api which replaces direct uses of serializationutils . this api will allow applications to specify custom serialization mechanisms .
477,migrate http request element to use grizzly . currently http request element is using jetty . we need to change it to use grizzly .
478,change http listener response writing to do streaming . the listener response streaming behaviour is implemented but we still need to write the grizzly response using streaming . this requires some research in grizzly to figure out how to do it .
479,add flag to avoid parsing incoming multipart in http listener . for proxy scenarios we need to avoid parsing multipart incoming request . this will also allow to the user to do streaming with multipart .
480,http response builder is not parsed correctly within flow . response-builder as mp is not working because of the definition parsers . the old new http transport is replacing the old transport definition parser so it 's failing .
481,remove examples from the distribution . because we now have examples in studio and the mulesoft library   it does n't make sense to also keep maintaining the examples on the distribution . they should be removed from the distribution and our code base . notice that before removing them we need to make sure that : * they do n't ship with any tests worth keeping ( the scripting example has a couple that i 'd like to move to the scripting module ) * some system tests use them . we need to make sure they remain available for those testes keep examples folder with a readme file saying that we are not shipping examples anymore ( check content with steven ) fix examples version in qa builds .
482,add test cases to validate content-type encoding and mule transformations . we need to add test cases that validate mule transformations when receiving a request in http listener and when sending a response . same with http requester . when mule receives a request in http : listener   then if the user wants to transform the message to an string we need to do the transformation taking into account the content-type header charset ( if there 's one ) . same when sending a response through http : listener and when using the http : request element .
483,fix spring-security tests . . there are many tests using static ports in this module . we need to change them for dynamic ones to avoid flakiness .
484,module http listener connector request based on path not working fine . when you use a wildcard to support a pattern in the path it 's not working fine in these scenarios : for path= '' /in_wildcard/ * '' / > 1 ) it does n't work consuming it with path= '' /in_wildcard/ '' 2 ) it does n't work consuming it with path= '' /in_wildcard/foo1/foo2 '' ( with /in_wildcard/foo1 works fine ) if i have another flow in the same app with a path= '' /in_wildcard/ * /subpath1 '' / > 1 ) it does n't work consuming it with path= '' /in_wildcard/foo1/subpath1 '' examples : < flow name= '' http_listener_test_wildcard '' > < http : listener host= '' localhost '' port= '' 8083 '' path= '' /in_wildcard/ * '' / > < set-payload value= '' testok '' / > < /flow > < flow name= '' http_listener_test_wildcard_2 '' > < http : listener host= '' localhost '' port= '' 8083 '' path= '' /in_wildcard/ * /subpath1 '' / > < set-payload value= '' testok123 '' / > < /flow > 1 ) get method : http : //localhost:8083/in_wildcard/ should return `` testok '' but it does n't work in that path ( status 404 no listener for endpoint : /in_wildcard/ ) 2 ) get method : http : //localhost:8083/in_wildcard/foo1/foo2 should return `` testok '' but it does n't work in that path ( status 404 no listener for endpoint : /in_wildcard/foo1/foo2/ ) 3 ) get method : http : //localhost:9001/in/in_wildcard/foo1/subpath1 should return `` testok123 '' but it does n't work in that path ( status 404 no listener for endpoint : /in_wildcard/foo1/subpath1 )
485,support keepalive for persistent connections in http connector . we need to support persistent connections   both for listener and request in the new connector .
486,general testing new http-module listener-requester . * http-listener * * response-builder inside and outside the listener * * headers * * streaming * * disablepropertiesasheaders * content type application/x-www-form-urlencoded * transfer encoding * error handler * proxy * security * * ssl-https * * basic auth - digest * threading profile * http-requester * * methods * * put * * post * error handler * security * * ssl-https * * basic auth - digest * consuming api with definition * * raml * * api def * testing general scenario for both   listener and requester * * deployment scenario * * standalone   cluster   webapp and ce standalone * shared connector ce and shared connector ee * reliability pattern * synchronous and asynchronous * request-response * * one-way * * request-reply * cxf ws and jersey
487,merge http connector code cleanup and merge . cleanup code from the http connector module and merge it into 3.6 branch .
488,replace builders with a fluent api . replace the builders with a fluent api at an extensionmanager or describer level . a mockup to take as reference ( not commitment ) of what we 're shooting for is this : { code : java } public construct test ( ) { return new declarationconstruct ( `` ws-consumer ''   `` 1.0 '' ) .describedas ( `` web service consumer '' ) .withconfig ( `` config '' ) .declaredin ( string.class ) .with ( ) .requiredparameter ( `` wsdl-location '' ) .describedas ( `` uri to find the wsdl '' ) .oftype ( string.class ) .whichisnotdynamic ( ) .with ( ) .requiredparameter ( `` service '' ) .describedas ( `` servicename '' ) .oftype ( string.class ) .withconfig ( `` newconnector '' ) .with ( ) .requiredparameter ( `` wsdl-location '' ) .describedas ( `` uri to find the wsdl '' ) .oftype ( string.class ) .whichisdynamic ( ) .with ( ) .requiredparameter ( `` service '' ) .describedas ( `` servicename '' ) .oftype ( string.class ) .with ( ) .optionalparameter ( `` connector '' ) .describedas ( `` the connector to use '' ) .oftype ( object.class ) .defaultingto ( null ) .withoperation ( `` consume '' ) .describedas ( `` go get them tiger ! '' ) .with ( ) .requiredparameter ( `` operation '' ) .describedas ( `` the operation to execute '' ) .oftype ( string.class ) .with ( ) .optionalparameter ( `` mtomenabled '' ) .describedas ( `` whether to use mtom or not '' ) .oftype ( boolean.class ) ; } { code } this should improve usability and reduce the complexity of our own code since now the builder implementation is part of the api
489,remove prefixes from ext-api core classes . remove the `` extension '' prefix from classes such as extensionconfiguration   extensionparameter   extensionoperation   etc
490,remove minmuleversion restricition from extensions api . in the future   we 'll shoot for letting the runtime should decide this based on the extensions metadata
491,remove the api subpackage in the extensions api . extensions api will be beta during the whole 3.x series   so it should n't have the api keyword on its packages . when we move to mule 4   extensions api will be an osgi bundle so the whole api classification makes no sense anymore
492,reduce the amount of datatypequalifiers . we need less datatypequalifiers than we 're actually supporting . the following should be removed : * stream * void the following should be collapsed : * short / int * date / date_time
493,enable registration of top level pojos . enable registering pojos as top level elements . the logic to do this is already done   all that 's missing is the namespacehandler for it and testing
494,forbid one same class to define both configurations and operations . configurations and operations have to be defined in separate classes .
495,replace current extensions discoverer with osgish activator class . in order to be aligned with mule 's osgified future   replace the current discovery model with something of this sort : public class myactivator implements extensionactivator { public void init ( manager mgr ) { fluentapi.stuff ( ) ; } } } the activator is to be discovered through standard java spi
496,allow to configure a proxy for outbound http connections . the current http transport allows to configure a proxy for outbound connections . the same feature should be available in the new http module .
497,exceptionstrategynotification returns null resourceid . when an exceptionstrategynotification inside a flow is executed mule sends the resourceidentifier in null ( it should send the name of the flow ) attached is and app example 1- deploy agenttest.zip app in mule 2- call the following url : http : < mule ip > :9900/exceptionstrategy verify that the notification sends by mule contains the resourceidentifier in null
498,transactionnotification should return the name of the application that triggered it . when the agent receives a transaction notification there is no way to know the name of the application
499,datasense does n't recognise named columns correctly with mysql joined queries . as is : i am using mysql database connector to issue the following query : select a.item_id as ` parentitemid `   a.item_name as ` parentitemname `   c.item_id as ` itemid `   c.item_name as ` itemname `   b.level as ` levelid ` from item a   item_hierarchy b   item c where a.item_id = b.parent_item_id and b.item_id = c.item_id ; the join works as expected as does the mysql connector by returning the correct data . but datasense in studio in studio in the data preview shows the following structure : payload > list < map > : list > > item_id : integer > > item_name : string > > level : string also leaving out the `` as ` descriptor ` `` only shows 3 result columns instead of 5 the query returns . to be : studio should show in design mode payload > list < map > : list > > parentitemid : integer > > parentitemname : string > > itemid : integer > > itemname : string > > levelid : integer mule xml : < ? xml version= '' 1.0 '' encoding= '' utf-8 '' ? > < mule xmlns : neo4j= '' http : //www.mulesoft.org/schema/mule/neo4j '' xmlns : http= '' http : //www.mulesoft.org/schema/mule/http '' xmlns : db= '' http : //www.mulesoft.org/schema/mule/db '' xmlns= '' http : //www.mulesoft.org/schema/mule/core '' xmlns : doc= '' http : //www.mulesoft.org/schema/mule/documentation '' xmlns : spring= '' http : //www.springframework.org/schema/beans '' version= '' ee-3.5.1 '' xmlns : xsi= '' http : //www.w3.org/2001/xmlschema-instance '' xsi : schemalocation= '' http : //www.springframework.org/schema/beans http : //www.springframework.org/schema/beans/spring-beans-current.xsd http : //www.mulesoft.org/schema/mule/core http : //www.mulesoft.org/schema/mule/core/current/mule.xsd http : //www.mulesoft.org/schema/mule/db http : //www.mulesoft.org/schema/mule/db/current/mule-db.xsd http : //www.mulesoft.org/schema/mule/http http : //www.mulesoft.org/schema/mule/http/current/mule-http.xsd http : //www.mulesoft.org/schema/mule/neo4j http : //www.mulesoft.org/schema/mule/neo4j/current/mule-neo4j.xsd '' > < db : mysql-config name= '' mysql_configuration '' host= '' localhost '' port= '' 3306 '' user= '' const '' password= '' const '' database= '' construction_machines '' doc : name= '' mysql configuration '' / > < neo4j : config name= '' neo4j '' doc : name= '' neo4j '' > < neo4j : connection-pooling-profile initialisationpolicy= '' initialise_one '' exhaustedaction= '' when_exhausted_grow '' / > < /neo4j : config > < flow name= '' constructionflow1 '' doc : name= '' constructionflow1 '' > < http : inbound-endpoint exchange-pattern= '' request-response '' host= '' localhost '' port= '' 8081 '' doc : name= '' http '' / > < db : select config-ref= '' mysql_configuration '' doc : name= '' database '' > < db : parameterized-query > < ! [ cdata [ select a.item_id as ` parentitemid `   a.item_name as ` parentitemname `   c.item_id as ` itemid `   c.item_name as ` itemname `   b.level as ` levelid ` from item a   item_hierarchy b   item c where a.item_id = b.parent_item_id and b.item_id = c.item_id ; ] ] > < /db : parameterized-query > < /db : select > < logger level= '' info '' doc : name= '' logger '' / > < neo4j : create-node config-ref= '' neo4j '' doc : name= '' neo4j '' > < neo4j : properties ref= '' # [ payload ] '' / > < /neo4j : create-node > < /flow > < /mule >
500,uri parameters should appear decoded in the inboundproperties . when a uri paramter is sent with an encoded character it does n't appear decoded in the inboundproperties ( http.uri.params ) . example : < http : listener-config name= '' listenerconfig_9000_uri_parameters '' host= '' localhost '' port= '' 9000 '' / > < flow name= '' http_listener_test_listener_config '' > < http : listener path= '' /resource/ { resource_param } '' config-ref= '' listenerconfig_9000_uri_parameters '' / > < set-payload value= '' # [ message.inboundproperties [ 'http.uri.params ' ] ] '' / > < /flow > http : //localhost:9000/resource/value 01/ ( value '' `` 01 = space between value and 01 ) it will be send encoded to http : //localhost:9000/resource/value % 2001/ or http : //localhost:9000/resource/value+01/ but it has to appear in the http.uri.params as `` value 01 '' not as `` value+01 '' when i obtain the `` resource_param '' .
501,change contributors guide to include accepting the agreement . we need to change the contributors file to include the terms to accept the license agreement .
502,http module configured as proxy duplicate messages . seems that new http connector configured for proxy scenario is sending more request to the client server than expected . see test case httpproxytemplatetestcase   proxystreaming  
503,add behaviour to send a flow message source response asynchronously . currently we can process a message through messageprocessingmanager but the processing is done all synchronous . we need   for the new http module   to add support to send the http response asynchronously . the only change required so far is a new flowprocessingphase with support for asynchronous dispatching of the response message .
504,remove the concept of input and output types from an extension operation . remove the concept of input and output types from an extension operation
505,fix httplistenerattachmentstestcase . there is an ignored test in httplistenerattachmentstestcase   from the new http module . the test class contains two test methods   if run independently they both work fine . if run together   then sometimes one of them fails ( the whan that is ignored ) . apparently there may be an issue with the content lenghts of the multipart requests that are being generated   but further investigation needs to be done on this .
506,http listener fail to send response after receiving a big payload with transfer-encoding chunk . when sending a big payload with transfer-encoding chunk to an http listener   then the listener fails to send the response . see org.mule.module.http.functional.listener.httplistenerrequeststreamingtestcase .
507,remove method from httprequestbuilder . remove httprequestbuilder # getheaders . refactor the way an httprequest is created based on the muleevent so that there is no need to have this getter in the builder .
508,allow to enable/disable cookies in the outbound part of the http connector . provide a way to enable/disable cookies in the requests that are sent by the http requester in the new module .
509,support shared http listener and request config in domains . we need to be able to shared http : listener-config and http : request-config betweens applications using domains .
510,scatter-gather : custom aggregation strategy - aggregationcontext gives wrong events when exceptions occur . when implementing a custom aggregation strategy ( as a java class ) as in the documentation : http : //www.mulesoft.org/documentation/display/current/scatter-gather   section complete code example there seems to be an issue with messages that throw exceptions . it seems that the method collecteventswithexceptions ( ) from aggregationcontext gives the event ( s ) as they were before entering the scatter-gather . so it is basically impossible to get the message ( s ) that actually caused the exception . collecteventswithoutexceptions ( ) - works as expected
511,new http module request not encode values in the path attribute . in the new http request module when you use a path that have chars that need to be encoded it does n't produce an uri with the values encoded . for example : < http : request-config name= '' configwithoutbasepath '' host= '' localhost '' port= '' $ { httpport } '' / > < flow name= '' requestwithoutbasepathencodedvalues '' > < http : request config-ref= '' configwithoutbasepath '' host= '' localhost '' port= '' $ { httpport } '' path= '' /out 1 '' / > < /flow > the path in this case has to be encoded and arrive to the listener server as `` /out % 201 ''
512,checkexclusiveattributes should ignore documentation namespace . classes like org.mule.config.spring.factories.aggregationstrategydefinitionparser register the pre processor : org.mule.config.spring.parsers.processors.checkexclusiveattribute now this preprocessor validates that only one attribute is present in this element . while this implementation seems o be correct it also stops me from adding any other attribute even though it belongs to a different namespace . for instance : < custom-aggregation-strategy class= '' org.mule.munit.customaggregationstrategy '' doc : name= '' lalala '' / > this definition fails and i 'm only adding an doc : name . here is the exception : org.mule.module.launcher.deploymentinitexception : checkexclusiveattribute.checkexclusiveattributeexception : the attribute 'class ' can not appear with the attribute 'name ' in element custom-aggregation-strategy { class=org.mule.munit.customaggregationstrategy   name=lalala } . org.mule.module.launcher.application.defaultmuleapplication.init ( defaultmuleapplication.java:181 ) org.mule.module.launcher.artifact.artifactwrapper $ 2.execute ( artifactwrapper.java:62 ) org.mule.module.launcher.artifact.artifactwrapper.executewithinartifactclassloader ( artifactwrapper.java:129 ) org.mule.module.launcher.artifact.artifactwrapper.init ( artifactwrapper.java:57 ) org.mule.module.launcher.defaultartifactdeployer.deploy ( defaultartifactdeployer.java:25 ) org.mule.module.launcher.defaultarchivedeployer.guardeddeploy ( defaultarchivedeployer.java:274 ) org.mule.module.launcher.defaultarchivedeployer.deployartifact ( defaultarchivedeployer.java:294 ) org.mule.module.launcher.defaultarchivedeployer.deployexplodedapp ( defaultarchivedeployer.java:261 ) org.mule.module.launcher.defaultarchivedeployer.deployexplodedartifact ( defaultarchivedeployer.java:110 ) org.mule.module.launcher.deploymentdirectorywatcher.deployexplodedapps ( deploymentdirectorywatcher.java:287 ) org.mule.module.launcher.deploymentdirectorywatcher.start ( deploymentdirectorywatcher.java:148 ) org.mule.tooling.server.application.applicationdeployer.main ( applicationdeployer.java:130 ) please check attached the full xml to reproduce . could you please modify the implementation of checkexclusiveattribute to support this ?
513,be able to use the new http connector with the jersey module . test the jersey module using the listener from the new http module instead of an http inbound endpoint . make the required fixes to make it work .
514,xml parser error when using response builder with the new http listener . when you want to use the response builder with the new http listener it throws an unexpected exception parsing the xml document ( see log output ) . maybe there is a problem when having the dependencies of the old http and the new one at the same time . because a similar test case executed directly in the mule-module-http project works fine . similar issue mule-8017 .
515,remove duplicate message creation from test cases . . after mule-8028 there are several test cases duplicating code to for mule message creation . we should add a method in our test infrastructure and reuse that .
516,variables created after a scatter and gather are null even when value was set . . variables created after a scatter and gather are null even when value was set . putting the scatter and gather inside a enricher solves the problem . project attached .
517,change defaulthttprequester to receive a configuration object instead of separated attributes for each configuration value . in http connector   there is a httprequesterbuilder # setoperationconfig ( httprequestoptions ) method which is used to configure a defaulthttprequester instance . that configuration is done invoking every property setter in defaulthttprequester . defaulthttprequester must accept a httprequestoptions instead of having properties for each configurable value to reduce code duplication and make the code more simple
518,decouple the extension-api from the concept of declaring or acting classes . currently   the extension   configuration and operation interfaces have the concept of declaring or acting classes . this ties the api to the traditional implementation model of annotated classes   which might not always be the case . decouple that by introducing two new interfaces : configurationintantiator and operationimplementation
519,add tests to verify that extension api parsers support place holders . in the tests that validate the parsing of configurations and operations through xml   validate that property placeholders are correclty resolved
520,define a richer set of expression aware xsd types . now that the extensions api is going to make the parsing of expressions easier and enabled by default on every component   we should define new xsd types which bette reflect the expected return types . for example : * expressionsubstitutablestring * expressionsubstitutableint * etc things to discuss and define : * do we always allow embedded expressions ? * is `` # [ foo ] `` a valid expression ?
521,jersey fails to retrieve cookie when running with new http module . . jersey fails to retrieve cookie when running with new http module . see org.mule.module.jersey.jerseycookiepropagationtestcase
522,http requester returns 200 instead of the actual request status code . . on the proxy scenario   when the proxied service is unavailable a 500 response should be received   instead it is responding with `` 200 internal server error '' which does n't respect the http protocol . steps to reproduce : - deploy application . - make sure there is no service being proxy . - hit the endpoint . - a response containing the status `` 200 internal server error '' will be shown . expected behaviour : the requester and proxy escenario should reply with the same status code and message .
523,merge appkit and mule esb maven plugin in a single repository and fix naming conventions . the two projects ( part of the early access beta for 3.6 ) shown here should be merged . users should have one consolidated maven extension . http : //www.mulesoft.org/documentation/display/earlyaccess/maven+tools+for+mule+esb http : //www.mulesoft.org/documentation/display/earlyaccess/mule+esb+plugin+for+maven
524,fix flaky test authorizationcodeminimalconfigtestcase . fix flaky test authorizationcodeminimalconfigtestcase . failure is : java.net.sockettimeoutexception : read timed out java.net.socketinputstream.socketread0 ( native method ) java.net.socketinputstream.read ( socketinputstream.java:152 ) java.net.socketinputstream.read ( socketinputstream.java:122 ) org.apache.http.impl.io.sessioninputbufferimpl.streamread ( sessioninputbufferimpl.java:136 ) org.apache.http.impl.io.sessioninputbufferimpl.fillbuffer ( sessioninputbufferimpl.java:152 ) org.apache.http.impl.io.sessioninputbufferimpl.readline ( sessioninputbufferimpl.java:270 ) org.apache.http.impl.conn.defaulthttpresponseparser.parsehead ( defaulthttpresponseparser.java:140 ) org.apache.http.impl.conn.defaulthttpresponseparser.parsehead ( defaulthttpresponseparser.java:57 ) org.apache.http.impl.io.abstractmessageparser.parse ( abstractmessageparser.java:260 ) org.apache.http.impl.defaultbhttpclientconnection.receiveresponseheader ( defaultbhttpclientconnection.java:161 ) org.apache.http.impl.conn.cpoolproxy.receiveresponseheader ( cpoolproxy.java:153 ) org.apache.http.protocol.httprequestexecutor.doreceiveresponse ( httprequestexecutor.java:271 ) org.apache.http.protocol.httprequestexecutor.execute ( httprequestexecutor.java:123 ) org.apache.http.impl.execchain.mainclientexec.execute ( mainclientexec.java:254 ) org.apache.http.impl.execchain.protocolexec.execute ( protocolexec.java:195 ) org.apache.http.impl.execchain.retryexec.execute ( retryexec.java:86 ) org.apache.http.impl.execchain.redirectexec.execute ( redirectexec.java:108 ) org.apache.http.impl.client.internalhttpclient.doexecute ( internalhttpclient.java:184 ) org.apache.http.impl.client.closeablehttpclient.execute ( closeablehttpclient.java:82 ) org.apache.http.impl.client.closeablehttpclient.execute ( closeablehttpclient.java:106 ) org.apache.http.impl.client.closeablehttpclient.execute ( closeablehttpclient.java:57 ) org.apache.http.client.fluent.request.execute ( request.java:143 ) org.mule.module.oauth2.internal.authorizationcode.functional.authorizationcodeminimalconfigtestcase.hitredirecturlandgettoken ( authorizationcodeminimalconfigtestcase.java:29 ) sun.reflect.nativemethodaccessorimpl.invoke0 ( native method ) sun.reflect.nativemethodaccessorimpl.invoke ( nativemethodaccessorimpl.java:57 ) sun.reflect.delegatingmethodaccessorimpl.invoke ( delegatingmethodaccessorimpl.java:43 ) java.lang.reflect.method.invoke ( method.java:606 ) org.junit.runners.model.frameworkmethod $ 1.runreflectivecall ( frameworkmethod.java:47 ) org.junit.internal.runners.model.reflectivecallable.run ( reflectivecallable.java:12 ) org.junit.runners.model.frameworkmethod.invokeexplosively ( frameworkmethod.java:44 ) org.junit.internal.runners.statements.invokemethod.evaluate ( invokemethod.java:17 ) org.junit.internal.runners.statements.runbefores.evaluate ( runbefores.java:26 ) org.junit.internal.runners.statements.runafters.evaluate ( runafters.java:27 ) org.junit.rules.externalresource $ 1.evaluate ( externalresource.java:48 ) org.junit.rules.externalresource $ 1.evaluate ( externalresource.java:48 ) org.junit.rules.externalresource $ 1.evaluate ( externalresource.java:48 ) com.github.tomakehurst.wiremock.junit.wiremockrule $ 1.evaluate ( wiremockrule.java:74 ) org.junit.rules.externalresource $ 1.evaluate ( externalresource.java:48 ) org.junit.rules.externalresource $ 1.evaluate ( externalresource.java:48 ) org.junit.rules.externalresource $ 1.evaluate ( externalresource.java:48 ) org.junit.rules.externalresource $ 1.evaluate ( externalresource.java:48 ) org.junit.rules.externalresource $ 1.evaluate ( externalresource.java:48 ) org.junit.rules.externalresource $ 1.evaluate ( externalresource.java:48 ) org.junit.rules.externalresource $ 1.evaluate ( externalresource.java:48 ) org.junit.rules.testwatcher $ 1.evaluate ( testwatcher.java:55 ) org.junit.internal.runners.statements.failontimeout $ statementthread.run ( failontimeout.java:74 )
525,be able to use cxf with the new http connector . make sure that the cxf module can be used with the new http module ( both inbound and outbound ) . do the changes required for this .
526,write proposal for new splitters and aggregators . new splitters and agregators have been discussed along past brown bags . we need to write down the findings   fill the gaps and create a proposal to discuss .
527,backport mule-7611 to mule 3.5.x . mule mvel had a bug related to caching null subexpressions   whih is fixed in mule-7611 . backport the fix to the mule 3.5 branch so that the next bug fix release contains it . ( the fix is actually upgrading mule-mvel dependency )
528,cast exception on the proxy http scenario . . when running the proxy scenario of the http module   a very small percentage of the requests fails with the shown exception .
529,file handlers are not closed after a queue is disposed . per the queue contract   when a queue is disposed all its storage is to be freed and the resources released . however   it is only clearing the storage but the file handlers remain open . i have verified that the number of files in the queuestore directory in .mule/ grows constantly . checked with lsof -p < pid > code is in github at https : //github.com/mulesoft-consulting/ucso-api-manager.git
530,wrong attributes for tls in oauth config . attributes requestconfig and listenerconfig were not removed from the oauth authorization grant types . we need to use tlscontext-ref instead .
531,email address dev @ mule.codehaus.org bounces back in `` warn org.mule.defaultmulemessage : setproperty ( key   value ) called with null value '' . using a message enricher to extract a non-existent property from the current payload and assign it to a flow variable causes the following warning . it has been reported that an email to the given address dev @ mule.codehaus.org just bounced back . please correct the email address   or remove the stack trace ( which makes it look much worse than a warning )   or remove the message from being logged in this situation altogether . warn 2014-11-14 16:07:37 292 [ [ < removing project name from jira > ] .httpc.receiver.04 ] org.mule.defaultmulemessage : setproperty ( key   value ) called with null value ; removing key : < removing key name from jira > ; please report the following stack trace to dev @ mule.codehaus.org java.lang.throwable at org.mule.defaultmulemessage.setproperty ( defaultmulemessage.java:470 ) at org.mule.el.context.messagepropertymapcontext.put ( messagepropertymapcontext.java:49 ) at org.mule.el.context.messagepropertymapcontext.put ( messagepropertymapcontext.java:17 ) at org.mule.mvel2.optimizers.impl.refl.nodes.mapaccessor.setvalue ( mapaccessor.java:52 ) at org.mule.mvel2.optimizers.impl.refl.nodes.variableaccessor.setvalue ( variableaccessor.java:46 ) at org.mule.mvel2.compiler.compiledaccexpression.setvalue ( compiledaccexpression.java:59 ) at org.mule.mvel2.ast.deepassignmentnode.getreducedvalueaccelerated ( deepassignmentnode.java:92 ) at org.mule.mvel2.mvelruntime.execute ( mvelruntime.java:86 ) at org.mule.mvel2.compiler.compiledexpression.getdirectvalue ( compiledexpression.java:123 ) at org.mule.mvel2.compiler.compiledexpression.getvalue ( compiledexpression.java:119 ) at org.mule.mvel2.mvel.executeexpression ( mvel.java:943 ) at org.mule.el.mvel.mvelexpressionexecutor.execute ( mvelexpressionexecutor.java:72 ) at org.mule.el.mvel.mvelexpressionlanguage.evaluateinternal ( mvelexpressionlanguage.java:198 ) at org.mule.el.mvel.mvelexpressionlanguage.evaluate ( mvelexpressionlanguage.java:183 ) at org.mule.expression.defaultexpressionmanager.enrich ( defaultexpressionmanager.java:244 ) at org.mule.enricher.messageenricher.enrich ( messageenricher.java:112 ) at org.mule.enricher.messageenricher.process ( messageenricher.java:78 ) at org.mule.execution.exceptiontomessagingexceptionexecutioninterceptor.execute ( exceptiontomessagingexceptionexecutioninterceptor.java:24 ) at org.mule.execution.messageprocessornotificationexecutioninterceptor.execute ( messageprocessornotificationexecutioninterceptor.java:58 ) at org.mule.execution.messageprocessorexecutiontemplate.execute ( messageprocessorexecutiontemplate.java:44 ) at org.mule.processor.chain.defaultmessageprocessorchain.doprocess ( defaultmessageprocessorchain.java:94 ) at org.mule.processor.chain.abstractmessageprocessorchain.process ( abstractmessageprocessorchain.java:67 ) at org.mule.processor.chain.interceptingchainlifecyclewrapper.doprocess ( interceptingchainlifecyclewrapper.java:50 ) at org.mule.processor.chain.abstractmessageprocessorchain.process ( abstractmessageprocessorchain.java:67 ) at org.mule.processor.chain.interceptingchainlifecyclewrapper.access $ 001 ( interceptingchainlifecyclewrapper.java:22 ) at org.mule.processor.chain.interceptingchainlifecyclewrapper $ 1.process ( interceptingchainlifecyclewrapper.java:66 ) at org.mule.execution.exceptiontomessagingexceptionexecutioninterceptor.execute ( exceptiontomessagingexceptionexecutioninterceptor.java:24 ) at org.mule.execution.messageprocessornotificationexecutioninterceptor.execute ( messageprocessornotificationexecutioninterceptor.java:58 ) at org.mule.execution.messageprocessorexecutiontemplate.execute ( messageprocessorexecutiontemplate.java:44 ) at org.mule.processor.chain.interceptingchainlifecyclewrapper.process ( interceptingchainlifecyclewrapper.java:61 ) at org.mule.routing.abstractselectiverouter.processeventwithprocessor ( abstractselectiverouter.java:308 ) at org.mule.routing.abstractselectiverouter.routewithprocessors ( abstractselectiverouter.java:298 ) at org.mule.routing.abstractselectiverouter.routewithprocessor ( abstractselectiverouter.java:288 ) at org.mule.routing.abstractselectiverouter.process ( abstractselectiverouter.java:203 ) at org.mule.execution.exceptiontomessagingexceptionexecutioninterceptor.execute ( exceptiontomessagingexceptionexecutioninterceptor.java:24 ) at org.mule.execution.messageprocessornotificationexecutioninterceptor.execute ( messageprocessornotificationexecutioninterceptor.java:58 ) at org.mule.execution.messageprocessorexecutiontemplate.execute ( messageprocessorexecutiontemplate.java:44 ) at org.mule.processor.chain.defaultmessageprocessorchain.doprocess ( defaultmessageprocessorchain.java:94 ) at org.mule.processor.chain.abstractmessageprocessorchain.process ( abstractmessageprocessorchain.java:67 ) at org.mule.execution.exceptiontomessagingexceptionexecutioninterceptor.execute ( exceptiontomessagingexceptionexecutioninterceptor.java:24 ) at org.mule.execution.messageprocessorexecutiontemplate.execute ( messageprocessorexecutiontemplate.java:44 ) at org.mule.processor.abstractinterceptingmessageprocessorbase.processnext ( abstractinterceptingmessageprocessorbase.java:102 ) at org.mule.construct.dynamicpipelinemessageprocessor.process ( dynamicpipelinemessageprocessor.java:54 ) at org.mule.execution.exceptiontomessagingexceptionexecutioninterceptor.execute ( exceptiontomessagingexceptionexecutioninterceptor.java:24 ) at org.mule.execution.messageprocessornotificationexecutioninterceptor.execute ( messageprocessornotificationexecutioninterceptor.java:58 ) at org.mule.execution.messageprocessorexecutiontemplate.execute ( messageprocessorexecutiontemplate.java:44 ) at org.mule.processor.chain.defaultmessageprocessorchain.doprocess ( defaultmessageprocessorchain.java:94 ) at org.mule.processor.chain.abstractmessageprocessorchain.process ( abstractmessageprocessorchain.java:67 ) at org.mule.execution.exceptiontomessagingexceptionexecutioninterceptor.execute ( exceptiontomessagingexceptionexecutioninterceptor.java:24 ) at org.mule.execution.messageprocessorexecutiontemplate.execute ( messageprocessorexecutiontemplate.java:44 ) at org.mule.processor.abstractinterceptingmessageprocessorbase.processnext ( abstractinterceptingmessageprocessorbase.java:102 ) at org.mule.interceptor.abstractenvelopeinterceptor.process ( abstractenvelopeinterceptor.java:51 ) at org.mule.execution.exceptiontomessagingexceptionexecutioninterceptor.execute ( exceptiontomessagingexceptionexecutioninterceptor.java:24 ) at org.mule.execution.messageprocessornotificationexecutioninterceptor.execute ( messageprocessornotificationexecutioninterceptor.java:58 ) at org.mule.execution.messageprocessorexecutiontemplate.execute ( messageprocessorexecutiontemplate.java:44 ) at org.mule.processor.abstractinterceptingmessageprocessorbase.processnext ( abstractinterceptingmessageprocessorbase.java:102 ) at org.mule.processor.abstractfilteringmessageprocessor.process ( abstractfilteringmessageprocessor.java:40 ) at org.mule.execution.exceptiontomessagingexceptionexecutioninterceptor.execute ( exceptiontomessagingexceptionexecutioninterceptor.java:24 ) at org.mule.execution.messageprocessornotificationexecutioninterceptor.execute ( messageprocessornotificationexecutioninterceptor.java:58 ) at org.mule.execution.messageprocessorexecutiontemplate.execute ( messageprocessorexecutiontemplate.java:44 ) at org.mule.processor.abstractinterceptingmessageprocessorbase.processnext ( abstractinterceptingmessageprocessorbase.java:102 ) at org.mule.construct.abstractpipeline $ 1.process ( abstractpipeline.java:109 ) at org.mule.execution.exceptiontomessagingexceptionexecutioninterceptor.execute ( exceptiontomessagingexceptionexecutioninterceptor.java:24 ) at org.mule.execution.messageprocessornotificationexecutioninterceptor.execute ( messageprocessornotificationexecutioninterceptor.java:58 ) at org.mule.execution.messageprocessorexecutiontemplate.execute ( messageprocessorexecutiontemplate.java:44 ) at org.mule.processor.chain.defaultmessageprocessorchain.doprocess ( defaultmessageprocessorchain.java:94 ) at org.mule.processor.chain.abstractmessageprocessorchain.process ( abstractmessageprocessorchain.java:67 ) at org.mule.processor.chain.interceptingchainlifecyclewrapper.doprocess ( interceptingchainlifecyclewrapper.java:50 ) at org.mule.processor.chain.abstractmessageprocessorchain.process ( abstractmessageprocessorchain.java:67 ) at org.mule.processor.chain.interceptingchainlifecyclewrapper.access $ 001 ( interceptingchainlifecyclewrapper.java:22 ) at org.mule.processor.chain.interceptingchainlifecyclewrapper $ 1.process ( interceptingchainlifecyclewrapper.java:66 ) at org.mule.execution.exceptiontomessagingexceptionexecutioninterceptor.execute ( exceptiontomessagingexceptionexecutioninterceptor.java:24 ) at org.mule.execution.messageprocessornotificationexecutioninterceptor.execute ( messageprocessornotificationexecutioninterceptor.java:58 ) at org.mule.execution.messageprocessorexecutiontemplate.execute ( messageprocessorexecutiontemplate.java:44 ) at org.mule.processor.chain.interceptingchainlifecyclewrapper.process ( interceptingchainlifecyclewrapper.java:61 ) at org.mule.construct.abstractpipeline $ 3.process ( abstractpipeline.java:207 ) at org.mule.execution.exceptiontomessagingexceptionexecutioninterceptor.execute ( exceptiontomessagingexceptionexecutioninterceptor.java:24 ) at org.mule.execution.messageprocessornotificationexecutioninterceptor.execute ( messageprocessornotificationexecutioninterceptor.java:58 ) at org.mule.execution.messageprocessorexecutiontemplate.execute ( messageprocessorexecutiontemplate.java:44 ) at org.mule.processor.chain.simplemessageprocessorchain.doprocess ( simplemessageprocessorchain.java:43 ) at org.mule.processor.chain.abstractmessageprocessorchain.process ( abstractmessageprocessorchain.java:67 ) at org.mule.processor.chain.interceptingchainlifecyclewrapper.doprocess ( interceptingchainlifecyclewrapper.java:50 ) at org.mule.processor.chain.abstractmessageprocessorchain.process ( abstractmessageprocessorchain.java:67 ) at org.mule.processor.chain.interceptingchainlifecyclewrapper.access $ 001 ( interceptingchainlifecyclewrapper.java:22 ) at org.mule.processor.chain.interceptingchainlifecyclewrapper $ 1.process ( interceptingchainlifecyclewrapper.java:66 ) at org.mule.execution.exceptiontomessagingexceptionexecutioninterceptor.execute ( exceptiontomessagingexceptionexecutioninterceptor.java:24 ) at org.mule.execution.messageprocessornotificationexecutioninterceptor.execute ( messageprocessornotificationexecutioninterceptor.java:58 ) at org.mule.execution.messageprocessorexecutiontemplate.execute ( messageprocessorexecutiontemplate.java:44 ) at org.mule.processor.chain.interceptingchainlifecyclewrapper.process ( interceptingchainlifecyclewrapper.java:61 ) at org.mule.execution.exceptiontomessagingexceptionexecutioninterceptor.execute ( exceptiontomessagingexceptionexecutioninterceptor.java:24 ) at org.mule.execution.messageprocessornotificationexecutioninterceptor.execute ( messageprocessornotificationexecutioninterceptor.java:58 ) at org.mule.execution.messageprocessorexecutiontemplate.execute ( messageprocessorexecutiontemplate.java:44 ) at org.mule.processor.chain.simplemessageprocessorchain.doprocess ( simplemessageprocessorchain.java:43 ) at org.mule.processor.chain.abstractmessageprocessorchain.process ( abstractmessageprocessorchain.java:67 ) at org.mule.processor.chain.interceptingchainlifecyclewrapper.doprocess ( interceptingchainlifecyclewrapper.java:50 ) at org.mule.processor.chain.abstractmessageprocessorchain.process ( abstractmessageprocessorchain.java:67 ) at org.mule.processor.chain.interceptingchainlifecyclewrapper.access $ 001 ( interceptingchainlifecyclewrapper.java:22 ) at org.mule.processor.chain.interceptingchainlifecyclewrapper $ 1.process ( interceptingchainlifecyclewrapper.java:66 ) at org.mule.execution.exceptiontomessagingexceptionexecutioninterceptor.execute ( exceptiontomessagingexceptionexecutioninterceptor.java:24 ) at org.mule.execution.messageprocessornotificationexecutioninterceptor.execute ( messageprocessornotificationexecutioninterceptor.java:58 ) at org.mule.execution.messageprocessorexecutiontemplate.execute ( messageprocessorexecutiontemplate.java:44 ) at org.mule.processor.chain.interceptingchainlifecyclewrapper.process ( interceptingchainlifecyclewrapper.java:61 ) at org.mule.transport.abstractmessagereceiver.routeevent ( abstractmessagereceiver.java:511 ) at org.mule.transport.abstractmessagereceiver.routemessage ( abstractmessagereceiver.java:226 ) at org.mule.transport.abstractmessagereceiver.routemessage ( abstractmessagereceiver.java:208 ) at org.mule.transport.abstractmessagereceiver.routemessage ( abstractmessagereceiver.java:200 ) at org.mule.transport.abstractmessagereceiver.routemessage ( abstractmessagereceiver.java:187 ) at org.mule.transport.http.httpmessagereceiver $ 7 $ 1.process ( httpmessagereceiver.java:483 ) at org.mule.transport.http.httpmessagereceiver $ 7 $ 1.process ( httpmessagereceiver.java:480 ) at org.mule.execution.executecallbackinterceptor.execute ( executecallbackinterceptor.java:16 ) at org.mule.execution.handleexceptioninterceptor.execute ( handleexceptioninterceptor.java:30 ) at org.mule.execution.handleexceptioninterceptor.execute ( handleexceptioninterceptor.java:14 ) at org.mule.execution.beginandresolvetransactioninterceptor.execute ( beginandresolvetransactioninterceptor.java:54 ) at org.mule.execution.resolveprevioustransactioninterceptor.execute ( resolveprevioustransactioninterceptor.java:44 ) at org.mule.execution.suspendxatransactioninterceptor.execute ( suspendxatransactioninterceptor.java:50 ) at org.mule.execution.validatetransactionalstateinterceptor.execute ( validatetransactionalstateinterceptor.java:40 ) at org.mule.execution.isolatecurrenttransactioninterceptor.execute ( isolatecurrenttransactioninterceptor.java:41 ) at org.mule.execution.externaltransactioninterceptor.execute ( externaltransactioninterceptor.java:48 ) at org.mule.execution.rethrowexceptioninterceptor.execute ( rethrowexceptioninterceptor.java:28 ) at org.mule.execution.rethrowexceptioninterceptor.execute ( rethrowexceptioninterceptor.java:13 ) at org.mule.execution.transactionalerrorhandlingexecutiontemplate.execute ( transactionalerrorhandlingexecutiontemplate.java:109 ) at org.mule.execution.transactionalerrorhandlingexecutiontemplate.execute ( transactionalerrorhandlingexecutiontemplate.java:30 ) at org.mule.transport.http.httpmessagereceiver $ 7.process ( httpmessagereceiver.java:479 ) at org.mule.transport.http.httpmessagereceiver $ 7.process ( httpmessagereceiver.java:475 ) at org.mule.transport.http.throttlingexecutiontemplate.execute ( throttlingexecutiontemplate.java:91 ) at org.mule.transport.http.httpmessagereceiver.routehttprequest ( httpmessagereceiver.java:474 ) at org.mule.transport.http.httpmessagereceiver.routerequest ( httpmessagereceiver.java:415 ) at org.mule.transport.http.httpmessagereceiverrouterworker.run ( httpmessagereceiverrouterworker.java:31 ) at org.mule.transport.trackingworkmanager $ trackeablework.run ( trackingworkmanager.java:267 ) at org.mule.work.workercontext.run ( workercontext.java:286 ) at java.util.concurrent.threadpoolexecutor.runworker ( threadpoolexecutor.java:1145 ) at java.util.concurrent.threadpoolexecutor $ worker.run ( threadpoolexecutor.java:615 ) at java.lang.thread.run ( thread.java:745 )
532,http listener with basic auth should return status code 401 when authentication fails . when using the basic-auth with the new module http listener it returns a 500 status code but it would be better to return a 401 like the old http does . example : < flow name= '' listenerbasicauth '' > < http : listener config-ref= '' listenerconfigbasicauth '' path= '' /basic/ '' / > < http : basic-security-filter realm= '' mule-realm '' / > < ! -- < mule-ss : http-security-filter realm= '' mule-realm '' / > -- > < set-payload value= '' testbasicauthok '' / > < /flow > < flow name= '' httpinboundbasicauth '' > < inbound-endpoint address= '' http : //localhost:9016/http_basic '' > < mule-ss : http-security-filter realm= '' mule-realm '' / > < /inbound-endpoint > < set-payload value= '' testhttpbasicauthok '' / > < /flow > in the first flow ( listenerbasicauth ) using the tag : - < http : basic-security-filter realm= '' mule-realm '' / > or - < mule-ss : http-security-filter realm= '' mule-realm '' / > after the listener it returns a 500 in an invalid authentication . but with the old http   in the second flow ( `` httpinboundbasicauth '' ) it returns a 401 .
533,hot spot in serveraddress of http connector . when serveraddress executes : this.ip = inetaddress.getbyname ( host ) .gethostaddress ( ) ; it 's take a while to return . we need to improve it since it 's used with every request .
534,add mule_remote_client_address property in the new http connector . the http transport sets a variable with the address of the client in inbound connections   but is able to detect if the request comes from a proxy ( if so   the value of the x-forwarded-for header is used instead of the ip of the proxy ) . this is explained in mule-7263 . we need to provide this functionality in the new http connector .
535,http requester not sending query parameters when processing a redirect under https . check the behavior of redirects in the http : request element of the new http module when using https . if the location header contains a url with query parameters   the request to that url does n't contain the parameters . to reproduce   check authorizationcodefullconfigtestcase # localauthorizationurlredirectstooauthauthorizationurl . muleclient is being used twice   to manually process redirects   replace that with only one call with enabled redirects .
536,upgrade schema versions to 3.6 . upgrade schema versions to 3.6
537,the application logging configuration is not read or used . . when deploying an app with a logging congif ( log4j2.xml )   mule doesnt use its config and use the default every time . steps to reproduce : deploy the attached app on a mule instance . wait for it to be deployed . the default app log will be created no matter which configuration was given . expected behavior : log into the configured file instead of the default one   if using console   should log into mule_ee.log or mule.log ( depending on the distribution ) .
538,http requester not removing previous inbound properties . the http : request sets inbound properties to the resulting mule message but keeps any previous inbound property that were set before the request . to reproduce   test the proxy scenario using a flow with an http : listener and an http : request . when returning from the request   the mule message still has inbound properties from the listener .
539,tcp transport creating mule_remote_client_address as outbound . while working on studio-5148   the team found that tcp is creating the mule_remote_client_address as outbound property rather than inbound as per our way to adapt messages and the way we set that property everywhere else . https : //github.com/mulesoft/mule/blob/bfb3a17263d1e4b32ee10272cbf710a2bf41b16b/transports/tcp/src/main/java/org/mule/transport/tcp/tcpmessagereceiver.java # l421
540,default maxthreads is 128 when worker-threading-profile is n't present but 16 when it is . . as title ..
541,http listener module path issue with path with wildcard and another hardcoded in the same port and with spaces in the path . when there are two listeners in the same port but one has a wildcard the other has a hardcoded path and there is a collision between them it has to enter in the listener that has the hardcoded path . for example : 1 ) flow with path = `` /in '' and another flow with path = `` /in/ * `` it enters in the /in/ * listener but it should enter in the `` /in '' without wildcard 2 ) path= '' /in/ * /subpath1 '' path=/in/ * when you consume it with `` /in/foo1/subpath1 '' it goes to the path /in/ * 3 ) similar to the previous case . path= '' /in/ * /subpath1/ * '' and path=/in/ * when you consume it with `` /in/foo1/subpath1/subpath2 '' it goes with the /in/ * 4 ) path= '' /encodedvalues/foo 1 '' and you consume it with /encodedvalues/foo % 201 it returns a 404. for all of these cases there are functional test cases inside the system folder of the http module tests : * httplistenerpathtestcase
542,arrayindexoutofboundsexception when logging exceptions . sometimes   when logging an exception with a rollingfileappender an arrayindexoutofboundsexception is thrown .
543,tests infrastructure modules build warning . when running mvn validate on mule-tests-infrastructure module i get a warning because there is a duplicated declaration of maven-jar-plugin in mule pom.xml . { noformat } [ info ] scanning for projects ... [ warning ] [ warning ] some problems were encountered while building the effective model for org.mule.tests : mule-tests-infrastructure : jar:3.7.0-m1-snapshot [ warning ] 'build.plugins.plugin . ( groupid : artifactid ) ' must be unique but found duplicate declaration of plugin org.apache.maven.plugins : maven-jar-plugin @ org.mule : mule:3.7.0-m1-snapshot   /users/alejandrosequeira/dev/mule/ce/pom.xml   line 1803   column 21 [ warning ] [ warning ] it is highly recommended to fix these problems because they threaten the stability of your build . [ warning ] [ warning ] for this reason   future maven versions might no longer support building such malformed projects . [ warning ] [ info ] [ info ] using the builder org.apache.maven.lifecycle.internal.builder.singlethreaded.singlethreadedbuilder with a thread count of 1 [ info ] [ info ] -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- [ info ] building mule tests infrastructure 3.7.0-m1-snapshot [ info ] -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- [ info ] [ info ] -- - maven-enforcer-plugin:1.0.1 : enforce ( enforce-maven-version ) @ mule-tests-infrastructure -- - [ info ] -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- [ info ] build success [ info ] -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- [ info ] total time : 1.269 s [ info ] finished at : 2014-12-02t16:40:14-03:00 [ info ] final memory : 9m/246m [ info ] -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- { noformat }
544,change io strategy in http requester . use samethreadiostrategy in the outbound part of he new http connector . as the exchange pattern is always request-response it makes no sense to use a different thread worker to process the request .
545,cxf proxy test seems to be slower with the new http module than with the http transport . . the proxytestcase with proxy-conf-flow.xml as config file runs for 1 minute and 25 seconds   but with proxy-newhttp-conf-flow.xml ( using the new http module ) it runs for 3 minutes and 15 seconds .
546,error in the xml parser of the http module when the header tag is used with the error response builder . this exception is throw when there is an error response builder : `` nested exception is java.lang.illegalstateexception : no parser defined for header in the context error-response-builder ''
547,stringindexoutofboundsexception when requester receives get with wrong body . when sending a get with content-type application/x-www-form-urlencoded and an incorrect form body it returns an empty response due to a java.lang.stringindexoutofboundsexception . to reproduce run the following command using the configuration : { noformat } $ curl -g -- data 'hello ' http : //localhost:8080/1 curl : ( 52 ) empty reply from server { noformat }
548,max connections exceeded in the outbound part should block instead of failing . when running the proxy scenario under more than 10 concurrent threads   the requests starts to fail due max connections limit exceeded . this parameter is not set   so this should be the default `` -1 '' ... no limit . the tcp configuration has been removed from the requester to asure that this issue is probably from the listener . also on the core log this exception has been found : dic 03   2014 3:07:20 pm org.glassfish.grizzly.nio.transport.tcpniotransport configurechannel warning : grizzly0004 : can not set tcp_nodelay to true java.net.socketexception : invalid argument sun.nio.ch.net.setintoption0 ( native method ) sun.nio.ch.net.setsocketoption ( net.java:373 ) sun.nio.ch.socketchannelimpl.setoption ( socketchannelimpl.java:189 ) sun.nio.ch.socketadaptor.setbooleanoption ( socketadaptor.java:295 ) sun.nio.ch.socketadaptor.settcpnodelay ( socketadaptor.java:330 ) org.glassfish.grizzly.nio.transport.tcpniotransport.configurechannel ( tcpniotransport.java:445 ) org.glassfish.grizzly.nio.transport.tcpnioconnectorhandler.onconnectedasync ( tcpnioconnectorhandler.java:214 ) org.glassfish.grizzly.nio.transport.tcpnioconnectorhandler $ 1.connected ( tcpnioconnectorhandler.java:154 ) org.glassfish.grizzly.nio.transport.tcpnioconnection.onconnect ( tcpnioconnection.java:258 ) org.glassfish.grizzly.nio.transport.tcpniotransport.fireioevent ( tcpniotransport.java:552 ) org.glassfish.grizzly.strategies.abstractiostrategy.fireioevent ( abstractiostrategy.java:112 ) org.glassfish.grizzly.strategies.workerthreadiostrategy.run0 ( workerthreadiostrategy.java:117 ) org.glassfish.grizzly.strategies.workerthreadiostrategy.executeioevent ( workerthreadiostrategy.java:103 ) org.glassfish.grizzly.strategies.abstractiostrategy.executeioevent ( abstractiostrategy.java:89 ) org.glassfish.grizzly.nio.selectorrunner.iteratekeyevents ( selectorrunner.java:414 ) org.glassfish.grizzly.nio.selectorrunner.iteratekeys ( selectorrunner.java:383 ) org.glassfish.grizzly.nio.selectorrunner.doselect ( selectorrunner.java:347 ) org.glassfish.grizzly.nio.selectorrunner.run ( selectorrunner.java:278 ) org.glassfish.grizzly.threadpool.abstractthreadpool $ worker.dowork ( abstractthreadpool.java:565 ) org.glassfish.grizzly.threadpool.abstractthreadpool $ worker.run ( abstractthreadpool.java:545 ) java.lang.thread.run ( thread.java:745 ) dic 03   2014 3:07:20 pm org.glassfish.grizzly.nio.transport.tcpniotransport configurechannel warning : grizzly0006 : can not set so_reuseaddr to true java.net.socketexception : invalid argument sun.nio.ch.net.setintoption0 ( native method ) sun.nio.ch.net.setsocketoption ( net.java:373 ) sun.nio.ch.socketchannelimpl.setoption ( socketchannelimpl.java:189 ) sun.nio.ch.socketadaptor.setbooleanoption ( socketadaptor.java:295 ) sun.nio.ch.socketadaptor.setreuseaddress ( socketadaptor.java:413 ) org.glassfish.grizzly.nio.transport.tcpniotransport.configurechannel ( tcpniotransport.java:451 ) org.glassfish.grizzly.nio.transport.tcpnioconnectorhandler.onconnectedasync ( tcpnioconnectorhandler.java:214 ) org.glassfish.grizzly.nio.transport.tcpnioconnectorhandler $ 1.connected ( tcpnioconnectorhandler.java:154 ) org.glassfish.grizzly.nio.transport.tcpnioconnection.onconnect ( tcpnioconnection.java:258 ) org.glassfish.grizzly.nio.transport.tcpniotransport.fireioevent ( tcpniotransport.java:552 ) org.glassfish.grizzly.strategies.abstractiostrategy.fireioevent ( abstractiostrategy.java:112 ) org.glassfish.grizzly.strategies.workerthreadiostrategy.run0 ( workerthreadiostrategy.java:117 ) org.glassfish.grizzly.strategies.workerthreadiostrategy.executeioevent ( workerthreadiostrategy.java:103 ) org.glassfish.grizzly.strategies.abstractiostrategy.executeioevent ( abstractiostrategy.java:89 ) org.glassfish.grizzly.nio.selectorrunner.iteratekeyevents ( selectorrunner.java:414 ) org.glassfish.grizzly.nio.selectorrunner.iteratekeys ( selectorrunner.java:383 ) org.glassfish.grizzly.nio.selectorrunner.doselect ( selectorrunner.java:347 ) org.glassfish.grizzly.nio.selectorrunner.run ( selectorrunner.java:278 ) org.glassfish.grizzly.threadpool.abstractthreadpool $ worker.dowork ( abstractthreadpool.java:565 ) org.glassfish.grizzly.threadpool.abstractthreadpool $ worker.run ( abstractthreadpool.java:545 ) java.lang.thread.run ( thread.java:745 )
549,jetty http.context.path inbound property has a different value in 3.6 compared to 3.5 . the jetty transport in 3.6.0-m3 is setting the http.context.path inbound property to a different value than 3.5 given the following endpoint address and request : endpoint address : http : //localhost:8080/api request : http : //localhost:8080/api/console/index.html in 3.6 we get : http.context.path : /api/console/index.html and in 3.5 the value was : http.context.path : /api the 3.5 behavior is the expected one .
550,resource not found in http should return a body with a clear message . http module returns 404 when a valid port is hit but there 's no listener in it .
551,http listener module is not adding the www-authenticate header field in the response . when you send bad basic credentials for authentication the response of the listener is not adding the www-authenticate header field . but in the case you do n't send the authentication header credential it includes the www-authenticate header field . as i understand in the rfc ( http : //tools.ietf.org/html/rfc2616 # section-10.4.2 ) the server has to add the www-authenticate header field in both scenarios .
552,http listener config throws npe when a request is received but no listener is referencing the config . when no listener is referencing a listener-config   and a request is received in the configured port   a npe is thrown in the server . to reproduce   add this listener-config : < http : listener-config name= '' customconfig '' host= '' localhost '' port= '' 1234 '' / > run the app   and then hit with a browser http : //localhost:1234
553,null pointer exception on the first request causes the listener to close the connection . . when loading the application   the first request fails to be processed due an exception and after that no connection can be created   probably the listener 's socket is close on the exception .
554,http listener not setting exception payload . . there 's a scenario in cxf where an exception is thrown after calling an http listener . an exception payload is expected but you get null . test is testserverclientproxydefaultexception and can be found in exceptionstrategytestcase .
555,log separation does n't work after upgrading to log4j 2.1 . because of a change in log4j 's lifecycle   after upgrading to 2.1 the application logs never load their configuration which in practice means that log separation is disabled even though applications do have a separate logging context .
556,jul loggers are not bridged to log4j2 . components like jersey and grizzly are logging using jul but that api is not bridged to log4j2 . jul loggers should have the same treatment as the others do
557,thread names are i ) lacking app prefix ii ) duplicated between http inbound and outbound . i have checked this is not an issue for per-app logging   but i beleive it 's an issue for mmc and possibly other things . it 's also bad practice to repeat thread names .
558,http listener is storing only the first part of a multipart request as attachment . given the following request using restassured : { code } given ( ) .multipart ( `` description ''   `` barcelona badge '' ) .multipart ( `` image ''   `` bbva.jpg ''   this.getclass ( ) .getclassloader ( ) .getresourceasstream ( `` org/mule/module/apikit/leagues/bbva.jpg '' ) ) .expect ( ) .statuscode ( 200 ) .body ( `` upload ''   is ( `` ok '' ) ) .when ( ) .put ( `` /api/leagues/liga-bbva/badge '' ) ; { code } only the first part ( `` description '' ) is being stored as an inboundattachment . using http : inbound instead of listener generates both attachments as expected . failing test using listener : https : //github.com/mulesoft/apikit/blob/http-3.6/mule-module-apikit/src/test/java/org/mule/module/apikit/leagues/leagueshttplistenertestcase.java passing test using endpoint : https : //github.com/mulesoft/apikit/blob/http-3.6/mule-module-apikit/src/test/java/org/mule/module/apikit/leagues/leaguestestcase.java in both classes the test in question is putmultipartformdata ( )
559,can not add contextresolver in jersey module . when trying to add a context-resolver in 3.6.0 it seems that mule do n't do anything . to reproduce download the attached project and run mvn clean test using mule.version 3.6.0-m3-snapshot ( the current value ) and see that it does n't fail . if you use 3.5.0 it fails .
560,grizzly thread leaks . when running the ce test suite   you can see grizzly threads piling up to the point in which by the time the suite is almost over there 's a gigantic amount of idle threads . this leads to flakiness and in some environments it even fails the build because the host ca n't allocate more threads . additionally   it raises the concern about those threads being actually stopped when an application is undeployed on a live container . please trace and fix the leak and verify that those threads do not survive an application undeployment .
561,support doc/literal with multiple message parts in ws consumer . ws consumer should support doc/literal web services that have multiple message parts inside them . note : since ws consumer sets the payload to the body of the soap message   this means that it will have to have a wrapper element around the message parts .
562,ws encryption support for ws consumer . we should support ws security encryption/decryption capabilities in ws consumer .
563,ws security signature support for ws consumer . we should support ws security signature and verification capabilities in ws consumer .
564,http connector oauth implicit credentials . need to support oauth implicit credentials for new http connector .
565,malformed responses when jersey sends a chuncked response . when a jersey endpoint responds with a chuncked response   then the chunks are not correctly formed and the last one is not correctly finialized . as a result   the response is garbled .
566,create examples for http module documentation . create exmaples to include in documentation for new http module .
567,it is n't possible to set the module http listener config and an oauth provider in the same port . as the mule oauth provider use the http transport you ca n't set the same port in the provider and the http module configs of the flows that have the resources . also there is a problem when you change the port of the provider to not overlap them and deploy the app because it goes on with the error of `` bindexception : address already in use '' . you have to stop the mule standalone and started again .
568,java.lang.illegalstateexception : only owner thread can write to message still occures with http module . .
569,100 % errors with http listener under high concurrency . 100 % failures at 8000 concurrency . http transport only has 0.32 % failures   and jetty none .
570,http listener fails with npe when the message is filtered out . the following config is failing with npe . it does n't fail when the message is not filtered out . error : java.lang.nullpointerexception org.mule.module.http.internal.listener.httpresponsebuilder.build ( httpresponsebuilder.java:77 ) ~ [ mule-module-http-3.6.0-m3-snapshot.jar:3.6.0-m3-snapshot ] org.mule.module.http.internal.listener.httpmessageprocessortemplate.sendresponsetoclient ( httpmessageprocessortemplate.java:87 ) ~ [ mule-module-http-3.6.0-m3-snapshot.jar:3.6.0-m3-snapshot ] org.mule.execution.asyncresponseflowprocessingphase.runphase ( asyncresponseflowprocessingphase.java:56 ) ~ [ mule-core-3.6.0-m3-snapshot.jar:3.6.0-m3-snapshot ] org.mule.execution.asyncresponseflowprocessingphase.runphase ( asyncresponseflowprocessingphase.java:23 ) ~ [ mule-core-3.6.0-m3-snapshot.jar:3.6.0-m3-snapshot ]
571,requests randomly fail ( 1 in 1m ) with npe   even at low conconcurrencies e.g . 50 . around 10 times in a million requests   the request fails due a null pointer exception caused by the future returning null instead of a valid response . class and line : org.mule.module.http.internal.request.grizzly.grizzlyhttpclient # send response = future.get ( responsetimeout   timeunit.milliseconds ) ;
572,spike on execution model of extensions api . make it execute operations
573,make a spike on consolidating all mule registries into a spring one . make a spike on consolidating all mule registries into a spring one
574,remove byte as a dataqualifier . remove it
575,refactor transport discovery for osgi . current transport discovery mechanism inspects all available jars searching for service properties files . that must be modified to work on an osgi container . in osgi   transport discovery should follow white-board model so a transport service can be used ( with no osgi knowledge ) which would enable test running with not container to be able to properly create the mule context .
576,redesign context builder discovery for osgi . current context builder discovery mechanism inspects all available jars searching for service properties files . that must be modified to work on an osgi container . in osgi   transport discovery should follow white-board model so a context builder service can be used ( with no osgi knowledge ) which would enable test running with not container to be able to properly create the mule context .
577,can not log to application log for a failed deployment . install latest snapshot ( build c22fb549 )   create an application with the attached config and start using bin/mule -m-dmule.agent.enabled=false . deployment fails as expected but there is a problem when trying to log to application log . see attached log .
578,add protocol attribute to listener-config and request-config to improve usability . currently is difficult for an user to realice how to configure https for listening http requests or sending http requests . the way to do that currently is by defining a tls context element ( which can be empty for sending request   in such case it will use jvm default certificatess ) inside the listener-config or de request-config element . that it 's not straightforward if the user is working with xml and for users that do not know that ssl / tls is the protocol behing https is n't either despite they use studio . the idea is to add a protocol attribute ( with default value http ) in the listener-config and the request-config . - listener config : - if user sets protocol= '' http '' or provides no values then we validate that the user did n't put a tlscontext . - if user sets protocol= '' https '' we validate that the user provided a tlscontext with at least a keystore configured on it . - request config : - if user sets protocol= '' http '' or provides no value then we validate that the user did n't put a tlscontext - if user sets protocol= '' https '' and provides no tlscontext config then we create a tlscontext by default ( implicitly ) using the default jvm certificates - if http is selected   port 80 is used by default - if https is selected   port 443 is used by default the usability improvements is : from studio the user has a much more easy way to find where to define the use of https since it 's going to be in the main configuration section of both listener-config and request-config from xml the user will see a hint from the xml content assistant to pick the protocol right in the listener-config element or request-config element . with the new behaviour there 's no reason to support an empty tls : context element in the config . when we rebuild the current tcp transport ideally we can reuse the same mechanism as in http ( no idea what the `` protocol '' attribute would be called in that case ) or add support for an empty tls : context again .
579,deprecate http transport . deprecate xml elements of the http transport .
580,httplistener parametermap should behave as a map . parametermap is a map < string   string > and holds the values of query parameters   uri parameters and post params . the problem that currently have are : - the parameter map is mutable when it should't - it does not have an api in the interface that can be used by the user ( there 's an special method getall used when a parameter returns a collection of values ) - it does not comply with the map interface for map < string   string > as it declares .
581,default https configuration in requester not working correctly . the protocol= '' https '' configuration in the request-config is ignored if there is no default tls context factory in the registry .
582,remove maven warnings . we recently had an [ issue|mule-8113 ] with our maven build   it was n't including a dependency . when doing a little research i found that it was because a duplicated declaration of maven-jar-plugin . this root problem did n't appear when building the module   but when building an ancestor ( distance 2 ) . to avoid this kind of issues we must ensure that we do n't have maven warning in our builds .
583,http listener fails during initialization inside batch . when adding an http : listener inside the input of a batch job then the app fails during startup . seems that defaultbatchengine is asking for all the batch jobs during initialization   then the batch job manually executes initialize and injection over the input elements ( http : listener ) but at this point the httplistenerconnectionmanager has not bean registered ( using registry bootstrap ) so there 's a null pointer during listener initialization .
584,problem sending outbound attachments in http requester . when sending a multipart request   the requester assumes that each part is a file   and adds the corresponding headers ( filename attribute at the beginning of the part   transfer-encoding : binary   etc ) . this makes the request to be invalid in some cases . use case to test : upload a file to box . example test ( replace the dev token and the parent folder id ) : < http : request-config name= '' requestconfig '' host= '' upload.box.com '' port= '' 443 '' protocol= '' https '' responsetimeout= '' 10000 '' / > < flow name= '' test '' > < set-attachment attachmentname= '' attributes '' value= '' { & quot ; name & quot ; : & quot ; test.txt & quot ;   & quot ; parent & quot ; : { & quot ; id & quot ; : & quot ; 12345678 & quot ; } } '' contenttype= '' application/json '' / > < set-attachment attachmentname= '' test.txt '' value= '' test content '' contenttype= '' text/plain '' / > < http : request config-ref= '' requestconfig '' path= '' /api/2.0/files/content '' method= '' post '' > < http : request-builder > < http : header headername= '' authorization '' value= '' bearer xxxxxxxxxxxxx '' / > < /http : request-builder > < /http : request > < /flow > the requester sends a multipart request with the following format . post /api/2.0/files/content http/1.1 host : localhost:8082 authorization : bearer xxxxxxxxxx mule_encoding : utf-8 connection : keep-alive accept : * / * user-agent : ning/1.0 content-type : multipart/form-data ; boundary=tdv259ab4d2jorezekophg5ikreks3mio2jc content-length : 463 -- tdv259ab4d2jorezekophg5ikreks3mio2jc content-disposition : form-data ; name= '' attributes '' ; filename= '' attributes '' content-type : application/json content-transfer-encoding : binary { `` name '' : '' test.txt ''   `` parent '' : { `` id '' : '' 12345678 '' } } -- tdv259ab4d2jorezekophg5ikreks3mio2jc content-disposition : form-data ; name= '' test.txt '' ; filename= '' test.txt '' content-type : text/plain content-transfer-encoding : binary test content -- tdv259ab4d2jorezekophg5ikreks3mio2jc -- the problem is the `` attributes '' part   which is sent as a file part . it should n't contain the filename attribute   and the transfer encoding should n't be binary . postman just sends the following   and it works correctly : content-disposition : form-data ; name= '' attributes '' { `` name '' : '' test.txt ''   `` parent '' : { `` id '' : '' 12345678 '' } }
585,http listener server should return method not supported . when there 's at least one http listener for a uri but the listeners for that uri do not support a given method an status code 405 method not allowed should be return . currently it 's returning 404 .
586,change the asynccompletionhandler in the http requester to use a static logger . the asynccompletionhandler used by ahc in the http requester uses a logger that is stored in an instance variable . change it to use a class variable   to avoid loading the logger from the logger factory each time a request is sent ( an asynccompletionhandler is created for each request ) .
587,mule starts when a request element has host/port undefined   only failing when request is used . . this should fail at startup   not in runtime .
588,improve http listener logging for usability . mule does not log to show what host/port/path mule listening on . this is important for understanding what might be going on when things are n't working as expected   and existed with the existing http transport . also   error/logs related to listeners not being available should take into account `` allowedmethods '' otherwise errors like this which make no sense occur : { code } warn 2014-12-30 10:01:46 424 [ [ http-module-echo ] .http_listener_configuration.worker.01 ] org.mule.module.http.internal.listener.httplistenerregistry : no listener found for request : / warn 2014-12-30 10:01:46 424 [ [ http-module-echo ] .http_listener_configuration.worker.01 ] org.mule.module.http.internal.listener.httplistenerregistry : available listeners are : [ / ] { code }
589,listener response streaming only returns part of body . . if you edit this test case to use larger body sizes   then tests begin to fail : org.mule.module.http.functional.listener.httplistenerresponsestreamingtestcase
590,exception in http listener when path= '' / '' and basepath= '' / '' . when using an http : listener with path= '' / ''   and referencing a listener-config where basepath= '' / ''   then an arrayindexoutofbounds exception is thrown when receiving a request .
591,http requester not adding the reason phrase in the response . the http requester is adding an inbound property with the status code of the response   but no property with the reason phrase . currently there is no way of getting the reason phrase of the response   analyze if it makes sense to add another inbound property with the reason phrase . the status code validator should also include the reason phrase when failing due to an invalid status code in the response . this is useful when consuming rest apis that add information in the reason phrase of an error status code response .
592,listener should respect keep-alive with http 1.0 and disable chunking . . with http 1.0 keepalive header   the http response from mule returns `` connection : close '' when streamingmode is always or the payload is an inputstream . i 'm not 100 % sure if http 1.0 officially supports chunking   but i am sure that the keepalive header should be respected an chunking should n't affect this .
593,inconsistent implementation of streamingmode= '' never '' between listener and requestor . . there are a number of cases tested in httplistenerresponsestreamingtestcase where even when responsestreamingmode= '' never '' chunking is still used . in my mind it should be the `` auto '' mode that decided if it should use chunking based on i ) payload type ii ) presence of headers . if there is a mode called `` never ''   it should never do chunking otherwise this is confusing/misleading . on the other hand   < request > currently throws an exception in this scenario . update behaviuor so that in both cases : auto : - chunking if payload is inputstream and no content-length header present . - else delete transfer-encoding header if present and log . always : - delete content-length header and log . never : - delete transfer-encoding header and log .
594,mule integration qa build is failing because of wrong sxc dependency version . tests/integration module is failing because is trying to retrieve sxc version   which is not needed .
595,support parameter grouping in configurations and operations . there are cases in which a group of parameters are frequently used together   for which it makes sense to treat them as a group . the extensions api already supports mapping pojos directly in the xml   but in same cases which group is preferred as parameters rather than a top level object . to enable that   the @ parameters operation will be created { code : java } @ extension public class myextension { @ parameters private options options ; } public class options { @ parameter private string color ; @ parameter @ optional private string mode ; private string owner ; } } { code } the outcome of the code above is a configuration with two parameters called 'color ' and 'mode '   one required and the other optional . the configuration has no attribute called options . if the options class were to have another field also annotated with @ parameters   then such fields will be ignored . in the same way   the annotation can be applied to a class holding operations : { code : java } public class operations { @ parameters private options options ; @ operation public void hello ( string message ) { ... } @ operation public void goodbye ( string message ) { } } { code } in this case   both operations will have three parameters : message   color and mode . the last use case for this annotation is to have nested parameter classes : { code : java } public class options { @ parameter private string color ; @ parameter @ optional private string mode ; @ parameters private moreoptions moreoptions ; } } { code } in this last example   the configuration/operation that is augmented with this extra parameters will have the sum of options and moreoptions parameters . those parameters will be flattened   meaning that the model will contain no reference to the fact that the moreoptions parameters were nested inside options . the field must be a java bean property ( ie it needs to have setters and getters matching the field name ) .
596,cleanup the @ operation annotation parameters . the @ operation parameter takes a name argument . that should be remove since directly contradicts the consistency that the api tries to enforce the annotation also contains an `` acceptedpayloadtypes '' which is no longer used . that should be cleaned up
597,move packages on annotations module from org.mule to org.mule.module.annotations . each module/bundle must use different packages names for osgi . annotations module uses org.mule prefix which belongs to mule-core
598,moving packages on spring-config module from org.mule to org.mule.module.springconfig . each module/bundle must use different packages names for osgi . spring cnofig module uses org.mule prefix which belongs to mule-core
599,write spec for validations extension . write and validate a spec for a new extension module for validation purposes .
600,build number maven plugin should be activated always . we are currently executing maven-build-number-plugin only in release profile   this should be ran for all profiles .
601,remove unused scripts . we need to see which of these scripts in buildtools/scripts are still being used   and remove the ones that are not : checkreintegratedworkingcopy.groovy deployartifacts.groovy eclipsexmlcatalog.groovy listexcludedtests.groovy listincludedtests.groovy listschema.groovy listtestexclusions.groovy scanlicenseheaders.groovy schemastatistics.groovy svnjiraparser.groovy svnjiraparser.sh svnpropertiessetter.sh switchlicenseheader.sh switchschemaversion.groovy switchversion.groovy xmlcatalogfrommulestandalonedistro.groovy build.sh compare_exclusions.sh mkpom.sh mule_root.sh mule_undo.sh tabstospaces.sh update_poms.sh
602,fail to expand properties when using property placeholder shared in a domain . steps : # deploy the below application and domain # put domain.properties in domain root dir # bin/mule * expected : mule starts and flow listens on 127.0.0.1:8811/in1 and 127.0.0.1:8811/in2 * actual : mule fails to start because $ [ http.port ] is an invalid value for port * note : i put domain.properties file in domain root directory because in domain/classes it is not found
603,core extension dependencies are not initialized in order . core extensions are initialized using the discorevy order instead of the order determined after resolving the dependencies .
604,move tests/functional tests to tests/integration . tests/functional should be only for test harness
605,do not publish test-jar for any module that is not test harness . we publish test source code   we do n't need to distribute test binaries except for the test harness .
606,remove functional-tests jar from distributions . validate with community/support/developers
607,integrate mule esb matchers . # test matchers # # pass and fail scenarios # # test error description # verify that we did n't created a similar one yet # documentation
608,supported and recommended jre version should be at least 1.7.0_60 . in mule-6866 we upgraded to groovy 2.3.7-indy but according to [ groovy docs|http : //groovy.codehaus.org/invokedynamic+support ] there are known issues with java versions lower than 7u60 . we should increase supported and recommended versions to 1.7.0_60
609,allow extension components to extend existing functionality . there 're cases in which an operation implemented through the ext-api should be part of an specific substitution group . because substitution groups are an xsd specific concept and because the same concept might be necessary in other dsl types   we need a mechanism to denote extensibility that goes beyond java 's `` extends '' and `` implements '' keywords but is still type related . for that purpose   two new annotations are created : @ extensible : means that a given type is extensible by another extension . it does n't mean type subclassing   but extension from a functionality point of view . this annotation has an optional string alias ( ) attribute to allow a better experience when generating xsd @ implementationof ( type=xx.class ) : this annotation can be used on a class or method implementing operations . it means that the affected operations are to be part of a substitution group defined by an extensible type . the type argument in this annotation is mandatory and has to be a type that is annotated with @ extensible
610,allow restriction on which types of operations can be nested . currently   the ext-api supports nested operations through the use of arguments of type nestedprocessor . however   the generated schema allows any type of message processor to be nested . there 're cases in which it 's necessary to limit that to specific groups . for those cases   a new annotation is created : @ restrictedto ( type=xx.class ) the type used in that annotation has to be annotated with @ extensible . by doing that   the schemagenerator will generate a specific named group for that extensible type and only items on that group will be allowed as nested for that operation
611,rename extensions - > extension in java package name . also extensionmanager is better than extensionsmanager in english imo .
612,oauth authentication code does n't fail when access token is null . when consuming some apis such as facebook or google contacts a response code 400 is returned according to the log   but it does not match with the debugger http response code   which is 401 note : using success status code validator   does not avoid the exception . we tested with 400 and 401 see attached documents
613,spring spike part ii : take lifecycle away from spring . continue the spring registry spike   this time try to take lifecycle control away from spring
614,spring spike part iii : make a fast registry for tests . continue the spring spile . this time   make a fast registry for tests
615,the changes in mule-7742 impacted in performance   a better solution should be used . . review that changes in mule-7742 and the previous changes proposed by victor romero .
616,deprecate org.mule.util.scan classes in core in order to support java 8 . our current version of asm ( 3.3.1 ) is not fully compliant with java 8   so we need to deprecate it use for 3.7 m1 and look for a replacement in 3.7 m2 .
617,support tls sni extension in http outboundendpoint . java does not send sni because of the the socket is created . while java 7 supports the sni extension with tls it only uses it if the hostname is specified when the socket is created rather than a inetaddress ( it does n't get hostname from inetaddress ) .
618,test support for tls sni extension in http module requester . currently not supported . also review listener support .
619,mule 3.6 https request connector does not validate certificate presented by remote server . the server ssl certificate is not validated by requestor at all .
620,httprequester not configuring tls cipher suites and protocols . the http requester from the new module is not configuring restricted protocols and cipher suites for tls .
621,document new http connector . add documentation for http connector
622,discuss how to : mule test harness should include mule jars in test classpath . now when a user creates a maven mule project when he runs the tests gets errors because not including in the classpath mule jars . we should have a way to make tests include those jars . one possible solution is to make the archetypes include mule esb distribution dependency with runtime scope . this way all transitive dependencies would be included when running tests .
623,oauth2 postauthorize ( ) with an expired token fails even if token was refreshed . the box connector has a postauthorize method that invokes one of the connector 's processors . when one of the connector 's processors is invoked and the postauthorize is called with an expired access token   the baseoauth2manager is able to refresh the access token but re-throws the token expired exception which makes processor invocation fail . i believe the issue can be found in the following method : org.mule.security.oauth.baseoauth2manager.postauth ( oauth2adapter   string )
624,http listener does not handle `` expect : 100-continue '' ( rfc 2616 ) header correctly . this can cause depending the scenario : 1 ) 1s latency overhead 2 ) requests to hang
625,401 response received   but no www-authenticate header was present . i 've been searching and and tinkering since last week to figure out what is wrong with this   but no matter how i tried it still gives me this error in the console . i 'm testing the http connector ( 3.6 ee ) against twitter rest api vs testing with chrome 's postman rest client . with the postman client   it is working fine when posting status update . however with mule it fails and gives me the error mentioned . i even added `` www-authenticate '' ( replaced `` authorization '' ) before the call to http connector itself   and tried with adding it to header as well   still everything fails . note : for the get timeline it is working both on postman rest client and http connector   but when i tried on posting to status/update.json   postman is successful   while anypoint http connector fails .
626,http listener allows inexistent keystore . when i create an https listener mule validates that the trustsore file exists but it does n't validate that the keystore file exists . try with the attached config . create the truststore like this : keytool -genkey -alias mule -keyalg rsa -keystore keystore.jks -dname `` cn=mule   ou=engineering   o=mulesoft   l=ba   st=ba   c=ar ''
627,allow cipher suite and protocol configuration per connector . tls cipher suite configuration is done through conf/tls-default.conf for all the mule server . we need a way to allow per connector configuration . use cases : - connect to a legacy api uses a vulnerable cipher suite for which the vulnerability has been mitigated   but i do n't want to allow that cipher suite for other consumed apis . - because of internal security policy i need to use a particular set of cipher suites to publish an api but i need to consume an external api wich uses a different cipher suites not allowed internally .
628,allow to set certificate alias in keystore configuration . when multiple certificates are installed in the keystore file   we need to provide a mechanism to pick one in the tls context element . how this is done can be review but most likely is using the certificate alias . so an alias optional attribute must be used in the keystore element . when there are multiple certificates and alias is not defined we should define hich on we should pick .
629,disable sslv3 by default on fips 140-2 scenario . the file tls-fips140-2.conf does n't restrict enabled protocols by default . when enabling fips 140-2 on wrapper.conf   sslv3 gets enabled by default .
630,http static resource component fails with http listener . the http static resource component fails with the new http listener component because it does n't extract correctly the listener path to define the resource to return .
631,client credentials does not fail if it could not retrieve access token . when using client credentials   start up of the application does not fail if mule was not able to retrieve an access token . additionally some logging information must be added for troubleshooting .
632,http listener does n't validate clients . when using tls : trust-store in an http listener it does n't validate the client certificate . reproduce running : curl -k https : //localhost:4443 { code : xml } < ? xml version= '' 1.0 '' encoding= '' utf-8 '' ? > < mule xmlns : http= '' http : //www.mulesoft.org/schema/mule/http '' xmlns : tls= '' http : //www.mulesoft.org/schema/mule/tls '' xmlns= '' http : //www.mulesoft.org/schema/mule/core '' xmlns : doc= '' http : //www.mulesoft.org/schema/mule/documentation '' xmlns : spring= '' http : //www.springframework.org/schema/beans '' version= '' ee-3.6.0 '' xmlns : xsi= '' http : //www.w3.org/2001/xmlschema-instance '' xsi : schemalocation= '' http : //www.springframework.org/schema/beans http : //www.springframework.org/schema/beans/spring-beans-current.xsd http : //www.mulesoft.org/schema/mule/core http : //www.mulesoft.org/schema/mule/core/current/mule.xsd http : //www.mulesoft.org/schema/mule/http http : //www.mulesoft.org/schema/mule/http/current/mule-http.xsd http : //www.mulesoft.org/schema/mule/tls http : //www.mulesoft.org/schema/mule/tls/current/mule-tls.xsd '' > < http : listener-config name= '' http_listener_configuration '' protocol= '' https '' host= '' 0.0.0.0 '' port= '' 4443 '' doc : name= '' http listener configuration '' > < tls : context > < tls : trust-store path= '' keystore.jks '' password= '' storepass '' / > < tls : key-store path= '' keystore.jks '' password= '' storepass '' keypassword= '' keypass '' / > < /tls : context > < /http : listener-config > < flow name= '' 1 '' > < http : listener config-ref= '' http_listener_configuration '' path= '' / '' doc : name= '' http '' / > < set-payload value= '' # [ 'message received at ' + new date ( ) .tostring ( ) ] '' doc : name= '' set payload '' / > < /flow > < /mule > { code }
633,upgrade to grizzly 2.3.19 . see fixes includes multiple bug fixes plus two improvments i requested : 1 ) sni support out of the box with sslfilter . https : //java.net/jira/browse/grizzly-1737 2 ) mechanism to limit size of send queue and this direct memory use . https : //java.net/jira/browse/grizzly-1730
634,upgrade cxf to 2.7.15 version . mule 3.7 needs to run using java 8   but current cxf major version ( 2.5 ) does not support it   and we have to move to version 3. we need to define how to provide ( if possible ) backwards compatibility and how to use the new version .
635,upgrade spring to version 4.1 . in order to support java 8 we need to move to a newer version of spring .
636,upload 3.6.0 javadocs . upload javadocs to : https : //www.mulesoft.org/docs/site/3.6.0/apidocs
637,classcastexception when setting a mel expression in the config-ref of a connector 's call . when a mel expression is set in the config-ref of a salesforce connector call and the object-store has no oauthstate stored for a user   the operation fails for that user with a classcastexception with the following message . * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * message : failed to invoke describesobject . message payload is of type : caseinsensitivehashmap code : mule_error -- 2 -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- exception stack is : 1. java.lang.string can not be cast to org.mule.security.oauth.onnotokenpolicyaware ( java.lang.classcastexception ) org.mule.devkit.processor.devkitbasedmessageprocessor:97 ( null ) 2. failed to invoke describesobject . message payload is of type : caseinsensitivehashmap ( org.mule.api.messagingexception ) org.mule.devkit.processor.devkitbasedmessageprocessor:128 ( http : //www.mulesoft.org/docs/site/current3/apidocs/org/mule/api/messagingexception.html ) -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- root exception stack trace : java.lang.classcastexception : java.lang.string can not be cast to org.mule.security.oauth.onnotokenpolicyaware at org.mule.devkit.processor.devkitbasedmessageprocessor.process ( devkitbasedmessageprocessor.java:97 ) at org.mule.execution.exceptiontomessagingexceptionexecutioninterceptor.execute ( exceptiontomessagingexceptionexecutioninterceptor.java:24 ) at org.mule.execution.messageprocessornotificationexecutioninterceptor.execute ( messageprocessornotificationexecutioninterceptor.java:58 ) + 3 more ( set debug level logging or '-dmule.verbose.exceptions=true ' for everything ) * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * i believe the issue can be found in the following method : org.mule.devkit.processor.devkitbasedmessageprocessor.process ( muleevent ) line 97. moduleobject is cast to onnotokenpolicyaware without verifying if it is a string . the method findorcreate does verify that in line 174 .
638,it is not possible to define more than one keystore/truststore . the tls contexts introduced in 3.6 interfere with each other . reproduce with the following scenario   where there are two flows that consume an https service   one with the server certificate in the truststore   and the other one without it . the first flow should work but the second one should fail . currently   they both work correctly . < http : request-config name= '' validcerthttpconfig '' protocol= '' https '' host= '' localhost '' port= '' $ { httpsport } '' > < tls : context > < tls : trust-store path= '' truststore '' password= '' mulepassword '' / > < /tls : context > < /http : request-config > < flow name= '' validcertflow '' > < http : request config-ref= '' validcerthttpconfig '' path= '' requestpath '' method= '' post '' / > < /flow > < http : request-config name= '' missingcerthttpconfig '' protocol= '' https '' host= '' localhost '' port= '' $ { httpsport } '' > < ! -- no certificate has been configured to test certificate verification -- > < /http : request-config > < flow name= '' missingcertflow '' > < http : request config-ref= '' missingcerthttpconfig '' path= '' requestpath '' method= '' post '' / > < /flow >
639,modify substitutableint restriction to allow apigateway extension language . api gateway has an extension language composed by : ! [ < language extension > ] this extension can not be used in the port property of the listener-config and request-config   because of the substitutableint restriction . the actual regex in the restriction is : < xsd : pattern value= '' ( \ # \ [ .+\ ] |\ $ \ { [ ^\ } ] +\ } ) '' / > including the gateway language extension should be : < xsd : pattern value= '' ( \ # \ [ .+\ ] |\ $ \ { [ ^\ } ] +\ } |\ ! \ [ .+\ ] ) '' / >
640,http requester throws timeout errors with post request . appears to be related to the `` expect : 100 continue '' header with grizzly   that is found in http/1.1 post request . the bug reproduces in esb 3.6 and 3.6.1   also gw 1.4. attached is the jmx file   using this proxy app for esb ( no gateway tags ) . https : //github.com/mulesoft/performanceworks/blob/master/apps/proxy-mcd/100b/http_module_proxy/proxy.xml if you change the method to get instead of post   you will not get the error . you should be able reproduce it easily . wai error 2015-02-11 00:29:48 112 [ [ pablotestapi_newhttp ] .proxyconfig.worker.09 ] org.mule.exception.defaultmessagingexceptionstrategy : * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * message : error sending http request . message payload is of type : bufferinputstream code : mule_error-29999 -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- exception stack is : 1. null ( java.util.concurrent.timeoutexception ) org.glassfish.grizzly.impl.safefutureimpl $ sync:357 ( null ) 2. error sending http request . message payload is of type : bufferinputstream ( org.mule.api.messagingexception ) org.mule.module.http.internal.request.defaulthttprequester:190 ( http : //www.mulesoft.org/docs/site/current3/apidocs/org/mule/api/messagingexception.html ) -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- root exception stack trace : java.util.concurrent.timeoutexception at org.glassfish.grizzly.impl.safefutureimpl $ sync.innerget ( safefutureimpl.java:357 ) at org.glassfish.grizzly.impl.safefutureimpl.get ( safefutureimpl.java:264 ) at com.ning.http.client.providers.grizzly.grizzlyresponsefuture.get ( grizzlyresponsefuture.java:173 ) + 3 more ( set debug level logging or '-dmule.verbose.exceptions=true ' for everything ) * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
641,http requester always add a / at the beginning of the request uri . an http requester with this config http : request path= '' something '' should generate a request with uri something but it 's generating /something instead .
642,ws consumer not evaluating flow vars in the serviceaddress when used with the new http connector . ws consumer allows mel expressions in the serviceaddress property . since 3.6   when the new http connector is used by default   flowvars are not recognized in mel expressions in the serviceaddress . the only variables that work are properties related to the mule message . with the http transport it works ok. this is because the outbound call uses muleclient to use the http requestor   and the muleevent that carries the flowvars is lost . to reproduce   modify dynamicaddressfunctionaltestcase to use a flow var instead of an inbound property .
643,review and merge mule-7588 . review and merge mule-7588
644,write a spec on new lifecycle and registry consolidation . write and circulate a spec on mule-7588
645,http delete body is not allowed . i am not able to call http delete verb from mule http connector with body .
646,improve jenkins email notifications to add the info about who made the last commit . mail notifications of failure don ’ t have the message of the commit which launch the build .
647,application plugins ( cloud connectors ) support for external dependencies . as a user i will like to use a connector such as siebel   packaged as a plugin deployed in the plugins folder and be able to use external dependencies that can not be shipped inside the connector .
648,fix mule esb maven tools testing for apps using domains . . 1.1-snapshot right now depends on changes for 3.7 that have n't been done yet . we need to modify it so that examplefunctionaltestcase extends from domainfunctionaltestcase if the app belongs to a domain .
649,http listener fails when receiving empty request with content type x-www-form-urlencoded . when a post request with content type application/x-www-form-urlencoded and empty body is sent to an http : listener   a 500 response is received and the flow is not executed . this happens because of a classcastexception inside the listener . the flow should be executed   with nullpayload in the mule message .
650,domain redeployment fails with zip file closed . when doing a redeploy of a domain it fails with zip file closed when trying to reload some classes .
651,review and update classloading documentation . documentation of mule classloading at http : //www.mulesoft.org/documentation/display/current/classloader+control+in+mule is not accurate and is out of date . there are missing things like application plugins   new domain classloading   etc
652,http request returns 401 when given correct authentication . a prospect has not been able to connect to a web service hosted in iis using digest auth in the http listener . they could connect using a java class with same credentials . none of the following combination worked as username in the http connector : { realm\username   realm\\username   username : realm . here is the webservice i used to reproduce the error : http : //httpbin.org/digest-auth/auth/user/passwd credentials { username=user   password=passwd } if needed : port=80 ; realm=me @ kennethreitz.com returned is 401 : unauthorized
653,after upgrade cxf to 2.7.15 some jaxws-client configurations fail when using a proxy . . when the service method receives a holder out parameter and then a string   the string value is not received by the server . if the method returns void   then the value placed in the out parameter does not arrive the to client . see org.mule.module.cxf.holdertestcase   method testclientproxyecho3holder .
654,readme.txt in < mule_home > /logs is outdated . the readme.txt has not been updated to reflect the changes derived from the implementation of log4j 2 .
655,remove jruby from distribution . there is a vulnerability issue on the jruby version used in old mule version . updating jruby to a newer version requires to upgrade to joda time   which also requires to update other dependencies . so we have decided to remove jruby from old mule distributions
656,source attribute in http requester not working when payload is null . when the `` source '' attribute is specified in an http : request element   it is ignored when the payload of the mule message is nullpayload . example : < http : request-config name= '' config '' host= '' localhost '' port= '' $ { httpport } '' / > < http : listener-config name= '' listenerconfig '' host= '' localhost '' port= '' 1234 '' / > < flow name= '' formparam '' > < http : listener config-ref= '' listenerconfig '' path= '' / * '' allowedmethods= '' get   post '' / > < set-variable variablename= '' httpbody '' value= '' # [ { 'testname1 ' : 'testvalue1 '   'testname2 ' : 'testvalue2 ' } ] '' / > < ! -- with this line uncommented   the map is sent . if not   the post request has no body even if the source attribute contains a map . < set-payload value= '' test '' / > -- > < http : request config-ref= '' config '' path= '' testpath '' method= '' post '' source= '' # [ flowvars.httpbody ] '' / > < /flow >
657,update commons-io in mule-commons to match the one used in mule . in mule-common the commons-io version is 1.4 : { code } < ! -- same version as mule ! -- > < dependency > < groupid > commons-io < /groupid > < artifactid > commons-io < /artifactid > < version > 1.4 < /version > < /dependency > { code } while mule is declaring the version to 2.4 : { code } < commonsioversion > 2.4 < /commonsioversion > { code } this happens both in 3.6.x and master branches .
658,objectalreadyexistsexception when using splitter and until-successful . when using a splitter and an until-successful message processor   the following exception is thrown : error 2012-10-03 14:46:09 550 [ [ 5955-until-successful ] .connector.http.mule.default.receiver.04 ] org.mule.exception.defaultmessagingexceptionstrategy : * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * message : null code : mule_error -- 1 -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- exception stack is : 1. null ( org.mule.api.store.objectalreadyexistsexception ) org.mule.util.store.abstractobjectstore:53 ( http : //www.mulesoft.org/docs/site/current3/apidocs/org/mule/api/store/objectalreadyexistsexception.html ) root exception stack trace : org.mule.api.store.objectalreadyexistsexception org.mule.util.store.abstractobjectstore.store ( abstractobjectstore.java:53 ) org.mule.routing.untilsuccessful.storeevent ( untilsuccessful.java:300 ) org.mule.routing.untilsuccessful.storeevent ( untilsuccessful.java:291 ) + 3 more ( set debug level logging or '-dmule.verbose.exceptions=true ' for everything ) steps to reproduce : 1 ) deploy the attached application '5955-until-successful.zip ' 2 ) invoke the app by hitting `` http : //localhost:8080/in '' expected : each message in the split list should be assigned a unique id in the untilsuccessful class which will be used in the object store actual : only the first message in the list is sent successfully as the second message throws an exception ( the mule event id is used and since this is the same for each message   the exception above is shown ) workaround : as a workaround   one may create an extra flow and make use of a vm queue in between the splitter and until-successful . this creates a new event per message   hence the exception does not occur .
659,upgrade activemq to version 5.11.0 . we need to evaluate the effort and migrate activemq dependencies to 5.11.0 to take advantage of the latest bugfixes .
660,release mule esb maven tools ( v 1.1 ) . we need to release version 1.1 ( ideally for 3.7 ) since this version now includes a proper test case for apps that belong to a domain . the release will also mean reviewing the current solution and testing the tools .
661,ca n't uncompress zip files containing no entries for folders . mule requires zip files that contain entries for folders and files like this : x/lib x/lib/a.jar x/lib/b.jar when the zip file contains only entries for files lie this : x/lib/a.jar x/lib/b.jar the file can not be processed correctly .
662,log4j2.xml not being loaded during functional test case . when doing a functional test case logs are not active by default . the idea should be that if i place a log4j2.xml in some place in the classpath then i should be able to enable logs . what happens is that this file is not getting picked up . does n't really matter in which part of the application folder structure is placed it does n't get loaded . if you run a test the only thing you see is : warn 2015-03-13 10:11:07 233 [ main ] org.mule.tck.junit4.abstractmuletestcase : -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- hung threads count : 2. test case : org.mule.munit.thetest . thread names : - > asyncloggerconfig-1 - 10 - > readerthread - 8 -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- now you try to configure log4j2 on your own the logs start working just fine but in order to do that you need to add this code to your test : try { uri configuration ; configuration = thread.currentthread ( ) .getcontextclassloader ( ) .getresource ( `` log4j2.xml '' ) .touri ( ) ; configurator.initialize ( `` config ''   null   configuration ) ; } catch ( urisyntaxexception e ) { e.printstacktrace ( ) ; } please check the attached project for more data . please notice that the application has just a logger mp with level debug which by default should n't be printed unless you change the logs ( which works just fine when running mule normally )
663,backport mule-8315 and mule-7789 to all maintenenance branches . as part of the library updates related to security vulnerabilities   there is a couple of changes that must be backported to 3.5.x   3.4.x   3.3.x   3.2.x and 3.1.x : mule-7789 : needed to remove the usage of tomcat-util artifact ( this one is already included in 3.5.x branch ) mule-8315 : needed to upgrade tomcat libraries to a newer version
664,collection splitter is not setting the group size when payload is an iterator . salesforce queries return an iterator and when a collection splitter is used   it fails to aggregate the collection after because the group size is set to -1. attached mule config this seems to be happening because this class https : //github.com/mulesoft/mule/blob/bfb3a17263d1e4b32ee10272cbf710a2bf41b16b/core/src/main/java/org/mule/routing/outbound/iteratormessagesequence.java is used from https : //github.com/mulesoft/mule/blob/1dbf6e09a651184e9c54ec8988ecf1907cbdd58f/core/src/main/java/org/mule/util/collection/eventtomessagesequencesplittingstrategy.java and it is setting unknown_size as group size for all iterator payloads
665,leverage mule-7588 in extensions api . leverage the work done in mule-7588 to implement a corrected lifecycle and dependency injection in the extensions api
666,xmltoxmlstreamreader does not support outputhandler as source type . xmltoxmlstreamreader declares outputhandler as source type ( in its superclass ) but fails to convert that type .
667,reuse operationimplementation instances instead of creating and injecting new ones each time . currently the ext-api is creating a new instance of the operation implementation for each event . that is very confortable for the user   but it has performance considerations associated to garbage collection and the new to perform dependency injection all the time . we need to move to a schema in which : * one instance is created per configuration and reused as long as that configuration lives * the class holding the method annotated with @ operation needs to have a constructor which receives a single argument which is the configuration to use . failure to provide such a constructor which result in the application not starting * upon creation   mule will inject dependencies on this class but will not add it to the registry * this also means that it will no longer be valid to obtain things like the muleevent through a @ inject annotation   you have to receive it a method argument   which means that the invoker needs a refresh too
668,add a backwards compatiblity setting to support devkit artifacts which violate jsr-330 . per the work done on mule-7588   mule now supports the jsr-330 spec . however   as devkit-1539 explains   devkit is currently violating that spec . devkit will fix this for the latest version but we need to add a compatibility setting to allow artifacts generated with older versions of devkit to function . this will work by customizing the injecting post processor to detectinstances which instances are devkit generated and skip dependency injection on them
669,domains are not well disposed and get reused on redeploy . . domains are cached on creation but they are not correctly removed on dispose so on redeployments they get reused .
670,improve mulemessage 's data type consistency . defaultmulemessage 's datatype is not being properly updated and maintained . for example : _defaultmulemessage # setencoding does not update datatype 's encoding _defaultmulemessage # setmimetype does not update datatype 's mimetype _defaultmulemessage # setpayload does not update datatype 's type _defaultmulemessage # setproperty is not update datatype when a encoding property is set on the message improving data type consistency and propagation is required to better support auto transformations and mapping tools
671,implement validations xml components . implement validations xml components
672,create mel version for each validator in the validations module . create mel version for each validator in the validations module
673,check if ext-api jars are maven central compliant . perform that verifyication on the mule-extensions-api and mule-extensions-api-annotations projects
674,remove unused manifest files . these manifest files are present in our code but are not used : ./modules/boot/src/main/resources/meta-inf/manifest.mf ./modules/builders/src/main/resources/meta-inf/manifest.mf ./modules/jaas/src/main/resources/meta-inf/manifest.mf ./modules/management/src/main/resources/meta-inf/manifest.mf ./modules/ognl/src/main/resources/meta-inf/manifest.mf ./modules/scripting/src/main/resources/meta-inf/manifest.mf ./modules/xml/src/main/resources/meta-inf/manifest.mf they are all replaced by the manifest configured in root pom.xml this manifest ./core/src/test/resources/meta-inf/manifest.mf is used to test the java version checking   we should n't use a real manifest   we should use a fake one to check that version control is working .
675,add a way to inject all available core extensions in a core extension . mule core extensions can have dependencies against other core extensions   but these dependencies are fixed on compile time ( dependencies are defined using mulecoreextensiondependency method annotation ) . in order to properly support some management scenarios   we need to provide a way to let a core extension to receive all the available core extensions . given the constraints on lifecycle imposed by the mulecoreextensiondependency dependencies   a core extension that receives all the available core extensions can not contain any methods annotated with it .
676,app.home property is no longer available . when an application is deployed   the spring configuration builder is running before the simpleconfigurationbuilder making some properties like app.home not available to the mule config
677,extension api should consistently always inject values through fields instead of setters . right now   when the ext-api creates an object uses setters to inject values parsed from xml   while in some other scenarios like when resolving expressions it uses fields . that leads to some inconsistency plus the setter injection limits the ability to encapsulate the internal representation of some object 's state . always use fields to inject values .
678,extensionresourcesgeneratorannotationprocessor is not been fired . extensionresourcesgeneratorannotationprocessor is not been fired because the full classname of @ extension has changed and the refactor did n't modified this file . this is because of a java language limitation which does n't allow a .class.getname ( ) kind of reference there . as a result   xsd is not generated when building a extension
679,add the concept of parameter alias in the ext-api annotations . when using the ext-api through annotations   there 're limitations on the possible names that parameters can take because of the java language reserved words . for example   an attribute can not be named class . another problem is when from a coding point of view   an attribute should have one name which is n't so representative when seen from an extension 's parameter point of view . because of that   we need the ability to add an alias attribute to the @ parameter annotation .
680,the application logging configuration is not read or used . . when deploying an app with a logging congif ( log4j2.xml )   mule doesnt use its config and use the default every time . steps to reproduce : deploy the attached app on a mule instance . wait for it to be deployed . the default app log will be created no matter which configuration was given . expected behavior : log into the configured file instead of the default one   if using console   should log into mule_ee.log or mule.log ( depending on the distribution ) .
681,introduce type level aliases for extensions api . when the xml support for the ext-api maps a java complex type as a top level element ( usually the case when defining global pojos )   there 's the need to provide an alias so that the global element can have a name which is not directly tied to the java type name .
682,add data type to message properties . mulemessage properties have no information about the type of the value they are holding . providing a way to maintain this information will help to support more transformation scenarios and will improve usability in studio
683,replace setpayloadtransformer with a plain message processor . setpayloadtransfomer is the implementation behind set-payload element . as the name implies   is a transformer and is executed invoking mulemessage transformation capabilities . problem with this transformer is that it returns only a value and in order to properly propagated message 's datatype   it must set the correct datatype ( the one configured by the user ) . besides that   transfomer 's source/target datatype is not valid on this particular case   because the datatpye is dynamic ( assigned value can be resolved from an expression ) . so datatype ca n't be statically defined .
684,upgrade async-http-client to 1.9.19. . we need to upgrade to version 1.9.18 in order to support ntlm . here 's ahc 's migration guide : https : //github.com/asynchttpclient/async-http-client/blob/master/migration.md there could also be some issues with missing multipart classes .
685,implement ntlm authentication for the http requester . once ahc is upgraded to 1.9.18 we should be able to add support for ntlm .
686,make json schema validator interoperable with the new validator module . in mule 3.6.0 a json schema validator was introduced . it should be made interoperable with the new validation module introduced in mule-8216 so that it can participate in < validation : all > operation
687,improve set properties transformers to set property datatype . mule message properties now contain a datatype . all the transformers that set properties in a message/session should provide a way to configure the datatype and update that datatype in the property accordingly .
688,generated xsd defines restriction groups by extension . when an operation takes nestedprocessors as an argument   the @ restrictedto annotation can be used to limit the acceptable message processors to a given substitution group . however   what the xsd generator is doing is to create a group which lists all of the operations in the given restriction type . because that group is fixed   it does n't allow to externally contribute more elements with the same substitution group . what the generator should do is to define a group which has a reference to the substitutiongroup and thus allowing variable elements which meet the restriction
689,argumenttypemismatch when many nested operations are supported but only one is provided . the ext-api supports defining operations which can take one nested operation or a list of them . when the operation supports many but only one is provided   the resolversetresult does n't contain a list of one nestedoperation but a single one   which results on an argumenttypemismatch .
690,improve data type propagation for properties . work done on mule-8453 did not include updating some property setter methods to include datatype .
691,message transformation must no update payloads data type when payload was not transformed . defaulmulemessage # transformmessage ( muleevent   transformer ) always updates the message data type to the transformer output data type . that is wrong because some transformers update parts of the message other than the payload . ( like message properties ) probably those transformers should be plain message processors   but a way to fix this problem is to check that payload has changed after the transformation .
692,configs should be optional when using ext-api operations in a flow . right now   every mp which executes an extension operation is required to provide a config . this is not good from a usability standpoint so the desired behaviour is : * if a config is specified through the config-ref attribute   then use it * if no config is specified but there 's one configured   then locate it and use it * if no config is specified nor defined   then depending on the extension an implicit one can be created . an implicit configuration is created by simply instantiating the default config . configs should be marked as not supporting implicit creation through some annotation/annotation attribute
693,remove the `` repackaged '' package from extension-support module . because ext-api development started when mule was using spring 3.x   a spring 4.x package was embedded into our code . now that spring was upgraded to the lastest version   that repackage should be remove in favor of the original classes in the spring jar
694,implement a solution to automatically infer supported schema versions for xml compatible extensions . right now   when an extension is to have xml support   the @ xml annotation includes a `` schemaversion '' attribute . that is not a scalable solution because assuming that an extension is released in version 3.7   then its spring bundle should support schemas 3.7   3.8   3.9 and so forth   and it 's very undesirable for a developer to traverse through all the extensions modifying that . we need a solution in which given an `` inception version '' version   the current schema version is inferred and the prior ones back to the inception version are also included in the spring bundle .
695,spike on on inferring extension version from project version . currently   the @ extension annotation includes a version attribute which is used to specify an extension version . however   it 's undesirable to have the need to upgrade the version of every extension each time that a new version is released . a mechanism should be defined for the extension version to be automatically inferred from the underlying $ { project.version } . there should still be a way to fix the extension version arbitrarily
696,validate that pojo attributes are not composites . when a pojo is used as a parameter in an extension   xsd support is generated to allow users define the instance on the xml . however   this wo n't work if the object is a composite . the composite fields should be skipped when generating the xsd support .
697,it should not be mandatory for a class annotated with @ operation to depend on the config object . right now   when a class contains methods annotated with @ operation   then it is demanded that a single constructor is available to create the instance and pass the configuration instance over . however   not in all cases the operations in a class require of the configuration . the behaviour should be that if such constructor exists then it 's used . if it does n't   then a default constructor is used to create a config-less operation instance . only if no constructor is found which matches both criterias should an exception be thrown .
698,operations of an extensible extensions should not require to be annotated with @ implementationof . extensions can be annotated with @ extensible to signal that external modules can extend them further . right now   it 's required for the classes in which such extensions are implemented to be annotated with @ implementationof . however   that 's redundant since a given extension operations are by very definition extending it . such annotation should only appear on third party extensions which are in fact extending it .
699,consider renaming @ implementationof to @ extensionof . consider renaming @ implementationof to @ extensionof since it 's clearer for some persons
700,wsconsumerconfig should use the httprequesterconfig interface rather than the internal implementation . the * connectirconfig * field of the class org.mule.module.ws.consumer.wsconsumerconfig can be configured by passing an initialized instance of a * defaulthttprequesterconfig * when it should be using the interface of the the previous one : * httprequesterconfig * . this small chance will unblock the devkit 's story [ devkit-1527|https : //www.mulesoft.org/jira/browse/devkit-1527 ] providing an automated way of instantiating wsc manually when initializing a httprequesterconfig by hand .
701,provide a builder for httprequesterconfig interface . despite the normal use case for initializing a httprequesterconfig is from the definition parser   for a specific devkit 's story [ devkit-1527|https : //www.mulesoft.org/jira/browse/devkit-1527 ] we need to feed the wsconsumerconfig with an already initialized instance of * defaulthttprequersterconfig * . before this jira   ideally   [ mule-8481|https : //www.mulesoft.org/jira/browse/mule-8481 ] should be tackled down to make wsconsumerconfig consume the httprequesterconfig interface   so that from a devkit 's pov initializing objects and passing through the wsconsumerconfig will work properly .
702,update message data type when content-type property changes . when content-type property is set on a message   then payload 's data type must be updated to reflect the new value .
703,succesful undeployment is not show in console . # download 3.7.0-m2-snapshot # copy any mule app to apps directory # start server # delete default-anchor.txt undeployment request is logged and is done but concole never shows that now there is only one app deployed and that default app was undeployed successfully .
704,rename the artifact mule-extension-validations to mule-module-validation . we finally decided to not reflect the difference between a craft module and an ext-api based one on the artifact name since from a user 's point of view there should n't be a difference
705,ip validator should support ipv6 . ip validator should support ipv6   which is not an experimental protocol but a reality .
706,email validator failures . email validator fails for the following cases || email || is valid ? || | a @ a.com | no ( leading space ) | | a @ a.com | no ( trailing space ) |
707,jsr-330 @ named and @ qualifier annotations are ignored . because of spring issue https : //jira.spring.io/browse/spr-12914   the @ named and @ qualifier annotations are not taken into account . the issue can be worked around by overriding the org.springframework.beans.factory.support.defaultlistablebeanfactory # findautowirecandidates method . apply a temporal fix for this and create another issue to remove that workaround until spring fixes the issue .
708,url validator fails . url validator fails for these urls : should be valid : http : //✪df.ws/123 foo : //username : password @ example.com:8042/over/there/index.dtb ? type=animal & name=narwhal # nose http : //userid : password @ example.com:8080/ should be invalid : http : //hola.com ( trailing space ) http : //hola . com
709,revisit the changes of mule-8493 when spr-12914 is fixed . becaues of https : //jira.spring.io/browse/spr-12914   mule-8493 had to be created to overcome a limitation on our jsr-330 support . when spring fixes the issue   the changes applied on that commit should be revisited to see if they 're still needed or should be deleted
710,upgrade spring to 4.1.6 . upgrade spring to 4.1.6
711,message transformation must maintain original mimetype and encoding when transformer does not provide them . when a transfomer is applyed on a defaultmulemessage and changes its payload   then the transformer 's output datatype is assigned to the message datatype . however   transformer 's output datatype not always defines mimetype and encoding . if a transformer does not change any of those fields   then the fields from original payload 's datatype should be used .
712,extensionmanagerconfigurationbuilder not invoked when mule starts in standalone mode . when starting in standalone mode   the extensionmanagerconfigurationbuilder is not been invoked and thus applications fail to deploy if they contain any extensions
713,remove log4j2 error message when building . when running the maven build from source   the following error message is thrown   even when the build finishes successfully . { quote } [ info ] -- - maven-processor-plugin:2.2.4 : process ( process ) @ mule-extension-validation -- - error statuslogger no log4j2 configuration file found . using default configuration : logging only errors to the console . { quote }
714,remove the `` extension '' prefix from the generated xsd file name . since per mule-8485 we decided that extensions should not have any naming differentiator   the % s-extension- % s pattern which is now used to name generated xsd needs to change to be source agnostic .
715,xsd generator creates wrong attribute types for numeric parameters . h2 . size validator has int parameters for min and max values but the generated xsd creates attributes with long data type . { code : xml } < xs : complextype name= '' validatesizetype '' > < xs : complexcontent > < xs : extension xmlns : mule= '' http : //www.mulesoft.org/schema/mule/core '' base= '' mule : abstractmessageprocessortype '' > < xs : attribute type= '' mule : substitutablename '' use= '' required '' name= '' config-ref '' > < xs : annotation > < xs : documentation > specify which configuration to use for this invocation. < /xs : documentation > < /xs : annotation > < /xs : attribute > < xs : attribute type= '' mule : expressionobject '' use= '' required '' name= '' value '' > < /xs : attribute > < xs : attribute type= '' mule : expressionlong '' use= '' optional '' name= '' min '' > < /xs : attribute > < xs : attribute type= '' mule : expressionlong '' use= '' optional '' name= '' max '' > < /xs : attribute > < xs : attribute type= '' mule : expressionstring '' use= '' optional '' name= '' message '' > < /xs : attribute > < xs : attribute type= '' mule : expressionstring '' use= '' optional '' name= '' exceptionclass '' > < /xs : attribute > < /xs : extension > < /xs : complexcontent > < /xs : complextype > { code } { code } / * * * validates that { @ code value } has a size between certain inclusive boundaries . this * validator is capable of handling instances of { @ link string }   { @ link collection }   * { @ link map } and arrays * * @ param value the value to validate * @ param min the minimum expected length ( inclusive   defaults to zero ) * @ param max the maximum expected length ( inclusive ) . leave unspecified or { @ code null } to allow any max length * @ param options the { @ link validationoptions } * @ param event the current { @ link muleevent * / @ operation public void validatesize ( object value   @ optional ( defaultvalue = `` 0 '' ) int min   @ optional integer max   @ parametergroup validationoptions options   muleevent event ) throws exception { validationcontext context = createcontext ( options   event ) ; validatewith ( new sizevalidator ( value   min   max   context )   context   event ) ; } { code } h2 . expressionobject is generated for java.lang.long parameters in islong validator { code : xml } < xs : element xmlns= '' http : //www.mulesoft.org/schema/mule/validation '' type= '' islongtype '' substitutiongroup= '' validator-message-processor '' name= '' is-long '' > < /xs : element > < xs : complextype name= '' islongtype '' > < xs : complexcontent > < xs : extension xmlns : mule= '' http : //www.mulesoft.org/schema/mule/core '' base= '' mule : abstractmessageprocessortype '' > < xs : attribute type= '' mule : substitutablename '' use= '' required '' name= '' config-ref '' > < xs : annotation > < xs : documentation > specify which configuration to use for this invocation. < /xs : documentation > < /xs : annotation > < /xs : attribute > < xs : attribute type= '' mule : expressionstring '' use= '' optional '' name= '' pattern '' > < /xs : attribute > < xs : attribute type= '' mule : expressionstring '' use= '' required '' name= '' value '' > < /xs : attribute > < xs : attribute type= '' mule : expressionstring '' use= '' optional '' name= '' locale '' > < /xs : attribute > < xs : attribute type= '' mule : expressionobject '' use= '' optional '' name= '' minvalue '' > < /xs : attribute > < xs : attribute type= '' mule : expressionobject '' use= '' optional '' name= '' maxvalue '' > < /xs : attribute > < xs : attribute type= '' mule : expressionstring '' use= '' optional '' name= '' exceptionclass '' > < /xs : attribute > < xs : attribute type= '' mule : expressionstring '' use= '' optional '' name= '' message '' > < /xs : attribute > < /xs : extension > < /xs : complexcontent > < /xs : complextype > { code }
716,xsd generator fails to generate documentation for attributes . we should check with [ this tool|https : //github.com/mulesoft/mule-tool-schema-doc ] that the documentation generated for validators extension is correct .
717,replace all string to number validators by a single one . there are several validators that allows to check whether a string has a number format : is-long   is-integer   is-double   is-float   is short . it would be a better user experience to have just one is-number and let user decide on the range using min and max attributes .
718,cxf proxy-client is throwing nullpointerexception . nowadays   if you want to create a proxy   you have to specify the port name and the soapversion for each binding . this information is provided by the wsdl   so it should n't be required   the proxies should detect them automatically . as a consequence   if you have an api with multiple ports   one of them receiving a soap 1.1 envelope   and other one receiving a soap 1.2 envelope   and if you do n't specify the port and the soapversion in both proxies ( service and client ) you will not be able to send a soap 1.2 message . this means that a simple proxy can not be used with both types of soap versions .
719,setting a nullpayload in a property must behave as setting null . mule uses nullpayload to represent a null value in a mulemessage 's payload . when a message has nullpayload and a property is set using an expression like # [ payload ]   then the property will contain nullpayload . this situation requires that checking a property requires to consider nullpayload value as a separate case other than null and not null .
720,allow default processing strategy to be configured per app . currently if you want to use a sync processing strategy in every flow it is necessary to configure it on every single flow in your app . add a attribute to the < configuration > element to define this once . also   consider allowing a system property too . this would be useful for : - alternative testing plans - setting default per instance   e.g . in cloudhub maybe . { code : xml } < configuration defaultprocessingstrategy= '' non-blocking '' / > { code }
721,add support for non-blocking processing strategy to cxf/ws-consumer . add support so that cxf/ws-consumer can be used in flow and non-blocking processing supported .
722,npe in is-long validator when setting a null locale . when setting programatically the locale to null validator fails with npe { code : xml } < flow name= '' full-long '' > < validation : is-long value= '' # [ payload ] '' pattern= '' # [ pattern ] '' message= '' # [ message ] '' exceptionclass= '' # [ exceptionclass ] '' locale= '' # [ locale ] '' minvalue= '' # [ minvalue ] '' maxvalue= '' # [ maxvalue ] '' config-ref= '' validation '' / > < /flow > { code } { code } @ test public void otherislong ( ) throws exception { muleevent event ; event = gettestevent ( `` 400 % '' ) ; event.setflowvariable ( `` pattern ''   `` # # # % '' ) ; event.setflowvariable ( `` locale ''   null ) ; event.setflowvariable ( `` minvalue ''   null ) ; event.setflowvariable ( `` maxvalue ''   null ) ; event.setflowvariable ( `` message ''   `` wrong pattern . `` ) ; event.setflowvariable ( `` exceptionclass ''   java.lang.arrayindexoutofboundsexception.class ) ; runflow ( `` full-long ''   event ) ; } { code }
723,provide access to client certificate on 2-way tls authenticated connections . when a 2-way tls authenticated connection is created the client certificate should be exposed in the flow since it may be useful to use it to identify the client . we are going to expose the client certificate only ( not the ca certificates ) in the flow using a new inbound property http.client.cert . the user can access the client principal by doing message.inboundproperties [ 'http.client.cert ' ] .getsubjectdn ( ) we analyse if there is any risk by exposing the certificate as an inbound property but we got to the conclusion that there 's no risk since the client certificate is publicly available in general and it 's not used for the communication encrypt / decrypt . it 's only used to identify the client .
724,add a trace/debug log when a validation was done successfully . it would be nice to have a trace/debug log that is shown after a validator is successfully executed . the log message should mention the info to identify the validator itself and the arguments used in the execution of the validator .
725,is-true validator throws validationexception for string input . is-true and is-false validators throw illegalargumentexception for non boolean values . but for string values throw validatorexception
726,validators fail when used with a mel expression inside a component . when you use a mel expression validator inside another component   the following error is thrown : { quote } * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * message : execution of the expression `` validator.validateurl ( 'http : //www.mulesoft.com ' ) '' failed . ( org.mule.api.expression.expressionruntimeexception ) . message payload is of type : nullpayload code : mule_error -- 2 -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- exception stack is : 1 . [ error : unresolvable property or identifier : _muleevent ] [ near : { ... tension.validation.internal.el.validatorelcontext ( _muleevent ) .... } ] ^ [ line : 1   column : 66 ] ( org.mule.mvel2.propertyaccessexception ) org.mule.mvel2.optimizers.impl.refl.reflectiveaccessoroptimizer:693 ( http : //www.mulesoft.org/docs/site/current3/apidocs/org/mule/mvel2/propertyaccessexception.html ) 2. execution of the expression `` validator.validateurl ( 'http : //www.mulesoft.com ' ) '' failed . ( org.mule.api.expression.expressionruntimeexception ) org.mule.el.mvel.mvelexpressionlanguage:202 ( http : //www.mulesoft.org/docs/site/current3/apidocs/org/mule/api/expression/expressionruntimeexception.html ) 3. execution of the expression `` validator.validateurl ( 'http : //www.mulesoft.com ' ) '' failed . ( org.mule.api.expression.expressionruntimeexception ) . message payload is of type : nullpayload ( org.mule.api.messagingexception ) org.mule.execution.exceptiontomessagingexceptionexecutioninterceptor:32 ( http : //www.mulesoft.org/docs/site/current3/apidocs/org/mule/api/messagingexception.html ) -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- root exception stack trace : [ error : unresolvable property or identifier : _muleevent ] [ near : { ... tension.validation.internal.el.validatorelcontext ( _muleevent ) .... } ] ^ [ line : 1   column : 66 ] org.mule.mvel2.optimizers.impl.refl.reflectiveaccessoroptimizer.getbeanproperty ( reflectiveaccessoroptimizer.java:693 ) org.mule.mvel2.optimizers.impl.refl.reflectiveaccessoroptimizer.compilegetchain ( reflectiveaccessoroptimizer.java:337 ) org.mule.mvel2.optimizers.impl.refl.reflectiveaccessoroptimizer.optimizeaccessor ( reflectiveaccessoroptimizer.java:140 ) + 3 more ( set debug level logging or '-dmule.verbose.exceptions=true ' for everything ) * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * { quote }
727,when all validator fails it should always throw an exception . allowing all validator to avoid throwing an exception make us think about where should the validation result go . if we put it in the payload   we should overwrite the payload always   not only for the failing scenario . so   best solution for now is to always throw an exception . if needed in the future we can add the option to not throw an exception and put the result in a flow variable .
728,remove aspectj dependency in ce . aspectj needs to be upgraded to version 1.8.5 to be consistent with the version number across all distributions and remove warnings when building .
729,when custom validator fails does n't throw exception . when using this custom validator : { code } public static class failingcustomvalidator implements validator { @ override public validationresult validate ( muleevent event ) { return immutablevalidationresult.error ( test_message ) ; } } { code } flow execution goes on and now exception is thrown .
730,remove domain   isbn   date   credit card validators . remove
731,fix validation module issues . fix linked issues of the validations module
732,mbeans/jmx memory leak on vanilla mule esb standalone . jira created at request of mariano gonzalez - see http : //forum.mulesoft.org/mulesoft/topics/mbeans-jmx-memory-leak-on-vanilla-mule-esb-standalone-no-custom-code-deployed ? utm_source=notification & utm_medium=email & utm_campaign=new_reply & utm_content=reply_button & reply % 5bid % 5d=15618818 # reply_15618818 1 ) deploy an out of the box mule standalone esb   e.g . mule-standalone-3.6.1 2 ) start - default app deploys   no custom code deployed 3 ) start oracle visualvm   connect to mule esb 4 ) watch the heap being consumed i performed this test with max memory changed to 256mb in wrapper.conf ( so i did n't have to wait so long for memory to be consumed )   on opensuse 13.1   with oracle java version `` 1.8.0_31 '' java ( tm ) se runtime environment ( build 1.8.0_31-b13 ) java hotspot ( tm ) 64-bit server vm ( build 25.31-b07   mixed mode ) i have observed the same symptoms using java jdk1.7.0_75 on opensuse   and java jdk1.7.0_xx on mac/os   so it does n't seem to be o/s or java related . if i do n't attempt to monitor mule esb   the memory leaks do n't appear to happen   though it 's difficult to be sure without being able to monitor   but i presume that this is mbean/jmx instrumentation related . running oracle jconsole does not appear to induce the same dramatic memory consumption   but does seem to cause some sort of slow incremental leak .
733,reverse the semmantics of mule-8415 . the flag introduced in mule-8415 disables dependency injection for devkit components . we need it to be other way around . by default   mule is not to inject into devkit and the property is to be renamed to mule.devkit.participates.di and only when set to true devkit will be considered into di .
734,exposes information needed by datamapper in order to run as a plugin . datamapper is accessing some elements in our code that is defined as protected . because now datamapper is going to be a mule plugin   this wo n't work anymore as it will ran in a different classloader . need access to the following fields on mvelexpressionlanguage : globalfunctions   parserconfiguration and aliases need access to muleimmutablevariableresolver class
735,ensure that transformers use a proper return datatype . transformers define an output datatype which is set on the message after the transformation . in order to properly propagate message datatype   transformers must return the proper type   mimetype and encoding that corresponds to the executed transformation .
736,di should never include devkit components . although mule-8534 and mule-8415 tried to keep some level of compatibility between mule 's injector and devkit 's components   some other integration issues keep popping up so we decided that for now devkit will be excluded from it . devkit will provide its own solution for di
737,dispose lifecycle phase is invoked even when initialise phase fails . dispose ( ) should not be invoked if initialise ( ) fails . at least thats how i believe it always worked . this change causes npe 's in dispose ( ) in a lot of cases . which results in much more verbose and confusing errores being logged .
738,lifecycle not applied to objects manually registered during initialisation . suppose an initialisable or startable object which during any of those phases registers a new lifecycle object ( e.g . : like an endpoint which creates and registers a connector ) . only the already completed phases are applied to the newly registered object while the one being currently executed is n't
739,cxf schemas for 3.5 and 3.6 are wrong . https : //github.com/mulesoft/mule/blob/mule-3.x/modules/cxf/src/main/resources/meta-inf/spring.schemas # l5-l6
740,core schema for 3.6 is not defined and rubbish at the end of line . https : //github.com/mulesoft/mule/blob/mule-3.x/modules/spring-config/src/main/resources/meta-inf/spring.schemas # l11 and remove rubbish bracket at end of line .
741,upgrade spring security to 4.0.1.release . spring dependencies were updated to 4.1.6 and keeping spring security in 3.1.0 is an important risk .
742,update c3p0 to version 0.9.5 . there is a new version of c3p0 . would be great to update it to replace the old version that is shipped on mule
743,add max-send-buffer-size entry in wrapper.conf . we need to add that property now that it 's available .
744,promote to public api defaulthttplistenerconfig.resolvepath or equivalent behavior . there 's no way to resolve the full path of a listener using the public api . mule 3.6 offered the following method that was changed in 3.7 : { code } public string resolvepath ( string listenerpath ) { code }
745,springregistry is not thread-safe . in versions prior to 3.7.0   the springregistry was read only and all objects registered through the muleregistry api went to the transient registry . per the work in mule-7588   the transientregstry no longer exists and the springregistry is writable . however   it 's missing the readwritelock that transientregistry had to allow register and lookup objects concurrently . this causes random failures   specially when dealing with dynamic endpoints
746,fix jffi version . the jruby pom does n't specify a version for jffi   so maven picks the last one available . as a result   each time a new version of jffi is released   the build breaks because the whitelist validation fails . fix in 1.2.9 which is the latest available at this moment
747,add support for preemptive basic authentication in the http module . allow to configure if basic authentication is preemptive or not in the new http connector   by adding an attribute to the config : preemtive= '' true|false|expression '' also add this to the config builder in the public api of the connector .
748,applications and corresponding domains should share the same optionalobjectcontroller . optionalobjectscontroller is used to track objects registered through registry-bootstrap.properties which are optional . when an application belongs to a domain   that instance should be shared between the app and the domain .
749,dependency injection fails when injection candidate is registered on domain . when the @ inject annotation is used to inject an instance which leaves on the parent domain context   injection fails
750,add support for expressions in the authentication configuration of the http connector . add support for mel expressions in the attributes of the authentication elements of the new http connector .
751,datatype does not validates encoding . when setting the encoding in payload   transformers   properties and variables with an incorrect value it is not validated . in the other hand the mimetype throws an exception . i think that the encoding should have the same behaviour . when you set the property `` contenttype '' it let you use any value in both mimetype and encoding . but maybe in the content type situation is the desired behaviour . steps to reproduce ( see attached app ) : set payload : 1 ) send http request to http : //localhost:8081/encoding_not_throw_exception : there the first set payload set the encoding with an invalid value but as then there is another set payload that set the encoding to a valid encoding there is not exception . 2 ) send http request to http : //localhost:8081/encoding_throw_exception : here the set payload set an invalid encoding value and it throws `` java.io.unsupportedencodingexception '' . properties : 1 ) send http request to http : //localhost:8081/encoding_not_throw_exception_in_properties : 2 ) set property sets the encoding with a wrong value . in the check in the outbound property log : outbound scoped properties : pepe=2 pepe-datatype=simpledatatype { type=java.lang.integer   mimetype='text/plain '   encoding='qwd ' }
752,inbound properties copied to outbound properties not maintain their datatypes . when the inbound properties are copied to outbound properties they should maintain their datatypes . right now they are setted to the default message type ( encoding = null   mimetype = \ * /\ * ) . 1 ) send http request to http : //localhost:8081/copy_property . 2 ) in the first log you can check that the outbound property `` inboundprop '' has mimetype= '' text/xml '' encoding= '' utf-8 '' before the vm connector . 3 ) after the vm connector the inboundproperty `` inboundprop '' is copied from the inboundproperties to outboundproperties with `` < copy-properties propertyname= '' inboundprop '' doc : name= '' copy property '' / > '' . then you can check in the second logger that the datatype of the `` inboundprop '' is set with encoding = null   mimetype = * / *
753,the json-to-object transformer not change the mimetype correctly . it should set application/json . the json-to-object not change the mimetype correctly . it should set application/json as mimetype but keep text/javascript after an http request . steps to reproduce ( see attached app ) : 1 ) send http request to http : //localhost:8081/json_object_wrong_mime_type . 2 ) check in the log the datatype of the message after json-to-object transformer in the outbound property `` json_object_datatype '' .
754,datatype can not be configured when adding properties using message-property-transformer . you ca n't set the datatype to the properties in the message properties transfomer
755,fix jdk8 build . tests run in a different order in the jdk8 build   so httpsshareporttestcase fails in that case because of some other test that runs before it .
756,spike on collection splitter is not setting the group size when payload is an iterator . salesforce queries return an iterator and when a collection splitter is used   it fails to aggregate the collection after because the group size is set to -1. attached mule config this seems to be happening because this class https : //github.com/mulesoft/mule/blob/bfb3a17263d1e4b32ee10272cbf710a2bf41b16b/core/src/main/java/org/mule/routing/outbound/iteratormessagesequence.java is used from https : //github.com/mulesoft/mule/blob/1dbf6e09a651184e9c54ec8988ecf1907cbdd58f/core/src/main/java/org/mule/util/collection/eventtomessagesequencesplittingstrategy.java and it is setting unknown_size as group size for all iterator payloads
757,spike - mule support xa transaction on xa resources used by a spring object component ? . as you should know   a common use case is the bridge pattern : * read a message from an inbound endpoint ( from a jms queue or/and a database through jdbc ) . * writing the message to an outbound endpoint ( to a jms queue or/and a database through jdbc ) . { code : xml } < service name= '' mybridgeservice '' > < inbound > < jms : inbound-endpoint queue= '' /queue/inbox '' / > < /inbound > < outbound > < multicasting-router > < jms : outbound-endpoint queue= '' /queue/outbox '' / > < jdbc : outbound-endpoint querykey= '' insertmessagestmt '' / > < /multicasting-router > < /outbound > < /service > { code } what happens then if something goes wrong when writing the result to the outbound endpoint ( eg . jdbc endpoint ) ? if you do n't use xa transaction on inbound and outbound endpoints   the message will not be rollbacked to the inbound endpoint in case of an exception . so you will have to solve this issue by configuring < xa-transaction > on each endpoint with the appropriate transaction strategy . { code : xml } < service name= '' mybridgeservice '' > < inbound > < jms : inbound-endpoint queue= '' /queue/inbox '' > < xa-transaction action= '' always_begin '' / > < /jms : inbound-endpoint > < /inbound > < outbound > < multicasting-router > < jms : outbound-endpoint queue= '' /queue/outbox '' > < xa-transaction action= '' always_join '' / > < /jms : outbound-endpoint > < jdbc : outbound-endpoint querykey= '' insertmessagestmt '' > < xa-transaction action= '' always_join '' / > < /jdbc : outbound-endpoint > < /multicasting-router > < /outbound > < /service > { code } but what happens now if you have a component between inbound and outbound enpoints ? { code : xml } < service name= '' mydaoservice '' > < inbound > < jms : inbound-endpoint queue= '' /queue/inbox '' > < xa-transaction action= '' always_begin '' / > < /jms : inbound-endpoint > < /inbound > < component > < spring-object bean= '' messagedao '' / > < /component > < outbound > < multicasting-router > < jms : outbound-endpoint queue= '' /queue/outbox '' > < xa-transaction action= '' always_join '' / > < /jms : outbound-endpoint > < jdbc : outbound-endpoint querykey= '' insertmessagestmt '' > < xa-transaction action= '' always_join '' / > < /jdbc : outbound-endpoint > < /multicasting-router > < /outbound > < /service > { code } in most cases   the spring object component ( eg . messsagedao ) will execute complicated business operations ( from a currently existing business api ) and also use a datasource to execute several sql select and update statements before returning a result to the outbound . these jdbc operations will be handled likely by spring jdbctemplate or even hibernatetemplate . as far as i understand   mule is fully responsible to handle enlistment/delistment and close of xa resources ( see _org.mule.transaction.xatransaction_ ) . so by default   xa resources used by a spring object component will not be handled by mule and will not participate in the xa transaction started from mule . for completeness ... i 've also found a unit test for this usecase in mule distribution under mule_home/src/mule-3.1.2-src.zip/org/mule/test/integration/transaction/xatransactionswithspringdao.java . when you execute this test   you will have a successful result but the xa resource used by the dao bean is not enlisted nor delisted in/from the transaction started from mule .
758,upgrade async-http-client to 1.9.21 . this version includes several fixes but depends on also upgrading grizzly .
759,upgrade grizzly to 2.3.20 . this is necessary to upgrade ahc .
760,content-type is not set on http responses . when using an objecttojson transformer ( with return type string )   `` content-type '' header is not being set in the response . this might happen with other transformers   in fact with any other thing that sets a string payload . attaching an example app that reproduces the issue . running the same app with mule 3.6 shows the right behavior .
761,jmx connection error when using jconsole . deployed an simple app with an http listener and http request . opened oracle java mission control and when i went to the threads view i got an exception on the console . i can not see the threads when using jconsole   it seems that jmc recovers from that error and shows the threads anyway but at the cost of having a big delay in the response time . this is working in 3.5.x
762,set-payload with invalid mime type returns an ugly error . when using an invalid mime type in set-payload the error message is not very clear . deploy this app : { code : xml } < ? xml version= '' 1.0 '' encoding= '' utf-8 '' ? > < mule xmlns : scripting= '' http : //www.mulesoft.org/schema/mule/scripting '' xmlns : db= '' http : //www.mulesoft.org/schema/mule/db '' xmlns : tracking= '' http : //www.mulesoft.org/schema/mule/ee/tracking '' xmlns : http= '' http : //www.mulesoft.org/schema/mule/http '' xmlns= '' http : //www.mulesoft.org/schema/mule/core '' xmlns : doc= '' http : //www.mulesoft.org/schema/mule/documentation '' xmlns : spring= '' http : //www.springframework.org/schema/beans '' version= '' ee-3.7.0 '' xmlns : xsi= '' http : //www.w3.org/2001/xmlschema-instance '' xsi : schemalocation= '' http : //www.springframework.org/schema/beans http : //www.springframework.org/schema/beans/spring-beans-current.xsd http : //www.mulesoft.org/schema/mule/core http : //www.mulesoft.org/schema/mule/core/current/mule.xsd http : //www.mulesoft.org/schema/mule/http http : //www.mulesoft.org/schema/mule/http/current/mule-http.xsd http : //www.mulesoft.org/schema/mule/ee/tracking http : //www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd http : //www.mulesoft.org/schema/mule/db http : //www.mulesoft.org/schema/mule/db/current/mule-db.xsd http : //www.mulesoft.org/schema/mule/scripting http : //www.mulesoft.org/schema/mule/scripting/current/mule-scripting.xsd '' > < http : listener-config name= '' http_listener_configuration '' host= '' 0.0.0.0 '' port= '' 8081 '' doc : name= '' http listener configuration '' / > < http : request-config name= '' http_request_configuration3 '' host= '' localhost '' port= '' 8082 '' doc : name= '' http request configuration '' / > < flow name= '' nonblockingflow '' processingstrategy= '' non-blocking '' > < http : listener config-ref= '' http_listener_configuration '' path= '' / '' doc : name= '' http '' allowedmethods= '' get '' / > < set-payload value= '' response ok '' encoding= '' asdfsadf '' returnclass= '' pepe '' name= '' my-set-payload '' mimetype= '' mimetypefake '' ignorebadinput= '' false '' / > < /flow > < /mule > { code } request : ~ curl http : //localhost:8081/ javax.activation.mimetypeparseexception : unable to find a sub type . ( org.mule.api.muleruntimeexception ) . message payload is of type : bufferinputstream % app log : org.mule.execution.exceptiontomessagingexceptionexecutioninterceptor:32 ( http : //www.mulesoft.org/docs/site/current3/apidocs/org/mule/api/messagingexception.html ) -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- root exception stack trace : javax.activation.mimetypeparseexception : unable to find a sub type . javax.activation.mimetype.parse ( mimetype.java:102 ) javax.activation.mimetype. < init > ( mimetype.java:63 ) org.mule.transformer.types.simpledatatype. < init > ( simpledatatype.java:40 ) + 3 more ( set debug level logging or '-dmule.verbose.exceptions=true ' for everything ) * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
763,deployment should fail when using invalid mime type . when deploying the below config deployment should fail because mime type does not exists . now is failing in runtime when executing the flow { code : xml } < ? xml version= '' 1.0 '' encoding= '' utf-8 '' ? > < mule xmlns : scripting= '' http : //www.mulesoft.org/schema/mule/scripting '' xmlns : db= '' http : //www.mulesoft.org/schema/mule/db '' xmlns : tracking= '' http : //www.mulesoft.org/schema/mule/ee/tracking '' xmlns : http= '' http : //www.mulesoft.org/schema/mule/http '' xmlns= '' http : //www.mulesoft.org/schema/mule/core '' xmlns : doc= '' http : //www.mulesoft.org/schema/mule/documentation '' xmlns : spring= '' http : //www.springframework.org/schema/beans '' version= '' ee-3.7.0 '' xmlns : xsi= '' http : //www.w3.org/2001/xmlschema-instance '' xsi : schemalocation= '' http : //www.springframework.org/schema/beans http : //www.springframework.org/schema/beans/spring-beans-current.xsd http : //www.mulesoft.org/schema/mule/core http : //www.mulesoft.org/schema/mule/core/current/mule.xsd http : //www.mulesoft.org/schema/mule/http http : //www.mulesoft.org/schema/mule/http/current/mule-http.xsd http : //www.mulesoft.org/schema/mule/ee/tracking http : //www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd http : //www.mulesoft.org/schema/mule/db http : //www.mulesoft.org/schema/mule/db/current/mule-db.xsd http : //www.mulesoft.org/schema/mule/scripting http : //www.mulesoft.org/schema/mule/scripting/current/mule-scripting.xsd '' > < http : listener-config name= '' http_listener_configuration '' host= '' 0.0.0.0 '' port= '' 8081 '' doc : name= '' http listener configuration '' / > < http : request-config name= '' http_request_configuration3 '' host= '' localhost '' port= '' 8082 '' doc : name= '' http request configuration '' / > < flow name= '' nonblockingflow '' processingstrategy= '' non-blocking '' > < http : listener config-ref= '' http_listener_configuration '' path= '' / '' doc : name= '' http '' allowedmethods= '' get '' / > < set-payload value= '' response ok '' encoding= '' asdfsadf '' returnclass= '' pepe '' name= '' my-set-payload '' mimetype= '' mimetypefake/fake '' ignorebadinput= '' false '' / > < /flow > < /mule > { code }
764,setting wrong encoding causes flow execution to hang . deploy the below config and run this : curl -m 10 http : //localhost:8081/ curl : ( 28 ) operation timed out after 10004 milliseconds with 0 bytes received it logs an error as soon as i send the request but then i only receive the curl timeout without mule doing anything . when i remove encoding= '' asdfsadf '' ti returns 200 immediately .
765,deployment should fail when using invalid encoding . when deploying the below config deployment should fail because encoding does not exists . now is failing in runtime when executing the flow { code : xml } < ? xml version= '' 1.0 '' encoding= '' utf-8 '' ? > < mule xmlns : scripting= '' http : //www.mulesoft.org/schema/mule/scripting '' xmlns : db= '' http : //www.mulesoft.org/schema/mule/db '' xmlns : tracking= '' http : //www.mulesoft.org/schema/mule/ee/tracking '' xmlns : http= '' http : //www.mulesoft.org/schema/mule/http '' xmlns= '' http : //www.mulesoft.org/schema/mule/core '' xmlns : doc= '' http : //www.mulesoft.org/schema/mule/documentation '' xmlns : spring= '' http : //www.springframework.org/schema/beans '' version= '' ee-3.7.0 '' xmlns : xsi= '' http : //www.w3.org/2001/xmlschema-instance '' xsi : schemalocation= '' http : //www.springframework.org/schema/beans http : //www.springframework.org/schema/beans/spring-beans-current.xsd http : //www.mulesoft.org/schema/mule/core http : //www.mulesoft.org/schema/mule/core/current/mule.xsd http : //www.mulesoft.org/schema/mule/http http : //www.mulesoft.org/schema/mule/http/current/mule-http.xsd http : //www.mulesoft.org/schema/mule/ee/tracking http : //www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd http : //www.mulesoft.org/schema/mule/db http : //www.mulesoft.org/schema/mule/db/current/mule-db.xsd http : //www.mulesoft.org/schema/mule/scripting http : //www.mulesoft.org/schema/mule/scripting/current/mule-scripting.xsd '' > < http : listener-config name= '' http_listener_configuration '' host= '' 0.0.0.0 '' port= '' 8081 '' doc : name= '' http listener configuration '' / > < http : request-config name= '' http_request_configuration3 '' host= '' localhost '' port= '' 8082 '' doc : name= '' http request configuration '' / > < flow name= '' nonblockingflow '' processingstrategy= '' non-blocking '' > < http : listener config-ref= '' http_listener_configuration '' path= '' / '' doc : name= '' http '' allowedmethods= '' get '' / > < set-payload value= '' response ok '' encoding= '' asdfsadf '' name= '' my-set-payload '' / > < /flow > < /mule > { code }
766,keepalive is not working correctly in the http requester . keepalive is not working as expected . the http : request element always sends the header connection : keep-alive in the request   regardless of the usepersistentconnections attribute in the config . if usepersistentconnections is set to false   keepalive should be disabled   but the header is still sent . also   in the proxy scenario ( using a listener and a requester ) connections are kept alive but not reused . see example config here : https : //github.com/mulesoft/performanceworks/blob/master/apps/proxy-mcd/100b/http_module_proxy/proxy.xml this causes `` remotely closed '' errors   thrown by the service that is being proxied in a highly concurrent scenario .
767,incorrect error processing on jetty transport . jetty transport is not properly managing error conditions that occur when a mulemessage fails to be created for the current request . for example   if a request contains an invalid mimetype   it wo n't be possible to create a defaultmulemessage from it   an exception will be thrown to signal the error   but the returned response will be a 200 instead of 500 . ( note : the problem exists only when there is no mulemessage   once it has been created   then it works as expected )
768,using preemptive basic authentication in the new http module uses two request where the user/pass are invalid . using the correct user/pass in basic authentication with preemptive enabled in the new http module works fine . you send a single request with the authorization field and you receive a 200. but in the case when you use a wrong user/pass   it send fine the authorization field but when the server respond with a 401   the requester send a new requester trying to be authorize . see the attached files with the comparison of how works the http-client ( only 1 request ) and how it works the requester ( 2 requests ) +to reproduce you can use these tests : + * httprequestauthtestcase - invalidbasicauthentication ( mule-ee ) ( requeter - 2 requests ) * httplistenerauthtestcase - invalidbasicauthenticationpreemptive ( mule-ee ) ( http-client 1 request )
769,ca n't use redelivery policy . if an idempotent-redelivery-policy is defined for an inbound-endpoint   the execution of the flow will halt after the following message : org.mule.processor.idempotentredeliverypolicy : the message can not be processed because the digest could not be generated . either make the payload serializable or use an expression .
770,should be able to fetch prototype by name without lifecycle applied . in most scenarios   when a prototype is lookup up by name   lifecycle should be applied to it before returning . there 're some scenarios ( e.g . : fetching a messageprocessor that will go into a dynamicpipeline ) which are not so and we need a way to specify that this case is different . the following method was applied to the lifecycleregistry to support such case : { code : java } / * * * look up a single object by name . * < p/ > * because { @ link # lookupobject ( string ) } will * return objects which had lifecycle phases * applied   this method exists for cases in which * you want to specify that lifecycle is not to be * applied . the actual semantics of that actually depends * on the implementation   since invoking this method * might return a new instance or an already existing one . * if an existing one is returned   then the lifecycle might * have been previously applied regardless . * * @ param key the key of the object you 're looking for * @ param applylifecycle if lifecycle should be applied to the returned object . * passing { @ code true } does n't guarantee that the lifecycle is applied * @ return object or { @ code null } if not found * / < t > t lookupobject ( string key   boolean applylifecycle ) ; { code }
771,update mvel version to 2.1.9-mule-006 . need to update mvel to include the fix for mule-8336
772,regression found on proxy scenario with the new http module . . proxy scenario have a regression between 3.7.0-snapshot 1 and 2   build on may 12. build tps latency 3.7.0-rc 6847.83 27.9199 3.6.2 18380.5 8.63 diff % -62.74 % 223.52 %
773,review event copying and access control in non-blocking support . need to ensure there are no issues ..
774,add dynamic configurations for db connector . current db connector configurations are static   that is   configured values are defined when mule starts and never changed . in order to support multi-tenant scenarios   db configurations must be dynamic . that is   configured values could be expressions that are resolved for each muleevent . with this feature   a single db config can be resolved to multiple db on runtime depending on how the expressions are resolved
775,support disablepropertiesasheaders in http : request builder config . http : listener element supports disablepropertiesasheaders in the response builder configuration . we should add support for disablepropertiesasheaders in the http : request builder element . also it must support mule expressions .
776,connection and keep-alive message properties should not affect listener/requestor connection reuse behaviour . . listener can be set up to use persistent connections and client attempt to reuse connections   but if for some reason a `` connection '' header gets returns to the listener this behaviour breaks . connection reuse behaviour should be encapsulated in listener/requestor .
777,review cxf documentation . review cxf documentation
778,http connector should not send/respond http . * properties . http connector knows these properties are internal   so it makes sense that they are filtered and not sent .
779,http listener connector reject a get and delete that contains a body . . http : //forum.mulesoft.org/mulesoft/topics/http-get-delete-how-to-get-the-body-of-request-using-http-listenner-connector
780,concurrentmodificationexception when hot deploying . to reproduce : # deploy first application in mule standalone ce # deploy second application to a different server ( app1 depends on it ) # load application with some requests ( do n't know if this is needed to reproduce ) # deploy third application by moving the exploded app to apps directory
781,[ regression ] npe when filter fails . when a filter evaluation fails message is discarded but a npe is shown in app log .
782,resolve data type from simple mel expressions . now that datatype is being propagated for payload and properties   it would be good if datatype can be propagated when mel expressions are used . for example   when using set-payload with `` flowvars [ 'foo ' ] '' expression   it would be good if the property datatype is assigned to the payload 's datatype . simple expressions include : * payload/message.payload * direct access to invocation/session properties   like # [ foo ]   where foo is an invocation/session variable * access to flowvars   like flowvars [ 'foo ' ] * access to sessionvars   like sessionvars [ 'foo ' ]
783,securityfiltermessageprocessor does not support non-blocking . . securityfiltermessageprocessor should implement nonblockingsupported
784,ca n't use redelivery policy with ftp . if an idempotent-redelivery-policy is defined for an inbound-endpoint   the execution of the flow will halt after the following message : org.mule.processor.idempotentredeliverypolicy : the message can not be processed because the digest could not be generated . either make the payload serializable or use an expression .
785,update jython to 2.7.0 . update to the lastest jython release
786,database connector artifact located in registry no longer implements testable and datasense interfaces . all datasense related functionality for the database connector is no longer working due to the connector/config element stored in the registry not implementing the required interfaces
787,xmlstreamexception when using non blocking cxf : proxy-service and cxf : proxy-client . steps to reproduce : - deploy the attached apps ( the leagues-ws will work as a server and the wsdl-proxy as a proxy )   notice that the wsdl-proxy app is prepared to be non-blocking . - make a the following request : url http : //localhost:8090/api headers : soapaction : getteamsaction content-type : text/xml ; charset=utf-8 body : { code } < soapenv : envelope xmlns : soapenv= '' http : //schemas.xmlsoap.org/soap/envelope/ '' xmlns : leag= '' http : //leagues.examples.mule.org/ '' xmlns : soc= '' http : //mulesoft.com/schemas/soccer '' > < soapenv : header/ > < soapenv : body > < leag : teams > < /leag : teams > < /soapenv : body > < /soapenv : envelope > { code } this warning appears in the log of every request
788,xml header is not removed when proxying   using non blocking cxf : proxy-service and cxf : proxy-client . steps to reproduce : - deploy the attached apps ( the leagues-ws will work as a server and the wsdl-proxy as a proxy )   notice that the wsdl-proxy app is prepared to be non-blocking . - make a the following request : url http : //localhost:8090/api headers : soapaction : getteamsaction content-type : text/xml ; charset=utf-8 body : { code } < soapenv : envelope xmlns : soapenv= '' http : //schemas.xmlsoap.org/soap/envelope/ '' xmlns : leag= '' http : //leagues.examples.mule.org/ '' xmlns : soc= '' http : //mulesoft.com/schemas/soccer '' > < soapenv : header/ > < soapenv : body > < leag : teams > < /leag : teams > < /soapenv : body > < /soapenv : envelope > { code } notice that the soap envelope does not contain the xml tag : < ? xml version= '' 1.0 '' encoding= '' utf-8 '' ? > but the response has it . this issue does not happen if the proxy is prepared to be blocking ( ie . the response never contains the xml tag ) . also   the previous versions of mule did n't add the tag in the response . this issue appears on every request .
789,nullpointerexception testing connection on db connector from studio . when testing connectivity on the attached app from studio   a npe exception is being thrown . problem is that datasource 's url is wrong ( using http instead of jdbc : mysql prefix ) . this causes mysql driver to return a null connection instead of throwing an exception . then db connector wraps that connection and the npe is thrown during connection.close .
790,set mime type correct for common files with ftp/file connectors . the ftp and file connectors should set mime types for common file types correct   including csv   xml   and json .
791,non-blocking processing strategy should only allow direct-threading-profile . currently we can not force the configuration to use direct-threading-profile for all non-blocking flows   this is because thread pool belong to the listener and not to the flow . we need a bigger change that we can not make now and we can only address it in mule 4. because we do n't have a concrete use scenario for using non-blocking with a worker threading profile we want to validate that you can only use direct-threading-profile for http listeners when flow 's processing strategy is non-blocking . this validation will be on runtime .
792,http listener should ignore 'transfer-encoding ' property as it is a hop-by-hop header . transfer-encoding is a hop-by-hop header and therefore should n't really be used by http listener if there is a `` transfer-encoding '' property present in the outbound property scope to determine response streaming behaviour . generally current behaviour is fine   but there is one case that is currently incorrect imo . * we should n't stream a string payload when the `` transfer-encoding '' outbound message property is present . * we should n't stream a string payload when the `` transfer-encoding '' and `` content-length '' outbound message properties are both present . * aso   while i think it is probably correct that a string payload should be streamed when a `` transfer-encoding '' header is configured and streaming mode is 'auto ' . this is not the way the user should be enabling streaming and i suggest we log an info message whenever a transfer-encoding header is set suggesting the user uses the responsestreamingmode attribute instead . failing test that show this can be found in this branch : https : //github.com/mulesoft/mule/compare/mule-8676 * auto behaviour appears to be inconsistent with http requestor because the presence of both transfer-encoding/content-length headers results in no streaming with requestor   but streaming with listener *
793,http requestor should ignore 'transfer-encoding ' property as it is a hop-by-hop header . transfer-encoding is a hop-by-hop header and therefore should n't really be used by http requestor if there is a `` transfer-encoding '' property present in the outbound property scope to determine request streaming behaviour . generally current behaviour is fine   but there is one case that is currently incorrect imo . * we should n't stream a string payload when the `` transfer-encoding '' outbound message property is present . also : * aso   while i think it is probably correct that a string payload should be streamed when a `` transfer-encoding '' header is configured and streaming mode is 'auto ' . this is not the way the user should be enabling streaming and i suggest we log an info message whenever a transfer-encoding header is set suggesting the user uses the responsestreamingmode attribute instead . * there are currently no tests covering the case when these headers are configured using a < request-builder >   we should add these . * auto behaviour appears to be inconsistent with http listener because the presence of both transfer-encoding/content-length headers results in no streaming with requestor   but streaming with listener * failing test that show this can be found in this branch : https : //github.com/mulesoft/mule/compare/mule-8676
794,http requestor should not use host property . . if i have configured requestor to hit google.com   i should then not be able to set a host message property or host header ( on request builder ) that conflicts with google.com . currently if i hit google.com and i have < set-property propertyname= '' host '' value= '' pirulo '' / > in my flow then google with receive `` host : pirulo '' . if the host configured is an ip address then thats different   need to decide if requestor should take `` host '' value from message properties or only from response-builder ( or neither ) in that case .
795,allow tls context to be shared in a domain . it 'd be good to be able to share a tls context so that several shared listener configs can use the same one . another benefit is that all that data ( including passwords ) will only need to be visible at the domain level   so app developers could use the certs without having access to the perhaps critical data .
796,copyonwritecaseinsensitivemap should be interoperable with a regular map . copyonwritecaseinsensitivemap provides improved performance in cases in which reads vastly outnumbers reads . however   it 's not good when : * i want to create a copyonwritecaseinsensitivemap from an existing map * the initial assumption stops being true and i want to transform the copyonwritecaseinsensitivemap to a regular one this should be supported
797,passing a jaxb annotated pojo to the http listener response is throwing a transformer error . using the workday connector and sending a pojo with results to the http listener is throwing the copied transformer error . there is a simple app attached to reproduce it .
798,remove registry deprecation warnings from log . . in api gateway we need to use a registry feature that generates several log entries like : { code } warn 2015-06-05 16:41:53 968 [ thread-2 ] org.mule.registry.defaultregistrybroker : 3 registries have been registered   however adding registries has been deprecated as of mule 3.7.0 { code } how to reproduce : - configure gw to use any valid organization - deploy an api with autodiscovery - run gw expected : - the information is not logged at all in no log file . actual : - the information is logged in mule_ee with warn level .
799,xa transaction must set tx timeout in xa resources . xa transaction must set tx timeout in xa resources
800,process_complete pipeline notification not sent when strategy is nb and the last component in the flow is not nb . having a flow using non-blocking processing strategy where the last component is not non-blocking prevents process_complete pipeline notification to be fired . steps : 1 ) call the listener in the attached app 2 ) check pipeline notifications expected : - process_start   process_end and process_complete are fired actual : - only process_start and process_end are fired
801,nonblockingnotsupportedfunctionaltestcase.aggregator caused inboundaggregationnotimeouttestcase to fail . . messages created in nonblockingnotsupportedfunctionaltestcase.aggregator are not related by their rootid which caused inboundaggregationnotimeouttestcase to fail .
802,incorrect xsd generated for extension built using extension api . reviewing the code or extensions api implementation   found that the xsd sceham generated for the test heinsenberg extension 's killone operation is wrong . { code } < xs : element xmlns= '' http : //www.mulesoft.org/schema/mule/heisenberg '' type= '' killonetype '' substitutiongroup= '' heisenberg-empire '' name= '' kill-one '' > < /xs : element > < xs : complextype name= '' killonetype '' > < xs : complexcontent > < xs : extension xmlns : mule= '' http : //www.mulesoft.org/schema/mule/core '' base= '' mule : abstractmessageprocessortype '' > < xs : sequence > < xs : element minoccurs= '' 1 '' name= '' kill-operation '' > < xs : complextype > < xs : group xmlns= '' http : //www.mulesoft.org/schema/mule/heisenberg '' minoccurs= '' 1 '' maxoccurs= '' 1 '' ref= '' heisenberg-empire-group '' > < /xs : group > < /xs : complextype > < /xs : element > < /xs : sequence > < xs : attribute type= '' mule : substitutablename '' use= '' optional '' name= '' config-ref '' > < xs : annotation > < xs : documentation > specify which configuration to use for this invocation. < /xs : documentation > < /xs : annotation > < /xs : attribute > < xs : attribute type= '' mule : expressionstring '' use= '' required '' name= '' reason '' > < /xs : attribute > < /xs : extension > < /xs : complexcontent > < /xs : complextype > { code } from that snipet   a xml like the following would be valid if checked against a schame validation tool : { code } < heisenberg : kill-one reason= '' i 'm the one who knocks '' > < heisenberg : kill-operation > < heisenberg : kill-with-custom-message victim= '' gustavo fring '' goodbyemessage= '' bye bye '' / > < /heisenberg : kill-operation > < heisenberg : kill-operation > < heisenberg : kill-with-custom-message victim= '' gustavo fring '' goodbyemessage= '' bye bye '' / > < /heisenberg : kill-operation > < /heisenberg : kill-one > { code }
803,validations does n't support concurrency . . hitting a validations app with more than one thread causes an exception saying that no config-ref was set and there are n configurations .
804,merge mule 3.x on 4.x branch . merge latest changes on mule 3 into mule 4 branch
805,mime type for .csv files is not being auto detected and set . steps to reproduce : 1.- create the followed mule config * mule config * : { code : xml } < ? xml version= '' 1.0 '' encoding= '' utf-8 '' ? > < mule xmlns : metadata= '' http : //www.mulesoft.org/schema/mule/metadata '' xmlns : dw= '' http : //www.mulesoft.org/schema/mule/ee/dw '' xmlns : file= '' http : //www.mulesoft.org/schema/mule/file '' xmlns : tracking= '' http : //www.mulesoft.org/schema/mule/ee/tracking '' xmlns= '' http : //www.mulesoft.org/schema/mule/core '' xmlns : doc= '' http : //www.mulesoft.org/schema/mule/documentation '' xmlns : spring= '' http : //www.springframework.org/schema/beans '' version= '' ee-3.7.0 '' xmlns : xsi= '' http : //www.w3.org/2001/xmlschema-instance '' xsi : schemalocation= '' http : //www.springframework.org/schema/beans http : //www.springframework.org/schema/beans/spring-beans-current.xsd http : //www.mulesoft.org/schema/mule/core http : //www.mulesoft.org/schema/mule/core/current/mule.xsd http : //www.mulesoft.org/schema/mule/file http : //www.mulesoft.org/schema/mule/file/current/mule-file.xsd http : //www.mulesoft.org/schema/mule/ee/dw http : //www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd http : //www.mulesoft.org/schema/mule/ee/tracking http : //www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd '' > < flow name= '' csv-common '' > < file : inbound-endpoint path= '' src/main/resources/csv/ '' movetodirectory= '' src/main/resources/files/to/test '' responsetimeout= '' 10000 '' mimetype= '' application/csv '' metadata : id= '' 09ca0cda-dd6e-4590-838d-fc1482fcb982 '' doc : name= '' file '' / > < dw : transform-message doc : name= '' transform message '' > < dw : set-payload > < ! [ cdata [ % dw 1.0 % output application/json -- - payload map { account : $ . 'account name '   contac : { email : $ . 'email address '   phone : $ .phone } } ] ] > < /dw : set-payload > < /dw : transform-message > < object-to-string-transformer doc : name= '' object to string '' / > < logger message= '' # [ payload ] '' level= '' info '' doc : name= '' logger '' / > < /flow > < /mule > { code } 2.- create a csv folder in the src/main/resources with the followed file : * registers.csv * { code } first name   last name   phone   email address   street address   city   zip code   state   country   birthday   birth year   marital status   account name   department   other state   other country   other street   other email   other phone   other zip   assistantname   other city   title   assistantphone solomon   lane 1-657-224-8346   ornare.sagittis.felis @ morbi.org 1692 quis rd.   bay st. louis   t9z 7k4   mn   switzerland   june 28th 1998   common-law   lycos   asset management   st louis   ny 1692 quis rd   ornare.sagittis.felis @ morbi.org 1-657-224-8346   t9z 7k4   solomon lane   switzerland   mr 1-657-224-8346 solomon   lane 1-657-224-8346   ornare.sagittis.felis @ morbi.org 1692 quis rd.   bay st. louis   t9z 7k4   mn   switzerland   june 28th 1998   common-law   lycos   asset management   st louis   ny 1692 quis rd   ornare.sagittis.felis @ morbi.org 1-657-224-8346   t9z 7k4   solomon lane   switzerland   mr 1-657-224-8346 solomon   lane 1-657-224-8346   ornare.sagittis.felis @ morbi.org 1692 quis rd.   bay st. louis   t9z 7k4   mn   switzerland   june 28th 1998   common-law   lycos   asset management   st louis   ny 1692 quis rd   ornare.sagittis.felis @ morbi.org 1-657-224-8346   t9z 7k4   solomon lane   switzerland   mr 1-657-224-8346 solomon   lane 1-657-224-8346   ornare.sagittis.felis @ morbi.org 1692 quis rd.   bay st. louis   t9z 7k4   mn   switzerland   june 28th 1998   common-law   lycos   asset management   st louis   ny 1692 quis rd   ornare.sagittis.felis @ morbi.org 1-657-224-8346   t9z 7k4   solomon lane   switzerland   mr 1-657-224-8346 solomon   lane 1-657-224-8346   ornare.sagittis.felis @ morbi.org 1692 quis rd.   bay st. louis   t9z 7k4   mn   switzerland   june 28th 1998   common-law   lycos   asset management   st louis   ny 1692 quis rd   ornare.sagittis.felis @ morbi.org 1-657-224-8346   t9z 7k4   solomon lane   switzerland   mr 1-657-224-8346 solomon   lane 1-657-224-8346   ornare.sagittis.felis @ morbi.org 1692 quis rd.   bay st. louis   t9z 7k4   mn   switzerland   june 28th 1998   common-law   lycos   asset management   st louis   ny 1692 quis rd   ornare.sagittis.felis @ morbi.org 1-657-224-8346   t9z 7k4   solomon lane   switzerland   mr 1-657-224-8346 solomon   lane 1-657-224-8346   ornare.sagittis.felis @ morbi.org 1692 quis rd.   bay st. louis   t9z 7k4   mn   switzerland   june 28th 1998   common-law   lycos   asset management   st louis   ny 1692 quis rd   ornare.sagittis.felis @ morbi.org 1-657-224-8346   t9z 7k4   solomon lane   switzerland   mr 1-657-224-8346 solomon   lane 1-657-224-8346   ornare.sagittis.felis @ morbi.org 1692 quis rd.   bay st. louis   t9z 7k4   mn   switzerland   june 28th 1998   common-law   lycos   asset management   st louis   ny 1692 quis rd   ornare.sagittis.felis @ morbi.org 1-657-224-8346   t9z 7k4   solomon lane   switzerland   mr 1-657-224-8346 solomon   lane 1-657-224-8346   ornare.sagittis.felis @ morbi.org 1692 quis rd.   bay st. louis   t9z 7k4   mn   switzerland   june 28th 1998   common-law   lycos   asset management   st louis   ny 1692 quis rd   ornare.sagittis.felis @ morbi.org 1-657-224-8346   t9z 7k4   solomon lane   switzerland   mr 1-657-224-8346 solomon   lane 1-657-224-8346   ornare.sagittis.felis @ morbi.org 1692 quis rd.   bay st. louis   t9z 7k4   mn   switzerland   june 28th 1998   common-law   lycos   asset management   st louis   ny 1692 quis rd   ornare.sagittis.felis @ morbi.org 1-657-224-8346   t9z 7k4   solomon lane   switzerland   mr 1-657-224-8346 solomon   lane 1-657-224-8346   ornare.sagittis.felis @ morbi.org 1692 quis rd.   bay st. louis   t9z 7k4   mn   switzerland   june 28th 1998   common-law   lycos   asset management   st louis   ny 1692 quis rd   ornare.sagittis.felis @ morbi.org 1-657-224-8346   t9z 7k4   solomon lane   switzerland   mr 1-657-224-8346 solomon   lane 1-657-224-8346   ornare.sagittis.felis @ morbi.org 1692 quis rd.   bay st. louis   t9z 7k4   mn   switzerland   june 28th 1998   common-law   lycos   asset management   st louis   ny 1692 quis rd   ornare.sagittis.felis @ morbi.org 1-657-224-8346   t9z 7k4   solomon lane   switzerland   mr 1-657-224-8346 solomon   lane 1-657-224-8346   ornare.sagittis.felis @ morbi.org 1692 quis rd.   bay st. louis   t9z 7k4   mn   switzerland   june 28th 1998   common-law   lycos   asset management   st louis   ny 1692 quis rd   ornare.sagittis.felis @ morbi.org 1-657-224-8346   t9z 7k4   solomon lane   switzerland   mr 1-657-224-8346 solomon   lane 1-657-224-8346   ornare.sagittis.felis @ morbi.org 1692 quis rd.   bay st. louis   t9z 7k4   mn   switzerland   june 28th 1998   common-law   lycos   asset management   st louis   ny 1692 quis rd   ornare.sagittis.felis @ morbi.org 1-657-224-8346   t9z 7k4   solomon lane   switzerland   mr 1-657-224-8346 solomon   lane 1-657-224-8346   ornare.sagittis.felis @ morbi.org 1692 quis rd.   bay st. louis   t9z 7k4   mn   switzerland   june 28th 1998   common-law   lycos   asset management   st louis   ny 1692 quis rd   ornare.sagittis.felis @ morbi.org 1-657-224-8346   t9z 7k4   solomon lane   switzerland   mr 1-657-224-8346 solomon   lane 1-657-224-8346   ornare.sagittis.felis @ morbi.org 1692 quis rd.   bay st. louis   t9z 7k4   mn   switzerland   june 28th 1998   common-law   lycos   asset management   st louis   ny 1692 quis rd   ornare.sagittis.felis @ morbi.org 1-657-224-8346   t9z 7k4   solomon lane   switzerland   mr 1-657-224-8346 solomon   lane 1-657-224-8346   ornare.sagittis.felis @ morbi.org 1692 quis rd.   bay st. louis   t9z 7k4   mn   switzerland   june 28th 1998   common-law   lycos   asset management   st louis   ny 1692 quis rd   ornare.sagittis.felis @ morbi.org 1-657-224-8346   t9z 7k4   solomon lane   switzerland   mr 1-657-224-8346 solomon   lane 1-657-224-8346   ornare.sagittis.felis @ morbi.org 1692 quis rd.   bay st. louis   t9z 7k4   mn   switzerland   june 28th 1998   common-law   lycos   asset management   st louis   ny 1692 quis rd   ornare.sagittis.felis @ morbi.org 1-657-224-8346   t9z 7k4   solomon lane   switzerland   mr 1-657-224-8346 solomon   lane 1-657-224-8346   ornare.sagittis.felis @ morbi.org 1692 quis rd.   bay st. louis   t9z 7k4   mn   switzerland   june 28th 1998   common-law   lycos   asset management   st louis   ny 1692 quis rd   ornare.sagittis.felis @ morbi.org 1-657-224-8346   t9z 7k4   solomon lane   switzerland   mr 1-657-224-8346 solomon   lane 1-657-224-8346   ornare.sagittis.felis @ morbi.org 1692 quis rd.   bay st. louis   t9z 7k4   mn   switzerland   june 28th 1998   common-law   lycos   asset management   st louis   ny 1692 quis rd   ornare.sagittis.felis @ morbi.org 1-657-224-8346   t9z 7k4   solomon lane   switzerland   mr 1-657-224-8346 solomon   lane 1-657-224-8346   ornare.sagittis.felis @ morbi.org 1692 quis rd.   bay st. louis   t9z 7k4   mn   switzerland   june 28th 1998   common-law   lycos   asset management   st louis   ny 1692 quis rd   ornare.sagittis.felis @ morbi.org 1-657-224-8346   t9z 7k4   solomon lane   switzerland   mr 1-657-224-8346 solomon   lane 1-657-224-8346   ornare.sagittis.felis @ morbi.org 1692 quis rd.   bay st. louis   t9z 7k4   mn   switzerland   june 28th 1998   common-law   lycos   asset management   st louis   ny 1692 quis rd   ornare.sagittis.felis @ morbi.org 1-657-224-8346   t9z 7k4   solomon lane   switzerland   mr 1-657-224-8346 solomon   lane 1-657-224-8346   ornare.sagittis.felis @ morbi.org 1692 quis rd.   bay st. louis   t9z 7k4   mn   switzerland   june 28th 1998   common-law   lycos   asset management   st louis   ny 1692 quis rd   ornare.sagittis.felis @ morbi.org 1-657-224-8346   t9z 7k4   solomon lane   switzerland   mr 1-657-224-8346 solomon   lane 1-657-224-8346   ornare.sagittis.felis @ morbi.org 1692 quis rd.   bay st. louis   t9z 7k4   mn   switzerland   june 28th 1998   common-law   lycos   asset management   st louis   ny 1692 quis rd   ornare.sagittis.felis @ morbi.org 1-657-224-8346   t9z 7k4   solomon lane   switzerland   mr 1-657-224-8346 solomon   lane 1-657-224-8346   ornare.sagittis.felis @ morbi.org 1692 quis rd.   bay st. louis   t9z 7k4   mn   switzerland   june 28th 1998   common-law   lycos   asset management   st louis   ny 1692 quis rd   ornare.sagittis.felis @ morbi.org 1-657-224-8346   t9z 7k4   solomon lane   switzerland   mr 1-657-224-8346 solomon   lane 1-657-224-8346   ornare.sagittis.felis @ morbi.org 1692 quis rd.   bay st. louis   t9z 7k4   mn   switzerland   june 28th 1998   common-law   lycos   asset management   st louis   ny 1692 quis rd   ornare.sagittis.felis @ morbi.org 1-657-224-8346   t9z 7k4   solomon lane   switzerland   mr 1-657-224-8346 solomon   lane 1-657-224-8346   ornare.sagittis.felis @ morbi.org 1692 quis rd.   bay st. louis   t9z 7k4   mn   switzerland   june 28th 1998   common-law   lycos   asset management   st louis   ny 1692 quis rd   ornare.sagittis.felis @ morbi.org 1-657-224-8346   t9z 7k4   solomon lane   switzerland   mr 1-657-224-8346 solomon   lane 1-657-224-8346   ornare.sagittis.felis @ morbi.org 1692 quis rd.   bay st. louis   t9z 7k4   mn   switzerland   june 28th 1998   common-law   lycos   asset management   st louis   ny 1692 quis rd   ornare.sagittis.felis @ morbi.org 1-657-224-8346   t9z 7k4   solomon lane   switzerland   mr 1-657-224-8346 solomon   lane 1-657-224-8346   ornare.sagittis.felis @ morbi.org 1692 quis rd.   bay st. louis   t9z 7k4   mn   switzerland   june 28th 1998   common-law   lycos   asset management   st louis   ny 1692 quis rd   ornare.sagittis.felis @ morbi.org 1-657-224-8346   t9z 7k4   solomon lane   switzerland   mr 1-657-224-8346 solomon   lane 1-657-224-8346   ornare.sagittis.felis @ morbi.org 1692 quis rd.   bay st. louis   t9z 7k4   mn   switzerland   june 28th 1998   common-law   lycos   asset management   st louis   ny 1692 quis rd   ornare.sagittis.felis @ morbi.org 1-657-224-8346   t9z 7k4   solomon lane   switzerland   mr 1-657-224-8346 solomon   lane 1-657-224-8346   ornare.sagittis.felis @ morbi.org 1692 quis rd.   bay st. louis   t9z 7k4   mn   switzerland   june 28th 1998   common-law   lycos   asset management   st louis   ny 1692 quis rd   ornare.sagittis.felis @ morbi.org 1-657-224-8346   t9z 7k4   solomon lane   switzerland   mr 1-657-224-8346 solomon   lane 1-657-224-8346   ornare.sagittis.felis @ morbi.org 1692 quis rd.   bay st. louis   t9z 7k4   mn   switzerland   june 28th 1998   common-law   lycos   asset management   st louis   ny 1692 quis rd   ornare.sagittis.felis @ morbi.org 1-657-224-8346   t9z 7k4   solomon lane   switzerland   mr 1-657-224-8346 solomon   lane 1-657-224-8346   ornare.sagittis.felis @ morbi.org 1692 quis rd.   bay st. louis   t9z 7k4   mn   switzerland   june 28th 1998   common-law   lycos   asset management   st louis   ny 1692 quis rd   ornare.sagittis.felis @ morbi.org 1-657-224-8346   t9z 7k4   solomon lane   switzerland   mr 1-657-224-8346 solomon   lane 1-657-224-8346   ornare.sagittis.felis @ morbi.org 1692 quis rd.   bay st. louis   t9z 7k4   mn   switzerland   june 28th 1998   common-law   lycos   asset management   st louis   ny 1692 quis rd   ornare.sagittis.felis @ morbi.org 1-657-224-8346   t9z 7k4   solomon lane   switzerland   mr 1-657-224-8346 solomon   lane 1-657-224-8346   ornare.sagittis.felis @ morbi.org 1692 quis rd.   bay st. louis   t9z 7k4   mn   switzerland   june 28th 1998   common-law   lycos   asset management   st louis   ny 1692 quis rd   ornare.sagittis.felis @ morbi.org 1-657-224-8346   t9z 7k4   solomon lane   switzerland   mr 1-657-224-8346 solomon   lane 1-657-224-8346   ornare.sagittis.felis @ morbi.org 1692 quis rd.   bay st. louis   t9z 7k4   mn   switzerland   june 28th 1998   common-law   lycos   asset management   st louis   ny 1692 quis rd   ornare.sagittis.felis @ morbi.org 1-657-224-8346   t9z 7k4   solomon lane   switzerland   mr 1-657-224-8346 solomon   lane 1-657-224-8346   ornare.sagittis.felis @ morbi.org 1692 quis rd.   bay st. louis   t9z 7k4   mn   switzerland   june 28th 1998   common-law   lycos   asset management   st louis   ny 1692 quis rd   ornare.sagittis.felis @ morbi.org 1-657-224-8346   t9z 7k4   solomon lane   switzerland   mr 1-657-224-8346 solomon   lane 1-657-224-8346   ornare.sagittis.felis @ morbi.org 1692 quis rd.   bay st. louis   t9z 7k4   mn   switzerland   june 28th 1998   common-law   lycos   asset management   st louis   ny 1692 quis rd   ornare.sagittis.felis @ morbi.org 1-657-224-8346   t9z 7k4   solomon lane   switzerland   mr 1-657-224-8346 solomon   lane 1-657-224-8346   ornare.sagittis.felis @ morbi.org 1692 quis rd.   bay st. louis   t9z 7k4   mn   switzerland   june 28th 1998   common-law   lycos   asset management   st louis   ny 1692 quis rd   ornare.sagittis.felis @ morbi.org 1-657-224-8346   t9z 7k4   solomon lane   switzerland   mr 1-657-224-8346 solomon   lane 1-657-224-8346   ornare.sagittis.felis @ morbi.org 1692 quis rd.   bay st. louis   t9z 7k4   mn   switzerland   june 28th 1998   common-law   lycos   asset management   st louis   ny 1692 quis rd   ornare.sagittis.felis @ morbi.org 1-657-224-8346   t9z 7k4   solomon lane   switzerland   mr 1-657-224-8346 solomon   lane 1-657-224-8346   ornare.sagittis.felis @ morbi.org 1692 quis rd.   bay st. louis   t9z 7k4   mn   switzerland   june 28th 1998   common-law   lycos   asset management   st louis   ny 1692 quis rd   ornare.sagittis.felis @ morbi.org 1-657-224-8346   t9z 7k4   solomon lane   switzerland   mr 1-657-224-8346 solomon   lane 1-657-224-8346   ornare.sagittis.felis @ morbi.org 1692 quis rd.   bay st. louis   t9z 7k4   mn   switzerland   june 28th 1998   common-law   lycos   asset management   st louis   ny 1692 quis rd   ornare.sagittis.felis @ morbi.org 1-657-224-8346   t9z 7k4   solomon lane   switzerland   mr 1-657-224-8346 solomon   lane 1-657-224-8346   ornare.sagittis.felis @ morbi.org 1692 quis rd.   bay st. louis   t9z 7k4   mn   switzerland   june 28th 1998   common-law   lycos   asset management   st louis   ny 1692 quis rd   ornare.sagittis.felis @ morbi.org 1-657-224-8346   t9z 7k4   solomon lane   switzerland   mr 1-657-224-8346 solomon   lane 1-657-224-8346   ornare.sagittis.felis @ morbi.org 1692 quis rd.   bay st. louis   t9z 7k4   mn   switzerland   june 28th 1998   common-law   lycos   asset management   st louis   ny 1692 quis rd   ornare.sagittis.felis @ morbi.org 1-657-224-8346   t9z 7k4   solomon lane   switzerland   mr 1-657-224-8346 solomon   lane 1-657-224-8346   ornare.sagittis.felis @ morbi.org 1692 quis rd.   bay st. louis   t9z 7k4   mn   switzerland   june 28th 1998   common-law   lycos   asset management   st louis   ny 1692 quis rd   ornare.sagittis.felis @ morbi.org 1-657-224-8346   t9z 7k4   solomon lane   switzerland   mr 1-657-224-8346 solomon   lane 1-657-224-8346   ornare.sagittis.felis @ morbi.org 1692 quis rd.   bay st. louis   t9z 7k4   mn   switzerland   june 28th 1998   common-law   lycos   asset management   st louis   ny 1692 quis rd   ornare.sagittis.felis @ morbi.org 1-657-224-8346   t9z 7k4   solomon lane   switzerland   mr 1-657-224-8346 solomon   lane 1-657-224-8346   ornare.sagittis.felis @ morbi.org 1692 quis rd.   bay st. louis   t9z 7k4   mn   switzerland   june 28th 1998   common-law   lycos   asset management   st louis   ny 1692 quis rd   ornare.sagittis.felis @ morbi.org 1-657-224-8346   t9z 7k4   solomon lane   switzerland   mr 1-657-224-8346 solomon   lane 1-657-224-8346   ornare.sagittis.felis @ morbi.org 1692 quis rd.   bay st. louis   t9z 7k4   mn   switzerland   june 28th 1998   common-law   lycos   asset management   st louis   ny 1692 quis rd   ornare.sagittis.felis @ morbi.org 1-657-224-8346   t9z 7k4   solomon lane   switzerland   mr 1-657-224-8346 solomon   lane 1-657-224-8346   ornare.sagittis.felis @ morbi.org 1692 quis rd.   bay st. louis   t9z 7k4   mn   switzerland   june 28th 1998   common-law   lycos   asset management   st louis   ny 1692 quis rd   ornare.sagittis.felis @ morbi.org 1-657-224-8346   t9z 7k4   solomon lane   switzerland   mr 1-657-224-8346 solomon   lane 1-657-224-8346   ornare.sagittis.felis @ morbi.org 1692 quis rd.   bay st. louis   t9z 7k4   mn   switzerland   june 28th 1998   common-law   lycos   asset management   st louis   ny 1692 quis rd   ornare.sagittis.felis @ morbi.org 1-657-224-8346   t9z 7k4   solomon lane   switzerland   mr 1-657-224-8346 solomon   lane 1-657-224-8346   ornare.sagittis.felis @ morbi.org 1692 quis rd.   bay st. louis   t9z 7k4   mn   switzerland   june 28th 1998   common-law   lycos   asset management   st louis   ny 1692 quis rd   ornare.sagittis.felis @ morbi.org 1-657-224-8346   t9z 7k4   solomon lane   switzerland   mr 1-657-224-8346 solomon   lane 1-657-224-8346   ornare.sagittis.felis @ morbi.org 1692 quis rd.   bay st. louis   t9z 7k4   mn   switzerland   june 28th 1998   common-law   lycos   asset management   st louis   ny 1692 quis rd   ornare.sagittis.felis @ morbi.org 1-657-224-8346   t9z 7k4   solomon lane   switzerland   mr 1-657-224-8346 solomon   lane 1-657-224-8346   ornare.sagittis.felis @ morbi.org 1692 quis rd.   bay st. louis   t9z 7k4   mn   switzerland   june 28th 1998   common-law   lycos   asset management   st louis   ny 1692 quis rd   ornare.sagittis.felis @ morbi.org 1-657-224-8346   t9z 7k4   solomon lane   switzerland   mr 1-657-224-8346 solomon   lane 1-657-224-8346   ornare.sagittis.felis @ morbi.org 1692 quis rd.   bay st. louis   t9z 7k4   mn   switzerland   june 28th 1998   common-law   lycos   asset management   st louis   ny 1692 quis rd   ornare.sagittis.felis @ morbi.org 1-657-224-8346   t9z 7k4   solomon lane   switzerland   mr 1-657-224-8346 solomon   lane 1-657-224-8346   ornare.sagittis.felis @ morbi.org 1692 quis rd.   bay st. louis   t9z 7k4   mn   switzerland   june 28th 1998   common-law   lycos   asset management   st louis   ny 1692 quis rd   ornare.sagittis.felis @ morbi.org 1-657-224-8346   t9z 7k4   solomon lane   switzerland   mr 1-657-224-8346 solomon   lane 1-657-224-8346   ornare.sagittis.felis @ morbi.org 1692 quis rd.   bay st. louis   t9z 7k4   mn   switzerland   june 28th 1998   common-law   lycos   asset management   st louis   ny 1692 quis rd   ornare.sagittis.felis @ morbi.org 1-657-224-8346   t9z 7k4   solomon lane   switzerland   mr 1-657-224-8346 solomon   lane 1-657-224-8346   ornare.sagittis.felis @ morbi.org 1692 quis rd.   bay st. louis   t9z 7k4   mn   switzerland   june 28th 1998   common-law   lycos   asset management   st louis   ny 1692 quis rd   ornare.sagittis.felis @ morbi.org 1-657-224-8346   t9z 7k4   solomon lane   switzerland   mr 1-657-224-8346 solomon   lane 1-657-224-8346   ornare.sagittis.felis @ morbi.org 1692 quis rd.   bay st. louis   t9z 7k4   mn   switzerland   june 28th 1998   common-law   lycos   asset management   st louis   ny 1692 quis rd   ornare.sagittis.felis @ morbi.org 1-657-224-8346   t9z 7k4   solomon lane   switzerland   mr 1-657-224-8346 solomon   lane 1-657-224-8346   ornare.sagittis.felis @ morbi.org 1692 quis rd.   bay st. louis   t9z 7k4   mn   switzerland   june 28th 1998   common-law   lycos   asset management   st louis   ny 1692 quis rd   ornare.sagittis.felis @ morbi.org 1-657-224-8346   t9z 7k4   solomon lane   switzerland   mr 1-657-224-8346 solomon   lane 1-657-224-8346   ornare.sagittis.felis @ morbi.org 1692 quis rd.   bay st. louis   t9z 7k4   mn   switzerland   june 28th 1998   common-law   lycos   asset management   st louis   ny 1692 quis rd   ornare.sagittis.felis @ morbi.org 1-657-224-8346   t9z 7k4   solomon lane   switzerland   mr 1-657-224-8346 solomon   lane 1-657-224-8346   ornare.sagittis.felis @ morbi.org 1692 quis rd.   bay st. louis   t9z 7k4   mn   switzerland   june 28th 1998   common-law   lycos   asset management   st louis   ny 1692 quis rd   ornare.sagittis.felis @ morbi.org 1-657-224-8346   t9z 7k4   solomon lane   switzerland   mr 1-657-224-8346 solomon   lane 1-657-224-8346   ornare.sagittis.felis @ morbi.org 1692 quis rd.   bay st. louis   t9z 7k4   mn   switzerland   june 28th 1998   common-law   lycos   asset management   st louis   ny 1692 quis rd   ornare.sagittis.felis @ morbi.org 1-657-224-8346   t9z 7k4   solomon lane   switzerland   mr 1-657-224-8346 solomon   lane 1-657-224-8346   ornare.sagittis.felis @ morbi.org 1692 quis rd.   bay st. louis   t9z 7k4   ...
806,operation state handling in extensions api . we need to clearly define how to manage state within operations define with extensions api . not only define how to implement each use case but also doing it in a way that fits the user mindset . we need : - global state between operators - global state per config - global state per tenant config - state for a particular operation ( one per xml element ) disregarding the config i 'm just trying to list all the cases   then we would have to try to come up with use cases for each use case .
807,implememnt multitenant configuration eviction policy . when using configs multitenant with extenision api there should be a way to evict ( dispose ) config that are not longer used . this is critical to avoid oom and wasting resources for use cases where there may be hundreds or thousands config created over time .
808,mulemessage is going to registry for every transformation when extended transformations are used . . now there is no longer a transient registry it is critical that we do n't lookup objects in the registry in runtime per-message . not doing so will cause an performance impact and also thread contention at higher concurrencies . org.mule.defaultmulemessage # applyalltransformers org.mule.defaultmulecontext # getdatatypeconverterresolver
809,enricher does not propagates datatype . message enricher is not propagating datatype when well-known expressions are used ( like expressions returning message 's payload/properties )
810,no data type resolution accessing flow/session properties using dot notation . data type resolution works for session/flow variables on mel expressions using map syntax ( like flowvars [ 'foo ' ] ) but does not work when using dot syntax ( like flowvars.foo ) .
811,extract logic for creating implicit configs to a separate class . the logic for creating implicit configurations is now part of the defaultextensionsmanager . would be good to have that extracted to a separate class
812,can not build mule esb maven tools with java 8 . when trying to build mule-esb-maven-tools from source code using jdk 8   it fails with the attached error message .
813,mule registry failing to lookup sub-flows . when trying to do the following `` ` context.getregistry ( ) .lookupobjects ( subflowmessageprocessorchainfactorybean.class ) ; `` ` over a context that has been created with the following xml : `` ` < mule xmlns= '' http : //www.mulesoft.org/schema/mule/core '' xmlns : xsi= '' http : //www.w3.org/2001/xmlschema-instance '' xsi : schemalocation= '' http : //www.mulesoft.org/schema/mule/core http : //www.mulesoft.org/schema/mule/core/current/mule.xsd '' > < sub-flow name= '' firstflow '' > < set-payload value= '' # [ 'real_payload ' ] '' / > < /sub-flow > < /mule > `` ` the method returns an empty collection . when you do something like `` ` context.getregistry.get ( `` firstflow '' ) `` ` the bean is returned . it seems as if the problem is with the type lookup
814,add extensions parent pom to script for deploying to maven central repo . currently buildtools/scripts/deployartifacts.groovy does n't deploy org.mule.extensions : mule-extensions   we need it because is the parent for all modules created by extensions-api
815,give the extension model the concept of vendor . currently extension instances are matched by its getname ( ) method . they should also include the concept of vendor and be used for matching purposes as well .
816,loggers memory leak after fixing mule-8635 . changes from mule-8635 introduced a memory leak where muleapplicationclassloaders are not being disposed . mule-8635 added logic to clean up loggers   but seems that the logic is executed but the memory is not released . to reproduce the issue : _ start a vainilla mule instance _ once default app is deployed force a redeploy touching the app 's config file expected behaviour   according to the code   is that after 15 seconds the memory is released   but that does not happen .
817,create the new object store . create the new object store .
818,hostname verification not working correctly with https proxy . when configuring the http requester with https and a proxy   hostname verification is done against the proxy instead of the real host . this makes the request fail   as the certificate does n't contain the url of the proxy . the verification should be made against the host of the request . this is a bug in ahc   it is fixed in ahc 1.9.27   so a possible solution to this is updating at least to this version .
819,revisit defaultextensionmanager implicit config test cases considering mule-8741 . now that implicit configs are instantiated by defaultimplicitconfigurationfactory related tests should be refactored and that class should have its own tests .
820,wsc with basic auth wraps `` error '' s http status code by throwing exceptions with timeouts . when using wsc in conjunction with http basic authentication ( through httprequesterconfig ) when bad credentials are used in the basic auth   the output i see is a timeout [ 1 ] rather than an exception caused by a 401 or 403 status code error . to reproduce so   i 'm attaching a small soap server ( demo-soap-server.zip ) and a mule app to try it out [ 2 ] . the endpoint i 'm hitting is http : //localhost:9000/acme-crm/orders ? wsdl where the valid credentials are user : admin pass : admin . in the mule app there are two flows to be executed * ( a ) http : //localhost:8081/goodcredentials where once it 's hit you will see something like the following in a browser { code : xml } < ns2 : createresponse > < return > 0 < /return > < /ns2 : createresponse > { code } * and ( b ) http : //localhost:8081/badcredentials where once it 's hit you will wait for the default timeout of the wsc to be consumed   seeing at the end the stack trace in the mule app [ 1 ] . the issue here is that   despite the app will fail because of bad credentials   the developer should be warn that the error was an unauthorized rather than timed-outed . [ 1 ] mule app stack after hitting http : //localhost:8081/badcredentials { code : java|title=log of the mule application } warn 2015-07-16 17:54:43 634 [ [ wsc_wrong_cred ] .http_listener_configuration.worker.01 ] org.apache.cxf.endpoint.clientimpl : timed out waiting for response to operation { http : //support.cxf.module.mule.org/ } invoke . error 2015-07-16 17:54:43 647 [ [ wsc_wrong_cred ] .http_listener_configuration.worker.01 ] org.mule.exception.defaultmessagingexceptionstrategy : * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * message : timed out waiting for response to operation { http : //support.cxf.module.mule.org/ } invoke .. failed to route event via endpoint : org.mule.module.cxf.cxfoutboundmessageprocessor . message payload is of type : pushbackinputstream type : org.mule.api.transport.dispatchexception code : mule_error -- 2 javadoc : http : //www.mulesoft.org/docs/site/current3/apidocs/org/mule/api/transport/dispatchexception.html payload : java.io.pushbackinputstream @ 2ef70222 * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * exception stack is : 1. timed out waiting for response to operation { http : //support.cxf.module.mule.org/ } invoke . ( java.io.ioexception ) org.apache.cxf.endpoint.clientimpl:740 ( null ) 2. timed out waiting for response to operation { http : //support.cxf.module.mule.org/ } invoke .. failed to route event via endpoint : org.mule.module.cxf.cxfoutboundmessageprocessor . message payload is of type : pushbackinputstream ( org.mule.api.transport.dispatchexception ) org.mule.module.cxf.cxfoutboundmessageprocessor:163 ( http : //www.mulesoft.org/docs/site/current3/apidocs/org/mule/api/transport/dispatchexception.html ) * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * root exception stack trace : java.io.ioexception : timed out waiting for response to operation { http : //support.cxf.module.mule.org/ } invoke . org.apache.cxf.endpoint.clientimpl.waitresponse ( clientimpl.java:740 ) org.apache.cxf.endpoint.clientimpl.processresult ( clientimpl.java:661 ) org.apache.cxf.endpoint.clientimpl.doinvoke ( clientimpl.java:581 ) org.apache.cxf.endpoint.clientimpl.invoke ( clientimpl.java:481 ) org.mule.module.cxf.cxfoutboundmessageprocessor.dosendwithclient ( cxfoutboundmessageprocessor.java:281 ) org.mule.module.cxf.cxfoutboundmessageprocessor.process ( cxfoutboundmessageprocessor.java:128 ) org.mule.execution.exceptiontomessagingexceptionexecutioninterceptor.execute ( exceptiontomessagingexceptionexecutioninterceptor.java:24 ) org.mule.execution.messageprocessornotificationexecutioninterceptor.execute ( messageprocessornotificationexecutioninterceptor.java:107 ) org.mule.execution.messageprocessorexecutiontemplate.execute ( messageprocessorexecutiontemplate.java:44 ) org.mule.processor.blockingprocessorexecutor.executenext ( blockingprocessorexecutor.java:94 ) org.mule.processor.blockingprocessorexecutor.execute ( blockingprocessorexecutor.java:56 ) org.mule.processor.abstractrequestresponsemessageprocessor.processblocking ( abstractrequestresponsemessageprocessor.java:56 ) org.mule.processor.abstractrequestresponsemessageprocessor.process ( abstractrequestresponsemessageprocessor.java:47 ) org.mule.execution.exceptiontomessagingexceptionexecutioninterceptor.execute ( exceptiontomessagingexceptionexecutioninterceptor.java:24 ) org.mule.execution.messageprocessornotificationexecutioninterceptor.execute ( messageprocessornotificationexecutioninterceptor.java:107 ) org.mule.execution.messageprocessorexecutiontemplate.execute ( messageprocessorexecutiontemplate.java:44 ) org.mule.processor.blockingprocessorexecutor.executenext ( blockingprocessorexecutor.java:94 ) org.mule.processor.blockingprocessorexecutor.execute ( blockingprocessorexecutor.java:56 ) org.mule.module.ws.consumer.wsconsumer $ 1.processnext ( wsconsumer.java:183 ) org.mule.processor.abstractrequestresponsemessageprocessor.processblocking ( abstractrequestresponsemessageprocessor.java:56 ) org.mule.processor.abstractrequestresponsemessageprocessor.process ( abstractrequestresponsemessageprocessor.java:47 ) org.mule.execution.exceptiontomessagingexceptionexecutioninterceptor.execute ( exceptiontomessagingexceptionexecutioninterceptor.java:24 ) org.mule.execution.messageprocessornotificationexecutioninterceptor.execute ( messageprocessornotificationexecutioninterceptor.java:107 ) org.mule.execution.messageprocessorexecutiontemplate.execute ( messageprocessorexecutiontemplate.java:44 ) org.mule.processor.blockingprocessorexecutor.executenext ( blockingprocessorexecutor.java:85 ) org.mule.processor.blockingprocessorexecutor.execute ( blockingprocessorexecutor.java:56 ) org.mule.execution.exceptiontomessagingexceptionexecutioninterceptor.execute ( exceptiontomessagingexceptionexecutioninterceptor.java:24 ) org.mule.execution.messageprocessornotificationexecutioninterceptor.execute ( messageprocessornotificationexecutioninterceptor.java:107 ) org.mule.execution.messageprocessorexecutiontemplate.execute ( messageprocessorexecutiontemplate.java:44 ) org.mule.module.ws.consumer.wsconsumer.process ( wsconsumer.java:107 ) org.mule.execution.exceptiontomessagingexceptionexecutioninterceptor.execute ( exceptiontomessagingexceptionexecutioninterceptor.java:24 ) org.mule.execution.messageprocessornotificationexecutioninterceptor.execute ( messageprocessornotificationexecutioninterceptor.java:107 ) org.mule.execution.messageprocessorexecutiontemplate.execute ( messageprocessorexecutiontemplate.java:44 ) org.mule.processor.blockingprocessorexecutor.executenext ( blockingprocessorexecutor.java:85 ) org.mule.processor.blockingprocessorexecutor.execute ( blockingprocessorexecutor.java:56 ) org.mule.execution.exceptiontomessagingexceptionexecutioninterceptor.execute ( exceptiontomessagingexceptionexecutioninterceptor.java:24 ) org.mule.execution.messageprocessorexecutiontemplate.execute ( messageprocessorexecutiontemplate.java:44 ) org.mule.processor.blockingprocessorexecutor.executenext ( blockingprocessorexecutor.java:94 ) org.mule.processor.blockingprocessorexecutor.execute ( blockingprocessorexecutor.java:56 ) org.mule.processor.asyncinterceptingmessageprocessor.process ( asyncinterceptingmessageprocessor.java:102 ) org.mule.execution.exceptiontomessagingexceptionexecutioninterceptor.execute ( exceptiontomessagingexceptionexecutioninterceptor.java:24 ) org.mule.execution.messageprocessornotificationexecutioninterceptor.execute ( messageprocessornotificationexecutioninterceptor.java:107 ) org.mule.execution.messageprocessorexecutiontemplate.execute ( messageprocessorexecutiontemplate.java:44 ) org.mule.processor.blockingprocessorexecutor.executenext ( blockingprocessorexecutor.java:94 ) org.mule.processor.blockingprocess ... * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * { code } [ 2 ] mule application to try it out { code : xml|title=mule app.xml } < ? xml version= '' 1.0 '' encoding= '' utf-8 '' ? > < mule xmlns : dw= '' http : //www.mulesoft.org/schema/mule/ee/dw '' xmlns : ws= '' http : //www.mulesoft.org/schema/mule/ws '' xmlns : http= '' http : //www.mulesoft.org/schema/mule/http '' xmlns= '' http : //www.mulesoft.org/schema/mule/core '' xmlns : doc= '' http : //www.mulesoft.org/schema/mule/documentation '' xmlns : spring= '' http : //www.springframework.org/schema/beans '' version= '' ee-3.7.0 '' xmlns : xsi= '' http : //www.w3.org/2001/xmlschema-instance '' xsi : schemalocation= '' http : //www.springframework.org/schema/beans http : //www.springframework.org/schema/beans/spring-beans-current.xsd http : //www.mulesoft.org/schema/mule/core http : //www.mulesoft.org/schema/mule/core/current/mule.xsd http : //www.mulesoft.org/schema/mule/ws http : //www.mulesoft.org/schema/mule/ws/current/mule-ws.xsd http : //www.mulesoft.org/schema/mule/http http : //www.mulesoft.org/schema/mule/http/current/mule-http.xsd http : //www.mulesoft.org/schema/mule/ee/dw http : //www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd '' > < http : listener-config name= '' http_listener_configuration '' host= '' 0.0.0.0 '' port= '' 8081 '' doc : name= '' http listener configuration '' / > < http : request-config name= '' http_request_configuration_good_creds '' doc : name= '' http request configuration '' > < http : basic-authentication username= '' admin '' password= '' admin '' / > < /http : request-config > < http : request-config name= '' http_request_configuration_bad_creds '' doc : name= '' http request configuration '' > < http : basic-authentication username= '' admin '' password= '' admin___aaaaaaaaaaaaaaaaaaaaaaa '' / > < /http : request-config > < ws : consumer-config name= '' web_service_consumer_bad_creds '' wsdllocation= '' http : //localhost:9000/acme-crm/orders ? wsdl '' service= '' ordermanagementservice '' port= '' ordermanagementport '' serviceaddress= '' http : //localhost:9000/acme-crm/orders '' connectorconfig= '' http_request_configuration_bad_creds '' doc : name= '' web service consumer '' / > < ws : consumer-config name= '' web_service_consumer_good_creds '' wsdllocation= '' http : //localhost:9000/acme-crm/orders ? wsdl '' service= '' ordermanagementservice '' port= '' ordermanagementport '' serviceaddress= '' http : //localhost:9000/acme-crm/orders '' connectorconfig= '' http_request_configuration_good_creds '' doc : name= '' web service consumer '' / > < flow name= '' wsc_wrong_credflow '' > < http : listener config-ref= '' http_listener_configuration '' path= '' /badcredentials '' doc : name= '' badcredentials '' / > < dw : transform-message doc : name= '' transform message '' > < dw : set-payload > < ! [ cdata [ % dw 1.0 % output application/xml % namespace ns0 http : //server.connect.mulesoft.org/ -- - { ns0 # create : { order : { client : `` failurecreatingorder ''   clientid : 1   description : `` somedesc ''   id : 1   items : { sko : 1 }   shippingdate : |2003-10-01t23:57:59z| } } } ] ] > < /dw : set-payload > < /dw : transform-message > < ws : consumer config-ref= '' web_service_consumer_bad_creds '' operation= '' create '' doc : name= '' web service consumer '' / > < /flow > < flow name= '' wsc_wrong_credflow1 '' > < http : listener config-ref= '' http_listener_configuration '' path= '' /goodcredentials '' doc : name= '' /goodcredentials '' / > < dw : transform-message doc : name= '' transform message '' > < dw : set-payload > < ! [ cdata [ % dw 1.0 % output application/xml % namespace ns0 http : //server.connect.mulesoft.org/ -- - { ns0 # create : { order : { client : `` successcreatingorder ''   clientid : 1   description : `` description ''   id : 1   items : { sko : 1 }   shippingdate : |2003-10-01t23:57:59z| } } } ] ] > < /dw : set-payload > < /dw : transform-message > < ws : consumer config-ref= '' web_service_consumer_good_creds '' operation= '' create '' doc : name= '' web service consumer '' / > < /flow > < /mule > { code }
821,message mime type/encoding must be reset when payload is set without a datatype . defaultmulemessage # setpayload ( object ) is maintaining previous mimetype/encoding instead of cleaning it   this is causing issues as transformers read the payload value taking in account the mimetype   which wo n't match the payload that was set .
822,cxf does not set the correct mimetype . if payload was a stream and it was consumed and converted to string ( for ex . after a logger ) dw fails .
823,new http listener not working with some kind of attachments . using soapui to call a cxf ws with an attachment i discover that http module was crashing . see attachment . workaround was to use deprecated http endpoint .
824,upgrade to spring 4.2.x . we are in 4.1.6   would n't require a big effort . consider upgrading spring security too .
825,performance degradation on registry lookup . because the mule registry was unified on spring   lookup and get operations take longer to execute because spring checks for prototypes   etc . we should add a cache to speed up lookups of things that we know are not prototypes
826,concurrent calls to the oauth2 authorize messageprocessor fail when passing different values for accesstokenurl . when the authorize messageprocessor is invoked by 2 different users at the same time and each of those invocations is done with a different value for the accesstokenurl   the access token request for one of them is made to the wrong url . i am using the salesforce connector v6.2.1 and this is how my authorize call looks like : < sfdc : authorize display= '' # [ flowvars [ 'display ' ] ] '' authorizationurl= '' # [ flowvars [ 'salesforceurl ' ] + '/authorize ' ] '' accesstokenurl= '' # [ flowvars [ 'salesforceurl ' ] + '/token ' ] '' config-ref= '' sfdcconnectorconfig '' state= '' # [ payload ] '' accesstokenid= '' # [ flowvars [ 'remoteuserid ' ] ] '' / > the flowvar salesforceurl can take 2 possible values   which are : https : //login.salesforce.com ( salesforce production ) https : //test.salesforce.com ( salesforce sandbox ) when a user does the oauth dance to login.salesforce.com at the same time another user does the oauth dance to test.salesforce.com   one of the dances fail . -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- i believe the problem can be found in the way the accesstokenurl is retrieved and saved by these 2 processors ( in mule-devkit-support ) : - org.mule.security.oauth.processor.baseoauth2authorizemessageprocessor < t > - org.mule.security.oauth.processor.oauth2fetchaccesstokenmessageprocessor the baseoauth2authorizemessageprocessor < t > ( line 81 ) saves the accesstokenurl value in the defaultunauthorizedconnector object of the oauth2manager . the oauth2fetchaccesstokenmessageprocessor ( line 57 ) obtains an oauth2adapter ( used to fetch the access token ) from the oauth2manager . the oauth2manager creates the adapter setting the accesstokenurl ( line 256 baseoauth2manager < t > ) with the value taken from the defaultunauthorizedconnector object . https : //github.com/mulesoft/mule/blob/mule-3.5.2/modules/devkit-support/src/main/java/org/mule/security/oauth/processor/baseoauth2authorizemessageprocessor.java # l81 https : //github.com/mulesoft/mule/blob/mule-3.5.2/modules/devkit-support/src/main/java/org/mule/security/oauth/processor/oauth2fetchaccesstokenmessageprocessor.java # l57 https : //github.com/mulesoft/mule/blob/mule-3.5.2/modules/devkit-support/src/main/java/org/mule/security/oauth/baseoauth2manager.java # l256 the defaultunauthorizedconnector of the oauth2manager is common to all events and threads . i believe that when 2 users are doing the oauth dance at the same time the accesstokenurl value of the defaultunauthorizedconnector is being overwritten by the second user before the first is able to fetch the access token .
827,oauth2 refresh token logic fails after restart for preexistent connection . this issue is related to the problem encountered in jira mule-8277 . after restarting an application that uses the box connector   the first time a box request is made with a preexisting box connection   that has an expired access token in its oauthstate   a refresh token process is triggered that does not attempt to save the refresh and access token obtained from box in the connector 's objectstore . the box connector postauthorize method invokes one of the connector 's processors in order to retrieve the id of the user after the oauth2 dance for identification purposes . that request within the postauthorize triggers the first refresh token process for the connector on its first use after restart . the way to reproduce the issue would be : - run a mule application on mule 3.6.2 with the box connector and a persistent objectstore for it - do the oauth dance with a box user using the authorize messageprocessor . - wait until the box access token expires or modify it in the oauthstate saved in the objectstore to make it invalid - restart the mule application and attempt to run a box messageprocessor like < box : get-user / > twice . ( the first attempt should refresh but not save and the second should fail to refresh )
828,unable to deploy application in mule 3.7.0 . nowadays   if you want to create a proxy   you have to specify the port name and the soapversion for each binding . this information is provided by the wsdl   so it should n't be required   the proxies should detect them automatically . as a consequence   if you have an api with multiple ports   one of them receiving a soap 1.1 envelope   and other one receiving a soap 1.2 envelope   and if you do n't specify the port and the soapversion in both proxies ( service and client ) you will not be able to send a soap 1.2 message . this means that a simple proxy can not be used with both types of soap versions .
829,tests for http connector in httpsecurityfilterfunctionaltestcase depend on tests executed one the http transport . org.mule.module.cxf.httpsecurityfilterfunctionaltestcase is executed on flows using http transport and http connector . all test pass under the current configuration as the http transport tests are executed before the http connector 's . running the connector test only or switching the order breaks the following tests : * testauthenticationauthorisedgethttps * testauthenticationauthorisedposthttps * testauthenticationfailurebadcredentialsgethttps * testauthenticationfailurebadcredentialsposthttps
830,require jdk8 . make jdk8 required and set the compilation level to 1.8
831,fix ext-api version in 3.x . further development of the ext-api will continue on the mule 4 branch and thus the version of it should be fix for 3.x
832,improve usability to manage cookies in the http listener . currently   the only way to handle cookies in the http listener is through the set-cookie and cookie headers ( reading and setting them manually ) . improve the usability so that the user does n't have to manually parse a cookie sent by the client   or know how to create a set-cookie header . ( probably by adding come cookie object as the old http transport had   and adding some new syntax to the response-builder element in the config ) .
833,exceptions are wrapped in extensions api . there 's a problem when throwing certain exceptions . i was invoking a non existent method in the operation of an extension   expecting the nosuchmethodexception to be wrapped by a messagingexception . the result was a messagingexception wrapping a undeclaredthrowableexception that then contained my exception . i tracked it down to the rethrowruntimeexception method in class org.springframework.util.reflectionutils : public static void rethrowruntimeexception ( throwable ex ) { if ( ex instanceof runtimeexception ) { throw ( runtimeexception ) ex ; } if ( ex instanceof error ) { throw ( error ) ex ; } throw new undeclaredthrowableexception ( ex ) ; } so it seems this involves all exceptions that are not runtimeexception or error .
834,mule-maven-plugin cloudhub deployment fails when domain is already in use . when trying to deploy an application to cloudhub   deployment fails if the domain is already in use . plugin should validate that the domain is free before trying to deploy the application .
835,mule-maven-plugin cloudhub redeployment configuration loss . when you use the maven plugin to redeploy an application with the redeploy=true flag   the existing application gets deleted before the updated application is deployed . this behavior causes all cloudhub configured properties to be lost   and the plugin currently supports only a few of the configurations to be set on the pom file . cloudhub configurations such as properties   insight and logging need to be reconfigured every time the application is deployed . ideally   we should be able to specify all configurations so they can be updated through the pom file   or the maven plugin should redeploy without deleting the existing application so we do n't lose the configuration .
836,write documentation for the validations module . write documentation for the validations module
837,add the concept of exceptionenricher in ext-api . add the concept of an exceptionenricher in the ext-api which gets invoked whenever an operation throws an exception . this is useful to avoid repetitive try .. catch blocks . it would be defined by an interface roughly looking like this { code : java } public interface exceptionenricher { exception enrichexception ( exception e ) ; } { code } then you can declare it at an extension level : { code : java } @ extension @ operations ( operations.class ) ; @ onexception ( handler = petexceptionenricher.class ) public class petstoreconnector { … } { code } or at a configuration level : { code : java } @ configuration ( name= '' pooled-config '' ) @ pooledconnector ( petclientconnectionhandler.class ) @ onexception ( handler = pooledpetconnectionexceptionenricher.class ) public class pooledconnectionconfig { } { code } a simple implementation would look similar to this : { code : java } public class petexceptionenricher implements exceptionenricher { public exception enrichexception ( exception e ) { if ( irrelevantexception ( e ) ) { logger.error ( e.getmessage ( ) ) } else if ( e instanceof socketexception ) { return new connectionexception ( e ) ; // wants to reconnect } else { return e ; } } } { code }
838,implement reconnection on the ext-api . implement reconnection on the ext-api
839,implement connection validation policy on ext-api . create a mechanism so that connections can be validated to still be functional . notice that this is not design time connection testing but runtime validation of a connection being usable . if the validation fails   then the reconnection workflow should be triggered
840,unclear message when more than one transformer is available . when mule finds more than one transformer flow execution fails . in this case we should show more information about the problem to the user   like why those transformers where selected and what to do to solve the problem .
841,mule-maven-plugin cloudhub deployment does not check for file existence . when you try to deploy a mule application through a zip file   the maven plugin does not check if the file actually exists . if it is an unexistent file   the deployment process starts anyway and the application is created in cloudhub using the name of the given unexistent file . the build fails because it ca n't deploy the application but the changes in cloudhub are already done and they 're not rolled back . the expected behavior is that the plugin checks if the file exists before making any change in cloudhub . if not   it should throw an exception and fail the build .
842,connector and endpoint message notifications not fired when an exception is thrown . when there is an exception during the execution of a flow there are no connectormessagenotification ( when the new http module is used ) or no endpointmessagenotification ( when the http transport is used ) sent   even when there is a response ( with a failed status code ) . expected : some connector/endpoint message notification ( maybe an specific type   like message_error ) fired for this case . actual : no notification . attaching app showing the behavior
843,release mvel 2.1.9-mule-008 . perform a release of mvel that contains the fix for mule-8831 # update pom.xml to meet maven central repository requirements # update build plan to deploy to maven central # sign the jar using gpg # add javadoc plugin for releases
844,allow insecure https connections . it is now impossible to disable all certificate validations in https   which would be useful for qa and early development scenarios . though -dcom.ning.http.client.asynchttpclientconfig.acceptanycertificate=true is intended for this   we are always adding our own default tlscontext when the protocol is https and thus bypassing that ahc logic .
845,expand flowstack functionality . the list of processors that were executed as part of a message should contain all processors executed   for all flows   so that it can be queried even after the message processing finished .
846,include the name of the xml file where an element is declared when logging the element path . currently   only the mule path and the application name are being logged when logging the path of an element as part of an exception message . for large applications composed of many files   the name of the xml file will be helpful to better find the component where the exception happened .
847,upgrade bouncycastle libraries to version 1.53 or newer . we should consider upgrading bouncycastle to version 1.53 to leverage the latest bugfixes . this is a security related library and we should always use the latest stable version .
848,build mule 3.7.3 final binaries . build mule 3.7.3 final binaries
849,update commons-collections version . the apache commons-collections library ( 4.0   3.2.1 and older ) has a vulnerability in the invokertransformer object where serializable collections are allowed to execute arbitrary java code   whenever the library is in the classpath . if we have an endpoint that receives a serializable object   that object can invoke arbitrary java code at the moment we try to deserialize it . we should upgrade to the fixed version ( 3.2.2 ) as soon as it 's available or remove the class from our classpath .
850,indexoutofboundsexception when header key has empty value . when an empty header is sent to a jetty endpoint   it fails with said exception .
851,set-property throws runtime exception if the propertyname is empty . when using set-property   if the propertyname is empty   the schema consider it as a valid value   but every attept to use it throws a java.lang.stringindexoutofboundsexception . as a side effect   this also makes the request fail if the set-property is in a flow which contains an http : listener element . the solution imho would be changing the mule.xsd schema and adding a minlength value to the set-property element . how to reproduce : - use the following mule-config . the deployment of the app will be successful . { code } < ? xml version= '' 1.0 '' encoding= '' utf-8 '' ? > < mule xmlns : http= '' http : //www.mulesoft.org/schema/mule/http '' xmlns= '' http : //www.mulesoft.org/schema/mule/core '' xmlns : doc= '' http : //www.mulesoft.org/schema/mule/documentation '' xmlns : spring= '' http : //www.springframework.org/schema/beans '' version= '' ee-3.7.0 '' xmlns : xsi= '' http : //www.w3.org/2001/xmlschema-instance '' xsi : schemalocation= '' http : //www.springframework.org/schema/beans http : //www.springframework.org/schema/beans/spring-beans-current.xsd http : //www.mulesoft.org/schema/mule/core http : //www.mulesoft.org/schema/mule/core/current/mule.xsd http : //www.mulesoft.org/schema/mule/http http : //www.mulesoft.org/schema/mule/http/current/mule-http.xsd '' > < http : listener-config name= '' http_listener_configuration '' host= '' 0.0.0.0 '' port= '' 8981 '' doc : name= '' http listener configuration '' / > < flow name= '' set-property-errorflow '' > < http : listener config-ref= '' http_listener_configuration '' path= '' /set-property '' doc : name= '' http '' > < /http : listener > < set-property doc : name= '' property '' propertyname= '' '' value= '' test '' / > < logger level= '' info '' doc : name= '' logger '' / > < /flow > < /mule > { code } when making a request   the config produces the following exception   and the response * never comes back * . { code } error 2015-11-16 14:42:01 527 [ [ set-property-error ] .http_listener_configuration.worker.01 ] org.mule.exception.defaultmessagingexceptionstrategy : caught exception in exception strategy : string index out of range : 0 java.lang.stringindexoutofboundsexception : string index out of range : 0 java.lang.string.charat ( string.java:658 ) ~ [ ? :1.7.0_71 ] org.glassfish.grizzly.http.httpheader $ builder.handlespecialheaderadd ( httpheader.java:1240 ) ~ [ grizzly-http-2.3.21.jar:2.3.21 ] org.glassfish.grizzly.http.httpheader $ builder.header ( httpheader.java:1134 ) ~ [ grizzly-http-2.3.21.jar:2.3.21 ] org.mule.module.http.internal.listener.grizzly.baseresponsecompletionhandler.buildhttpresponsepacket ( baseresponsecompletionhandler.java:34 ) ~ [ mule-module-http-3.7.0.jar:3.7.0 ] org.mule.module.http.internal.listener.grizzly.responsecompletionhandler. < init > ( responsecompletionhandler.java:52 ) ~ [ mule-module-http-3.7.0.jar:3.7.0 ] org.mule.module.http.internal.listener.grizzly.grizzlyrequestdispatcherfilter $ 1.responseready ( grizzlyrequestdispatcherfilter.java:96 ) ~ [ mule-module-http-3.7.0.jar:3.7.0 ] org.mule.module.http.internal.listener.httpmessageprocessortemplate.sendresponsetoclient ( httpmessageprocessortemplate.java:99 ) ~ [ mule-module-http-3.7.0.jar:3.7.0 ] org.mule.execution.asyncresponseflowprocessingphase.runphase ( asyncresponseflowprocessingphase.java:83 ) ~ [ mule-core-3.7.0.jar:3.7.0 ] org.mule.execution.asyncresponseflowprocessingphase.runphase ( asyncresponseflowprocessingphase.java:38 ) ~ [ mule-core-3.7.0.jar:3.7.0 ] org.mule.execution.phaseexecutionengine $ internalphaseexecutionengine.phasesuccessfully ( phaseexecutionengine.java:65 ) ~ [ mule-core-3.7.0.jar:3.7.0 ] org.mule.execution.phaseexecutionengine $ internalphaseexecutionengine.phasesuccessfully ( phaseexecutionengine.java:69 ) ~ [ mule-core-3.7.0.jar:3.7.0 ] com.mulesoft.mule.throttling.throttlingphase.runphase ( throttlingphase.java:185 ) ~ [ mule-module-throttling-ee-3.7.0.jar:3.7.0 ] com.mulesoft.mule.throttling.throttlingphase.runphase ( throttlingphase.java:1 ) ~ [ mule-module-throttling-ee-3.7.0.jar:3.7.0 ] org.mule.execution.phaseexecutionengine $ internalphaseexecutionengine.process ( phaseexecutionengine.java:114 ) ~ [ mule-core-3.7.0.jar:3.7.0 ] org.mule.execution.phaseexecutionengine.process ( phaseexecutionengine.java:41 ) ~ [ mule-core-3.7.0.jar:3.7.0 ] org.mule.execution.mulemessageprocessingmanager.processmessage ( mulemessageprocessingmanager.java:32 ) ~ [ mule-core-3.7.0.jar:3.7.0 ] org.mule.module.http.internal.listener.defaulthttplistener $ 1.handlerequest ( defaulthttplistener.java:126 ) ~ [ mule-module-http-3.7.0.jar:3.7.0 ] org.mule.module.http.internal.listener.grizzly.grizzlyrequestdispatcherfilter.handleread ( grizzlyrequestdispatcherfilter.java:83 ) ~ [ mule-module-http-3.7.0.jar:3.7.0 ] org.glassfish.grizzly.filterchain.executorresolver $ 9.execute ( executorresolver.java:119 ) ~ [ grizzly-framework-2.3.21.jar:2.3.21 ] org.glassfish.grizzly.filterchain.defaultfilterchain.executefilter ( defaultfilterchain.java:283 ) ~ [ grizzly-framework-2.3.21.jar:2.3.21 ] org.glassfish.grizzly.filterchain.defaultfilterchain.executechainpart ( defaultfilterchain.java:200 ) ~ [ grizzly-framework-2.3.21.jar:2.3.21 ] org.glassfish.grizzly.filterchain.defaultfilterchain.execute ( defaultfilterchain.java:132 ) ~ [ grizzly-framework-2.3.21.jar:2.3.21 ] org.glassfish.grizzly.filterchain.defaultfilterchain.process ( defaultfilterchain.java:111 ) ~ [ grizzly-framework-2.3.21.jar:2.3.21 ] org.glassfish.grizzly.processorexecutor.execute ( processorexecutor.java:77 ) ~ [ grizzly-framework-2.3.21.jar:2.3.21 ] org.glassfish.grizzly.nio.transport.tcpniotransport.fireioevent ( tcpniotransport.java:536 ) ~ [ grizzly-framework-2.3.21.jar:2.3.21 ] org.glassfish.grizzly.strategies.abstractiostrategy.fireioevent ( abstractiostrategy.java:112 ) ~ [ grizzly-framework-2.3.21.jar:2.3.21 ] org.mule.module.http.internal.listener.grizzly.executorperserveraddressiostrategy.run0 ( executorperserveraddressiostrategy.java:102 ) ~ [ mule-module-http-3.7.0.jar:3.7.0 ] org.mule.module.http.internal.listener.grizzly.executorperserveraddressiostrategy.access $ 100 ( executorperserveraddressiostrategy.java:30 ) ~ [ mule-module-http-3.7.0.jar:3.7.0 ] org.mule.module.http.internal.listener.grizzly.executorperserveraddressiostrategy $ workerthreadrunnable.run ( executorperserveraddressiostrategy.java:125 ) ~ [ mule-module-http-3.7.0.jar:3.7.0 ] java.util.concurrent.threadpoolexecutor.runworker ( threadpoolexecutor.java:1145 ) [ ? :1.7.0_71 ] java.util.concurrent.threadpoolexecutor $ worker.run ( threadpoolexecutor.java:615 ) [ ? :1.7.0_71 ] java.lang.thread.run ( thread.java:745 ) [ ? :1.7.0_71 ] { code }
852,executioninterceptor causes a 50 % regression in the proxy scenario . . we found on the perfci test that the three proxy scenarios : [ module|https : //github.com/mulesoft/performanceworks/tree/master/apps/proxy-mcd/1kb/http_module_proxy ]   [ transport|https : //github.com/mulesoft/performanceworks/tree/master/apps/proxy-mcd/1kb/http_transport_proxy ] and [ jetty|https : //github.com/mulesoft/performanceworks/tree/master/apps/proxy-mcd/1kb/jetty_transport_proxy ] testing back with different builds we found that the regression was introduced between the builds 73 and 76   which relates to the dates 10/02/2015 and 10/05/2015   this reduces the list of possible changes to three commits   reading them one of them was spotted : [ commit|https : //github.com/mulesoft/mule/commit/3426f8762ced0f18b3193ab5384d0ea27b8f6696 ] we rollbacked the change in the ce distribution and was found that this is the cause of the problem   we encourage the team to define how to fix the previous issue to not impact on performance . also during profilling a big contention was found tha ill attache in the logs output that may be the result of this changes regression .
853,webservice consumer : xsd : import for external resources through http fails with java.io.filenotfoundexception . ws consumer ca n't handle imported or included wsdl/xsd files when they are located externally .
854,remove rc4 cipher suites from tls-default.conf . as per https : //tools.ietf.org/html/rfc7465 we should remove this cipher suites from our suggested ones .
855,add missing model validators . the following modelvalidators are missing and should be added : * validate that all configuration models can be used with all operation models . this comes to the fact that an operation can require a connection type for which the available connection providers might be incompatible with certain configs ( moved to mule-9214 ) * validate that no parameters   configs nor operations are named as any of the following reserved words : name   config   configref   connection . * validate clashes on @ parametergroup fields * move some validations currently in immutableparametergroup to validators * validate that all connection providers have different names . hint the user into using the @ alias annotation to customize the provider 's names .
856,add the concept of message sources in the ext-api . allow the ext-api and the ext-framework to define and implement message sources
857,allow sdk to generate studio support . allow the new sdk to optionally generate studio editors and update site . on a first pass we only require functionality similar to that provided by devkit . we 'll iterate more in the future
858,remove vm transport . remove vm transport - all test cases testing vm must be removed - all test cases that are using vm as a mean for testing something else should be migrated to use something else whenever possible . pk created some infrastructure to replace vm usage like functionaltestcase.runflow and < test : queue > component . ( see datasourcepoolinglimittestcase ) - when is not possible to replace vm a new task should be created to cover that scenario when we have the required connectors/features to be able to test it . add the test cases class names so we can use them as input for re-creating the test cases ) . use issue https : //www.mulesoft.org/jira/browse/mule-9307
859,remove ssl transport . 1.2.14 remove ssl transport
860,remove tcp transport . 1.2.13 remove tcp transport
861,remove jms transport . 1.2.17 remove jms transport
862,remove devkit-support module . remove module from the mule 4 project
863,upgrade antlr to 3.5 . we need to upgrade this dependency to match the one in mule-common and avoid conflicts . the affected modules would be drools and jbpm .
864,add support for interfaces as parameters of an @ operation . when using interfaces as parameters of an operation   it fails to generate the extension module giving a missleading wrong error message . whe should add the support to have interfaces as parameters . { code : java } //pojo code public class simplepojo { @ parameter private string somefield ; public string getsomefield ( ) { return somefield ; } public void setsomefield ( string somefield ) { this.somefield = somefield ; } } //interface code public interface myinterface { string getsomemessage ( string orignal ) ; } // @ operations code public class extensionoperations { @ operation public simplepojo pojooperation ( simplepojo pojo ) { return pojo ; } @ operation public void interfaceoperation ( myinterface callback ) { } } { code } current error log : { code } org.mule.extension.api.exception.illegalmodeldefinitionexception : extension 'first ' defines a operation of name 'operation ' which contains a parameter of complex type 'class org.mule.module.extension.firstextension.simplepojo ' . however   operation of name 'interfaceoperation ' defines a parameter of the same name but type 'org.mule.module.extension.firstextension.myinterface ' . complex parameter of different types can not have the same name . org.mule.module.extension.internal.introspection.validation.nameclashmodelvalidator $ validationdelegate.lambda $ validatetoplevelparameters $ 37 ( nameclashmodelvalidator.java:137 ) org.mule.module.extension.internal.introspection.validation.nameclashmodelvalidator $ validationdelegate $ $ lambda $ 26/490407158.accept ( unknown source ) java.util.stream.foreachops $ foreachop $ ofref.accept ( foreachops.java:184 ) java.util.stream.referencepipeline $ 2 $ 1.accept ( referencepipeline.java:175 ) java.util.iterator.foreachremaining ( iterator.java:116 ) java.util.spliterators $ iteratorspliterator.foreachremaining ( spliterators.java:1801 ) java.util.stream.abstractpipeline.copyinto ( abstractpipeline.java:512 ) java.util.stream.abstractpipeline.wrapandcopyinto ( abstractpipeline.java:502 ) java.util.stream.foreachops $ foreachop.evaluatesequential ( foreachops.java:151 ) java.util.stream.foreachops $ foreachop $ ofref.evaluatesequential ( foreachops.java:174 ) java.util.stream.abstractpipeline.evaluate ( abstractpipeline.java:234 ) java.util.stream.referencepipeline.foreach ( referencepipeline.java:418 ) org.mule.module.extension.internal.introspection.validation.nameclashmodelvalidator $ validationdelegate.validatetoplevelparameters ( nameclashmodelvalidator.java:121 ) org.mule.module.extension.internal.introspection.validation.nameclashmodelvalidator $ validationdelegate.validate ( nameclashmodelvalidator.java:107 ) org.mule.module.extension.internal.introspection.validation.nameclashmodelvalidator $ validationdelegate.lambda $ validate $ 33 ( nameclashmodelvalidator.java:77 ) org.mule.module.extension.internal.introspection.validation.nameclashmodelvalidator $ validationdelegate $ $ lambda $ 27/1920186116.accept ( unknown source ) java.util.iterator.foreachremaining ( iterator.java:116 ) java.util.spliterators $ iteratorspliterator.foreachremaining ( spliterators.java:1801 ) java.util.stream.referencepipeline $ head.foreach ( referencepipeline.java:580 ) org.mule.module.extension.internal.introspection.validation.nameclashmodelvalidator $ validationdelegate.validate ( nameclashmodelvalidator.java:77 ) org.mule.module.extension.internal.introspection.validation.nameclashmodelvalidator $ validationdelegate.access $ 000 ( nameclashmodelvalidator.java:52 ) org.mule.module.extension.internal.introspection.validation.nameclashmodelvalidator.validate ( nameclashmodelvalidator.java:49 ) org.mule.module.extension.internal.introspection.defaultextensionfactory.lambda $ createfrom $ 39 ( defaultextensionfactory.java:105 ) org.mule.module.extension.internal.introspection.defaultextensionfactory $ $ lambda $ 18/1393913553.accept ( unknown source ) java.lang.iterable.foreach ( iterable.java:75 ) org.mule.module.extension.internal.introspection.defaultextensionfactory.createfrom ( defaultextensionfactory.java:105 ) org.mule.module.extension.internal.introspection.defaultextensionfactory.createfrom ( defaultextensionfactory.java:94 ) org.mule.module.extension.studio.internal.capability.studio.editor.studioeditorgeneratortest.testgeneration ( studioeditorgeneratortest.java:63 ) sun.reflect.nativemethodaccessorimpl.invoke0 ( native method ) sun.reflect.nativemethodaccessorimpl.invoke ( nativemethodaccessorimpl.java:62 ) sun.reflect.delegatingmethodaccessorimpl.invoke ( delegatingmethodaccessorimpl.java:43 ) java.lang.reflect.method.invoke ( method.java:497 ) org.junit.runners.model.frameworkmethod $ 1.runreflectivecall ( frameworkmethod.java:47 ) org.junit.internal.runners.model.reflectivecallable.run ( reflectivecallable.java:12 ) org.junit.runners.model.frameworkmethod.invokeexplosively ( frameworkmethod.java:44 ) org.junit.internal.runners.statements.invokemethod.evaluate ( invokemethod.java:17 ) org.junit.internal.runners.statements.runbefores.evaluate ( runbefores.java:26 ) org.junit.internal.runners.statements.runafters.evaluate ( runafters.java:27 ) org.junit.rules.testwatcher $ 1.evaluate ( testwatcher.java:55 ) { code }
865,@ optional should not be allowed when @ parameter group is used . when using @ parametergroup   @ optional should be marked as an error . { code : java } @ operation public simplepojo parametergrouppojooperationwithdefault ( @ optional @ parametergroup simplepojo pojo ) { return pojo ; } { code }
866,change transformationservice to not mutate mulemessage . there are two parts to this : * applytransformers ( ) methods : * * update applytransformers ( ) method signatures to return a mulemessage instance . * * change implementation of applytransformers ( ) to return a new message instance with the result of the transformation rather than mutating the original message instance . * * update all uses to use the return value as the result of the transformation . * getpayload ( ) methods : * * remove the logic that transparently transforms consumable payloads by mutating the message and setting a byte [ ] representation . * * calls to getpayload ( ) that require transformation of a consumable payload will now fail . * * update uses to perform transformation to non-consumable prior to getpayload ( ) if required . * * update getpayloadforlogging ( ) implementation to return something like “ stream payload ( inputstream ) ” instead of failing or performing translation . * * ensure getpayloadforlogging ( ) is only used for system logging and not used be user configured < logger/ > component .
867,upgrade to log4j latest version . https : //issues.apache.org/jira/browse/log4j2-998 figures as already fixed in 2.3 and 2.5 is already out . mule is currently using 2.1 this may allow to get rid to some custom hacks currently being done in mule side .
868,release mvel 2.1.9-mule-009 . perform a release of mvel that contains the fix for the linked issues .
869,users should not be forced to use @ parameter to expose pojo fields . in order to expose pojo fields users are force to annotate the each field with @ parameter . when users consumes external jar   they can not modify the code . also if they generate java stubs from a wsdl using cxf   they will need to modify a huge amount of pojos just to get this to work properly   and what is worst   if a new version of the wsdl goes out and you try to update your connector   you will lose everything after generating the new stubs . the mechanism should be that if the pojo has any field annotated with @ parameter   then the current logic is valid and should only expose those fields . however   if the pojo has no @ parameter   every single field that has a gettter and setter should be taken into account ( including nested pojo fields )
870,implement a testing tool to check misusages of lifecycles . allow a build to be run with a profile that fails tests when any of the following happen : * lifecycle method is called more than once for a given object . * dispose/stop method called without matching initialise/start having been called ( if defined ) . check for any possible combination scenarios . run the test suite with this tool enabled and verify any test failures caused by it . file a bug for each component that has a failure . provide this functionality to other teams do they can validate themselves the proper lifecycle usage of their defined objects .
871,add support for a palette name so that extension can define the display name ( like the friendlyname of @ connector ) . users need to be able to specify a friendly name that will be used to generate the display name of the extension . for example salesforce extension should say `` salesforce '' in the palette   and we can not generate this form the namespace nor the class name .
872,spike on new ftp connector . spike on a new ftp connector which is consistent with the new file one
873,http requester + oauth : add the option to send client id/secret with basic auth using client credentials . right now the http requester sends the client_id and client_secret in the request-body . this is a valid option but the rfc also allows to send them using basic authentication : * https : //tools.ietf.org/html/rfc6749 # section-2.3.1 for example paypal and spotify apis only support to send them using basic auth . * example : https : //developer.paypal.com/docs/api/ # oauth-request -- response
874,connectionprovider gethandlingstrategy must receive a parameterized connectionhandlingstrategyfactory . current connectionprovider gethandlingstrategy interface method receive a connectionhandlingstrategyfactory raw type parameter   this results in an unchecked warning on every implementation of this method . the signature of the method must be { code : java } connectionhandlingstrategy < connection > gethandlingstrategy ( connectionhandlingstrategyfactory < config   connection > handlingstrategyfactory ) ; { code }
875,configurations should be able to have dynamic parameters which do n't trigger dynamic configurations . currently   all configuration parameters with expression values are translated into a dynamicconfigurationresolver . this is fine for most cases there 're other cases though in which it 's desirable to have dynamic values which should n't necessarily trigger a new config instance . for example   an ftp connector which needs to switch between ascii and binary mode . it should be fairly easy to switch modes through the use of an expression   but we do n't want to trigger new connection pools for each case . only connection credentials should trigger that . to enable this case   we can leverage the valueresolver < t > object which already exists in the extension-support module . the config can have : { code : java } @ parameter private valueresolver < string > transfermode ; { code } and then when you want to get the value you go : { code : java } ftpconnector.gettransfermode ( ) .resolve ( event ) ; { code }
876,add missing syntax validators for annotation driven extensions . * add missing syntax validators for annotation driven extensions * * validate @ useconfig or @ useconfig are used more that once * validate if configurations or connection providers from the @ extension are compatible with every @ useconfig or @ connection type from the @ operations
877,update spring schemas to 3.8 . update spring schemas to 3.8
878,add buildpaths method to notification utils that returns map < messageprocessor   string > . as a result of a refactor you 've change the return type of notificationutils.buildpaths this from munit point of view brakes backward and render future munit versions incompatible with older versions of mule . if possible we would like you guys to change it back to return the same type .
879,if the @ xml annotation is not present   the extension should not fail . . currently when creating an extension   the @ xml annotation is mandatory   we should specify at least the namespace of the extension . if the @ xml annotation is not present   this error is thrown [ error ] diagnostic : error : xml model property can not be null . instead of creating a validator for avoiding this error   we must implement a default behaviour for the @ xml annotation when it is not present . the behavior should be that : 1 ) the annotation can be either completely absent or present but with all optional parameters 2 ) the namespace attribute will be derived from the extension name by transforming to lower case   removing all occurrences of the `` connector '' string and hyphenizing 3 ) the schemalocation should default to http : //www.mulesoft.org/schema/mule/ { 1 }   where { 1 } is replaced by the namespace value 4 ) the schemaversion should default to the major and minor components of the semver extension version   without classifiers . for example : 4.0.0-snapshot should translate to 4.0
880,sdk : split extensions parent pom   for internal and external extensions . * split extensions parent pom * * create a new parent pom for external ( to mule distribution ) extensions   to be used by mulesoft internal connectors ( salesforce   workday   etc ) and third party ( custom connectors   certification ) . * * one of the problems the actual pom is that project version ( the extension version ) is attached to all mule dependencies version . for external connectors   this should be detached . * rollback the changes made in the actual extensions pom   to be used exclusively for mule distribution extensions . ( mule-9055 )
881,allow users to use file/directory pickers as editors for their mule extensions . for file and ftp extensions it would be better to have a directory picker as editor instead of a plain string editor . studio supports path editors for the current file connector as shown in the images . the proposed support for this is to create a @ path annotation to mark fields that need this kind of editor .
882,remove extensions test jars from mule distribution . currently   when creating the studio distributions   extensions used for testing only are being discovered inside the runtime . ( heisenberg extension ) . this jar should not be included in the distribution   or at least we should have a flag that needs to be explicitly provided for this jars to be included .
883,allow users to use password editor for sensitive data fields . when a field is related to sentisitive data   like passwords or tokens   users should be able to use the password editor field . to do this   users should be able to mark the parameters and configurable field with @ password .
884,allow users to use text editor for long string input fields . for long string input fields   users should be able to mark the fields with @ text to generate a text editor instead of a string editor   as the devkit did .
885,test client credentials token request authentication . since mule-9204 is done   we need to test that this actually works for the apis mentioned . || oauth server || using basic auth || encode in body || |paypal api| success | n/a | |twitter api| success | n/a | |facebook api| n/a | success | |spotify api| success | success | |oauth provider| success | success | it was also tested the case when a token expires and then the need to obtain a new one using the spotify api .
886,improve logging when a tls error occurs . right now we might get a `` remotely closed '' ioexception in the requester   with no relation to tls or tip to debug it   and no message at all in the listener .
887,add attributes to mulemessage and make mulemessage extend typedvalue . . also make updates to mel as required .
888,refactor expressionlanage and abstractmessagetransformer to operate on muleevent . refactor mel to operate on muleevent and update event.message when message is mutated .
889,extensions fail to build if parameter has a wildcard generic . consider an extension with a parameter like this : { code : java } @ parameter private objectstore < ? extends serializable > timeobjectstore ; { code } building such a extension results on the following error : { code } [ error ] diagnostic : error : ca n't get qualifier for a null class java.lang.illegalargumentexception : ca n't get qualifier for a null class org.mule.extension.api.introspection.dataqualifierfactory.getqualifier ( dataqualifierfactory.java:176 ) org.mule.extension.api.introspection.datatype.of ( datatype.java:86 ) org.mule.extension.api.introspection.datatype.of ( datatype.java:38 ) org.mule.extension.api.introspection.datatype.of ( datatype.java:62 ) org.mule.module.extension.internal.util.introspectionutils.todatatype ( introspectionutils.java:172 ) org.mule.module.extension.internal.util.introspectionutils.getfielddatatype ( introspectionutils.java:118 ) org.mule.module.extension.internal.introspection.annotationsbaseddescriber.declaresingleparameters ( annotationsbaseddescriber.java:223 ) org.mule.module.extension.internal.introspection.annotationsbaseddescriber.declareannotatedparameters ( annotationsbaseddescriber.java:168 ) org.mule.module.extension.internal.introspection.annotationsbaseddescriber.declareconfiguration ( annotationsbaseddescriber.java:163 ) org.mule.module.extension.internal.introspection.annotationsbaseddescriber.declareconfigurations ( annotationsbaseddescriber.java:140 ) org.mule.module.extension.internal.introspection.annotationsbaseddescriber.describe ( annotationsbaseddescriber.java:116 ) { code } the problem is that because the generic is a wildcard   the resolveabletype obtained by introspectionutils.getfielddatatype ( ) returns a null rawclass . as a result   the generated datatype points to a null class which in turn causes a npe when an attempt is made to obtain a qualifier . the sdk should : * ignore a type 's generics one they contain at least one wildcard ( consider cases like map < string   ? > * log a warning when it founds a wildcard generic * also verify this behaviour for the case of operations in which the parameters are obtained from method arguments instead of fields